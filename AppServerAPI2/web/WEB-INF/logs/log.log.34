[INFO][2017-07-20 15:37:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.insertRecord: 
INSERT INTO cds_goods_info(
          
            class_id
         , 
            good_name
         , 
            pinxin
         , 
            good_pic
         , 
            egood_pic
         , 
            image_hash
         , 
            add_date
         , 
            status
         , 
            listorder
         , 
            default_standrad_id
         , 
            good_info
         , 
            market_price
         , 
            box_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-20 15:37:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:33
参数2:荷包蛋
参数3:HBD
参数4:null
参数5:null
参数6:null
参数7:2017-07-20 15:37:55
参数8:0
参数9:1
参数10:null
参数11:null
参数12:null
参数13:null
 
[INFO][2017-07-20 15:37:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 15:37:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-20 15:37:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:37:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-20 15:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-20 15:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-20 15:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-20 15:38:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:38:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-20 15:38:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:38:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-20 15:38:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 15:38:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:
 
[INFO][2017-07-20 15:38:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 15:38:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-20 15:38:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:38:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-20 15:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-20 15:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 15:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-20 15:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-20 15:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-20 15:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-20 15:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-20 15:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:荷包蛋
参数3:荷包蛋
 
[INFO][2017-07-20 15:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-20 15:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:荷包蛋
参数3:荷包蛋
 
[INFO][2017-07-20 15:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 15:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-20 15:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 9 
[INFO][2017-07-20 15:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:荷包蛋
参数3:荷包蛋
 
[INFO][2017-07-20 15:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 9 
[INFO][2017-07-20 15:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:荷包蛋
参数3:荷包蛋
 
[INFO][2017-07-20 15:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-20 15:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-20 15:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-20 15:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-20 15:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:39:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-20 15:39:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:39:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-20 15:39:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-20 15:39:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-20 15:39:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:39:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-20 15:39:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:39:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-20 15:39:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:39:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-20 15:39:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:39:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:
 
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-20 15:40:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:40:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-20 15:40:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:40:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-20 15:40:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:40:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-20 15:40:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.queryGoodNum: 
select  max(good_num) from cds_ms_goods 
[INFO][2017-07-20 15:40:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-20 15:40:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.insertRecord: 
INSERT INTO cds_ms_goods(
          
            class_id
         , 
            good_num
         , 
            good_name
         , 
            pinxin
         , 
            plu_num
         , 
            mode
         , 
            est_type_id
         , 
            listorder
         , 
            status
         , 
            uptime
         , 
            isback
         , 
            isweight
         , 
            good_price
         , 
            is_sync
         , 
            draftsman
         , 
            auditor
         , 
            approver
         , 
            finished_weight
         , 
            gist
         , 
            process
         , 
            out_time
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-20 15:40:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:9000027
参数3:红烧牛腩
参数4:HSN0
参数5:0
参数6:null
参数7:0
参数8:1
参数9:0
参数10:2017-07-20 15:40:23
参数11:0
参数12:0
参数13:0.0
参数14:0
参数15:0
参数16:0
参数17:0
参数18:0
参数19:null
参数20:null
参数21:0
 
[INFO][2017-07-20 15:40:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:40:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-20 15:40:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:40:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-20 15:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ? 
            
            
            
                
                    AND (
                        good_name LIKE '%'+?+'%' OR
                        pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-20 15:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:红烧牛腩
参数3:红烧牛腩
 
[INFO][2017-07-20 15:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ? 
            
            
            
                
                    AND (
                        good_name LIKE '%'+?+'%' OR
                        pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-20 15:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:红烧牛腩
参数3:红烧牛腩
 
[INFO][2017-07-20 15:40:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ? 
            
            
            
                
                    AND (
                        good_name LIKE '%'+?+'%' OR
                        pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-20 15:40:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:红烧牛腩
参数3:红烧牛腩
 
[INFO][2017-07-20 15:40:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ? 
            
            
            
                
                    AND (
                        good_name LIKE '%'+?+'%' OR
                        pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-20 15:40:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:红烧牛腩
参数3:红烧牛腩
 
[INFO][2017-07-20 15:43:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:43:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-20 15:43:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:43:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-20 15:43:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:43:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:
 
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[WARN][2017-07-20 15:46:57] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-07-20 15:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-20 15:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:chenbin
 
[INFO][2017-07-20 15:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 15:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:351
参数2:1032
 
[INFO][2017-07-20 15:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 15:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:352
参数2:1032
 
[INFO][2017-07-20 15:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 15:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:375
参数2:1032
 
[INFO][2017-07-20 15:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 15:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:380
参数2:1032
 
[INFO][2017-07-20 15:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 15:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:376
参数2:1032
 
[INFO][2017-07-20 15:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 15:47:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:355
参数2:1032
 
[INFO][2017-07-20 15:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 15:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:356
参数2:1032
 
[INFO][2017-07-20 15:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-20 15:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-20 15:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-20 15:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:9
参数2:2017-07-20
参数3:2017-07-20
参数4:9
参数5:2017-07-20
参数6:2017-07-20
参数7:9
参数8:2017-07-20
参数9:2017-07-20
参数10:9
参数11:2017-07-20
参数12:2017-07-20
参数13:9
参数14:2017-07-20
参数15:2017-07-20
参数16:9
参数17:2017-07-20
参数18:2017-07-20
 
[INFO][2017-07-20 15:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-20 15:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:2017-07-20
参数2:2017-07-20
参数3:9
参数4:2017-07-19
参数5:2017-07-19
参数6:9
参数7:2017-07-13
参数8:2017-07-13
参数9:9
 
[INFO][2017-07-20 15:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 15:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 15:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:47:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:
 
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 15:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 15:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-20 15:50:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 15:50:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-20 15:50:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:50:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-20 15:50:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 15:50:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-20 15:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 15:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-20 15:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-20 15:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-20 15:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-20 15:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[WARN][2017-07-20 15:51:04] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-7 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-20 15:51:04] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-20 15:51:04] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-20 15:51:04] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:
 
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[WARN][2017-07-20 15:51:06] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-4 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-20 15:51:06] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-20 15:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-20 15:51:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:51:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-20 15:51:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:51:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-20 15:51:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:51:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 15:51:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:51:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 15:51:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:51:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 15:51:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:51:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 15:51:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:51:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 15:51:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:51:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 15:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-20 15:52:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:52:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-20 15:52:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:52:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-20 15:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:53:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-20 15:53:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:53:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-20 15:53:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:53:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-20 15:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-20 15:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:9
参数2:2017-07-20
参数3:2017-07-20
参数4:9
参数5:2017-07-20
参数6:2017-07-20
参数7:9
参数8:2017-07-20
参数9:2017-07-20
参数10:9
参数11:2017-07-20
参数12:2017-07-20
参数13:9
参数14:2017-07-20
参数15:2017-07-20
参数16:9
参数17:2017-07-20
参数18:2017-07-20
 
[INFO][2017-07-20 15:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-20 15:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:2017-07-20
参数2:2017-07-20
参数3:9
参数4:2017-07-19
参数5:2017-07-19
参数6:9
参数7:2017-07-13
参数8:2017-07-13
参数9:9
 
[INFO][2017-07-20 15:53:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:53:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 15:53:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:53:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 15:53:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:53:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 15:54:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:54:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 15:54:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:54:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 15:54:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:54:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 15:55:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:55:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-20 15:55:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:55:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-20 15:55:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:55:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-20 15:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 15:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 15:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 15:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 15:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 15:56:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:56:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 15:56:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:56:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 15:56:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 15:56:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 15:56:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 15:56:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-20 15:56:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 15:56:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 15:56:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 15:56:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:
 
[INFO][2017-07-20 15:56:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 15:56:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-20 15:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 15:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsClassLists: 
select count(0) from (select * from  cds_class)  tmp_count 
[INFO][2017-07-20 15:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 15:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsClassLists: 
select tmp.* from (select (row_number() Over(order by listorder asc)) as rownumber, * from  cds_class) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 15:58:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 15:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE class_name = ?
            and
                brand_id = ? 
[INFO][2017-07-20 15:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:
参数2:1
 
[INFO][2017-07-20 15:59:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE class_name = ?
            and
                brand_id = ? 
[INFO][2017-07-20 15:59:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:菜大师公告
参数2:1
 
[INFO][2017-07-20 15:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE class_name = ?
            and
                brand_id = ? 
[INFO][2017-07-20 15:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:
参数2:1
 
[INFO][2017-07-20 15:59:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE class_name = ?
            and
                brand_id = ? 
[INFO][2017-07-20 15:59:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:
参数2:1
 
[INFO][2017-07-20 15:59:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:59:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 15:59:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 15:59:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 15:59:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 15:59:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-20 16:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:chenbin
 
[INFO][2017-07-20 16:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:351
参数2:1032
 
[INFO][2017-07-20 16:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:352
参数2:1032
 
[INFO][2017-07-20 16:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:375
参数2:1032
 
[INFO][2017-07-20 16:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:380
参数2:1032
 
[INFO][2017-07-20 16:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:376
参数2:1032
 
[INFO][2017-07-20 16:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:355
参数2:1032
 
[INFO][2017-07-20 16:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:356
参数2:1032
 
[INFO][2017-07-20 16:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-20 16:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:9
 
[INFO][2017-07-20 16:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-20 16:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:9
参数2:2017-07-20
参数3:2017-07-20
参数4:9
参数5:2017-07-20
参数6:2017-07-20
参数7:9
参数8:2017-07-20
参数9:2017-07-20
参数10:9
参数11:2017-07-20
参数12:2017-07-20
参数13:9
参数14:2017-07-20
参数15:2017-07-20
参数16:9
参数17:2017-07-20
参数18:2017-07-20
 
[INFO][2017-07-20 16:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-20 16:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2017-07-20
参数2:2017-07-20
参数3:9
参数4:2017-07-19
参数5:2017-07-19
参数6:9
参数7:2017-07-13
参数8:2017-07-13
参数9:9
 
[INFO][2017-07-20 16:00:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:00:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 16:00:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:00:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 16:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 16:00:18] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Jul 20 15:09:58 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-20 16:00:18] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-20 16:00:19] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-20 16:00:19] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Thu Jul 20 15:09:56 CST 2017]; root of context hierarchy 
[INFO][2017-07-20 16:00:19] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-20 16:00:35] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-20 16:00:35] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Thu Jul 20 16:00:35 CST 2017]; root of context hierarchy 
[INFO][2017-07-20 16:00:35] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-20 16:00:35] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-20 16:00:35] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-20 16:00:36] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(7)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-20 16:00:38] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-20 16:00:38] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization completed in 3401 ms 
[INFO][2017-07-20 16:00:38] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-20 16:00:38] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Jul 20 16:00:38 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-20 16:00:38] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-20 16:00:40] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(7)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.stores_login() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresManageController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresManageController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresManageController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:00:42] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:00:44] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(7)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Jul 20 16:00:38 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-20 16:00:44] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(7)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-20 16:00:44] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-20 16:00:45] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(7)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-55989-1500537644922-1:1,clientId=null,started=false} 
[INFO][2017-07-20 16:00:45] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-20 16:00:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(7)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-20 16:00:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(7)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-20 16:00:46] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 7766 ms 
[INFO][2017-07-20 16:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-20 16:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-20 16:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-20 16:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-20 16:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:375
参数2:1032
 
[INFO][2017-07-20 16:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:380
参数2:1032
 
[INFO][2017-07-20 16:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-20 16:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-20 16:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-20 16:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-20 16:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-20 16:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-20 16:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:9
参数2:2017-07-20
参数3:2017-07-20
参数4:9
参数5:2017-07-20
参数6:2017-07-20
参数7:9
参数8:2017-07-20
参数9:2017-07-20
参数10:9
参数11:2017-07-20
参数12:2017-07-20
参数13:9
参数14:2017-07-20
参数15:2017-07-20
参数16:9
参数17:2017-07-20
参数18:2017-07-20
 
[INFO][2017-07-20 16:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-20 16:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:2017-07-20
参数2:2017-07-20
参数3:9
参数4:2017-07-19
参数5:2017-07-19
参数6:9
参数7:2017-07-13
参数8:2017-07-13
参数9:9
 
[INFO][2017-07-20 16:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:01:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 16:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 16:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 16:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-20 16:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:9
参数2:2017-07-20
参数3:2017-07-20
参数4:9
参数5:2017-07-20
参数6:2017-07-20
参数7:9
参数8:2017-07-20
参数9:2017-07-20
参数10:9
参数11:2017-07-20
参数12:2017-07-20
参数13:9
参数14:2017-07-20
参数15:2017-07-20
参数16:9
参数17:2017-07-20
参数18:2017-07-20
 
[INFO][2017-07-20 16:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-20 16:19:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:2017-07-20
参数2:2017-07-20
参数3:9
参数4:2017-07-19
参数5:2017-07-19
参数6:9
参数7:2017-07-13
参数8:2017-07-13
参数9:9
 
[INFO][2017-07-20 16:19:22] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Jul 20 16:00:38 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-20 16:19:22] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-20 16:19:23] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-20 16:19:23] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Thu Jul 20 16:00:35 CST 2017]; root of context hierarchy 
[INFO][2017-07-20 16:19:23] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-20 16:19:37] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-20 16:19:37] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Thu Jul 20 16:19:37 CST 2017]; root of context hierarchy 
[INFO][2017-07-20 16:19:37] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-20 16:19:37] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-20 16:19:38] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-20 16:19:38] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-20 16:19:40] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-20 16:19:40] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2807 ms 
[INFO][2017-07-20 16:19:40] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-20 16:19:40] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Jul 20 16:19:40 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-20 16:19:40] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-20 16:19:42] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.stores_login() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresManageController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresManageController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresManageController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:19:43] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:19:44] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Jul 20 16:19:40 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-20 16:19:44] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-20 16:19:45] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-20 16:19:45] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-56531-1500538785266-1:1,clientId=null,started=false} 
[INFO][2017-07-20 16:19:45] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-20 16:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-20 16:19:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-20 16:19:46] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5706 ms 
[INFO][2017-07-20 16:19:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-20 16:19:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:chenbin
 
[INFO][2017-07-20 16:19:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:19:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:351
参数2:1032
 
[INFO][2017-07-20 16:19:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:19:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:352
参数2:1032
 
[INFO][2017-07-20 16:19:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:19:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:375
参数2:1032
 
[INFO][2017-07-20 16:19:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:19:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:380
参数2:1032
 
[INFO][2017-07-20 16:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:376
参数2:1032
 
[INFO][2017-07-20 16:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:355
参数2:1032
 
[INFO][2017-07-20 16:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:356
参数2:1032
 
[INFO][2017-07-20 16:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-20 16:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:9
 
[INFO][2017-07-20 16:19:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-20 16:19:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:9
参数2:2017-07-20
参数3:2017-07-20
参数4:9
参数5:2017-07-20
参数6:2017-07-20
参数7:9
参数8:2017-07-20
参数9:2017-07-20
参数10:9
参数11:2017-07-20
参数12:2017-07-20
参数13:9
参数14:2017-07-20
参数15:2017-07-20
参数16:9
参数17:2017-07-20
参数18:2017-07-20
 
[INFO][2017-07-20 16:19:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-20 16:19:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:2017-07-20
参数2:2017-07-20
参数3:9
参数4:2017-07-19
参数5:2017-07-19
参数6:9
参数7:2017-07-13
参数8:2017-07-13
参数9:9
 
[INFO][2017-07-20 16:20:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 16:20:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 16:20:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 16:20:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 16:20:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:20:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 16:20:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 16:20:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 16:20:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 16:20:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 16:20:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:20:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 16:20:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:20:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 16:20:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:20:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 16:20:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:20:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 16:20:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:20:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:null
参数2:null
 
[INFO][2017-07-20 16:20:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.queryGoodNum: 
select  max(good_num) from cds_ms_goods 
[INFO][2017-07-20 16:20:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:20:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.insertRecord: 
INSERT INTO cds_ms_goods(
          
            class_id
         , 
            good_num
         , 
            good_name
         , 
            pinxin
         , 
            plu_num
         , 
            mode
         , 
            est_type_id
         , 
            listorder
         , 
            status
         , 
            uptime
         , 
            isback
         , 
            isweight
         , 
            good_price
         , 
            is_sync
         , 
            draftsman
         , 
            auditor
         , 
            approver
         , 
            finished_weight
         , 
            gist
         , 
            process
         , 
            out_time
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-20 16:20:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
参数2:9000028
参数3:红烧牛腩
参数4:HSN0
参数5:0
参数6:null
参数7:0
参数8:1
参数9:0
参数10:2017-07-20 16:20:29
参数11:0
参数12:0
参数13:0.0
参数14:0
参数15:0
参数16:0
参数17:0
参数18:0
参数19:null
参数20:null
参数21:0
 
[INFO][2017-07-20 16:20:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:20:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 16:20:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:20:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 16:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ? 
            
            
            
                
                    AND (
                        good_name LIKE '%'+?+'%' OR
                        pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-20 16:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
参数2:红烧牛腩
参数3:红烧牛腩
 
[INFO][2017-07-20 16:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ? 
            
            
            
                
                    AND (
                        good_name LIKE '%'+?+'%' OR
                        pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-20 16:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
参数2:红烧牛腩
参数3:红烧牛腩
 
[INFO][2017-07-20 16:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ? 
            
            
            
                
                    AND (
                        good_name LIKE '%'+?+'%' OR
                        pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-20 16:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
参数2:红烧牛腩
参数3:红烧牛腩
 
[INFO][2017-07-20 16:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ? 
            
            
            
                
                    AND (
                        good_name LIKE '%'+?+'%' OR
                        pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-20 16:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
参数2:红烧牛腩
参数3:红烧牛腩
 
[INFO][2017-07-20 16:22:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:22:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 16:22:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:22:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 16:22:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:22:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 16:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 16:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-20 16:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-20 16:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:
 
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 16:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-20 16:23:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:23:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:null
参数2:null
 
[INFO][2017-07-20 16:23:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.insertRecord: 
INSERT INTO cds_goods_info(
          
            class_id
         , 
            good_name
         , 
            pinxin
         , 
            good_pic
         , 
            egood_pic
         , 
            image_hash
         , 
            add_date
         , 
            status
         , 
            listorder
         , 
            default_standrad_id
         , 
            good_info
         , 
            market_price
         , 
            box_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-20 16:23:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:29
参数2:红烧牛腩
参数3:HSN0
参数4:null
参数5:null
参数6:null
参数7:2017-07-20 16:23:19
参数8:1
参数9:1
参数10:null
参数11:null
参数12:null
参数13:null
 
[INFO][2017-07-20 16:23:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:23:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 16:23:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:23:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 16:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-20 16:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 16:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
参数2:红烧牛腩
参数3:红烧牛腩
 
[INFO][2017-07-20 16:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-20 16:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
参数2:红烧牛腩
参数3:红烧牛腩
 
[INFO][2017-07-20 16:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 16:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 16:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-20 16:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
参数2:红烧牛腩
参数3:红烧牛腩
 
[INFO][2017-07-20 16:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-20 16:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
参数2:红烧牛腩
参数3:红烧牛腩
 
[INFO][2017-07-20 16:25:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:25:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:25:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:25:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:25:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:25:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:25:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:25:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 16:25:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:25:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 16:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 16:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 16:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 16:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:
 
[INFO][2017-07-20 16:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 16:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 16:25:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 16:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:null
参数2:null
 
[INFO][2017-07-20 16:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.insertRecord: 
INSERT INTO cds_goods_info(
          
            class_id
         , 
            good_name
         , 
            pinxin
         , 
            good_pic
         , 
            egood_pic
         , 
            image_hash
         , 
            add_date
         , 
            status
         , 
            listorder
         , 
            default_standrad_id
         , 
            good_info
         , 
            market_price
         , 
            box_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-20 16:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:29
参数2:红烧牛腩
参数3:HSN0
参数4:null
参数5:null
参数6:null
参数7:2017-07-20 16:25:43
参数8:1
参数9:1
参数10:null
参数11:null
参数12:null
参数13:null
 
[INFO][2017-07-20 16:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 16:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 16:27:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:27:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:27:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:27:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:27:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:27:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:
 
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 16:27:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 16:27:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:27:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:27:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:27:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:27:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:27:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:
 
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 16:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 16:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 16:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 16:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-20 16:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 16:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 16:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 16:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-20 16:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:null
参数2:null
 
[INFO][2017-07-20 16:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.insertRecord: 
INSERT INTO cds_goods_info(
          
            class_id
         , 
            good_name
         , 
            pinxin
         , 
            good_pic
         , 
            egood_pic
         , 
            image_hash
         , 
            add_date
         , 
            status
         , 
            listorder
         , 
            default_standrad_id
         , 
            good_info
         , 
            market_price
         , 
            box_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-20 16:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:29
参数2:红烧牛腩
参数3:HSN0
参数4:null
参数5:null
参数6:null
参数7:2017-07-20 16:28:17
参数8:1
参数9:1
参数10:null
参数11:null
参数12:null
参数13:null
 
[INFO][2017-07-20 16:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 16:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 16:30:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:30:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 16:30:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:30:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 16:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 16:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 16:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:30:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 16:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 16:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 16:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:
 
[INFO][2017-07-20 16:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 16:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 16:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 16:30:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 16:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:29
参数2:null
 
[INFO][2017-07-20 16:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.insertRecord: 
INSERT INTO cds_goods_info(
          
            class_id
         , 
            good_name
         , 
            pinxin
         , 
            good_pic
         , 
            egood_pic
         , 
            image_hash
         , 
            add_date
         , 
            status
         , 
            listorder
         , 
            default_standrad_id
         , 
            good_info
         , 
            market_price
         , 
            box_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-20 16:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:29
参数2:红烧牛腩
参数3:HSN0
参数4:null
参数5:null
参数6:null
参数7:2017-07-20 16:30:44
参数8:1
参数9:1
参数10:null
参数11:null
参数12:null
参数13:null
 
[INFO][2017-07-20 16:30:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:30:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 16:30:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:30:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 16:31:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:31:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:29
参数2:null
 
[INFO][2017-07-20 16:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.insertRecord: 
INSERT INTO cds_goods_info(
          
            class_id
         , 
            good_name
         , 
            pinxin
         , 
            good_pic
         , 
            egood_pic
         , 
            image_hash
         , 
            add_date
         , 
            status
         , 
            listorder
         , 
            default_standrad_id
         , 
            good_info
         , 
            market_price
         , 
            box_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-20 16:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:29
参数2:红烧牛腩
参数3:HSN0
参数4:null
参数5:null
参数6:null
参数7:2017-07-20 16:31:41
参数8:1
参数9:1
参数10:null
参数11:null
参数12:null
参数13:null
 
[INFO][2017-07-20 16:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 16:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 16:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:29
参数2:null
 
[INFO][2017-07-20 16:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.insertRecord: 
INSERT INTO cds_goods_info(
          
            class_id
         , 
            good_name
         , 
            pinxin
         , 
            good_pic
         , 
            egood_pic
         , 
            image_hash
         , 
            add_date
         , 
            status
         , 
            listorder
         , 
            default_standrad_id
         , 
            good_info
         , 
            market_price
         , 
            box_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-20 16:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:29
参数2:红烧牛腩
参数3:HSN0
参数4:null
参数5:null
参数6:null
参数7:2017-07-20 16:32:55
参数8:1
参数9:1
参数10:null
参数11:null
参数12:null
参数13:null
 
[INFO][2017-07-20 16:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 16:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 16:33:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:33:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 16:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-20 16:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-20 16:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:33:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:33:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:
 
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 16:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-20 16:34:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:34:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:29
参数2:红烧牛腩
 
[WARN][2017-07-20 16:34:20] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-7 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 7 
[INFO][2017-07-20 16:34:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:34:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:29
参数2:红烧牛腩
 
[WARN][2017-07-20 16:34:53] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-6 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 7 
[INFO][2017-07-20 16:36:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:36:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:29
参数2:红烧牛腩
 
[INFO][2017-07-20 16:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:29
参数2:红烧牛腩
 
[INFO][2017-07-20 16:38:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:38:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:38:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:38:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 16:38:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:38:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 16:39:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:39:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:null
参数2:
 
[INFO][2017-07-20 16:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.queryGoodNum: 
select  max(good_num) from cds_ms_goods 
[INFO][2017-07-20 16:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.insertRecord: 
INSERT INTO cds_ms_goods(
          
            class_id
         , 
            good_num
         , 
            good_name
         , 
            pinxin
         , 
            plu_num
         , 
            mode
         , 
            est_type_id
         , 
            listorder
         , 
            status
         , 
            uptime
         , 
            isback
         , 
            isweight
         , 
            good_price
         , 
            is_sync
         , 
            draftsman
         , 
            auditor
         , 
            approver
         , 
            finished_weight
         , 
            gist
         , 
            process
         , 
            out_time
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-20 16:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
参数2:9000029
参数3:红烧牛腩
参数4:HSN0
参数5:0
参数6:null
参数7:0
参数8:1
参数9:0
参数10:2017-07-20 16:39:08
参数11:0
参数12:0
参数13:0.0
参数14:0
参数15:0
参数16:0
参数17:0
参数18:0
参数19:null
参数20:null
参数21:0
 
[INFO][2017-07-20 16:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 16:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 16:40:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:40:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:40:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:40:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 16:40:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:40:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 16:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:null
参数2:红烧牛腩
 
[INFO][2017-07-20 16:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.queryGoodNum: 
select  max(good_num) from cds_ms_goods 
[INFO][2017-07-20 16:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 16:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.insertRecord: 
INSERT INTO cds_ms_goods(
          
            class_id
         , 
            good_num
         , 
            good_name
         , 
            pinxin
         , 
            plu_num
         , 
            mode
         , 
            est_type_id
         , 
            listorder
         , 
            status
         , 
            uptime
         , 
            isback
         , 
            isweight
         , 
            good_price
         , 
            is_sync
         , 
            draftsman
         , 
            auditor
         , 
            approver
         , 
            finished_weight
         , 
            gist
         , 
            process
         , 
            out_time
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-20 16:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
参数2:9000030
参数3:红烧牛腩
参数4:HSN0
参数5:0
参数6:null
参数7:0
参数8:1
参数9:0
参数10:2017-07-20 16:40:59
参数11:0
参数12:0
参数13:0.0
参数14:0
参数15:0
参数16:0
参数17:0
参数18:0
参数19:null
参数20:null
参数21:0
 
[INFO][2017-07-20 16:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-20 16:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-20 16:42:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:42:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 16:42:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:42:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 16:42:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:42:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 16:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 16:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 16:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-20 16:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 16:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 16:44:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 16:44:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 16:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 16:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 16:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 16:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 16:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 16:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:
 
[INFO][2017-07-20 16:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 16:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 16:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 16:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 16:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 16:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-20 16:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-20 16:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 16:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
参数2:红烧牛腩
 
[INFO][2017-07-20 16:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.queryGoodNum: 
select  max(good_num) from cds_ms_goods 
[INFO][2017-07-20 16:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.insertRecord: 
INSERT INTO cds_ms_goods(
          
            class_id
         , 
            good_num
         , 
            good_name
         , 
            pinxin
         , 
            plu_num
         , 
            mode
         , 
            est_type_id
         , 
            listorder
         , 
            status
         , 
            uptime
         , 
            isback
         , 
            isweight
         , 
            good_price
         , 
            is_sync
         , 
            draftsman
         , 
            auditor
         , 
            approver
         , 
            finished_weight
         , 
            gist
         , 
            process
         , 
            out_time
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-20 16:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
参数2:9000031
参数3:红烧牛腩
参数4:HSN0
参数5:0
参数6:null
参数7:0
参数8:1
参数9:0
参数10:2017-07-20 16:45:10
参数11:0
参数12:0
参数13:0.0
参数14:0
参数15:0
参数16:0
参数17:0
参数18:0
参数19:null
参数20:null
参数21:0
 
[INFO][2017-07-20 16:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 16:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 16:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-20 16:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9
参数2:2017-07-20
参数3:2017-07-20
参数4:9
参数5:2017-07-20
参数6:2017-07-20
参数7:9
参数8:2017-07-20
参数9:2017-07-20
参数10:9
参数11:2017-07-20
参数12:2017-07-20
参数13:9
参数14:2017-07-20
参数15:2017-07-20
参数16:9
参数17:2017-07-20
参数18:2017-07-20
 
[INFO][2017-07-20 16:50:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-20 16:50:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2017-07-20
参数2:2017-07-20
参数3:9
参数4:2017-07-19
参数5:2017-07-19
参数6:9
参数7:2017-07-13
参数8:2017-07-13
参数9:9
 
[INFO][2017-07-20 16:50:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 16:50:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 16:50:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:50:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 16:50:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 16:50:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-20 16:50:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 16:50:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:50:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 16:50:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 16:50:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 16:50:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:50:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 16:50:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:50:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 16:50:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:50:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 16:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 16:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 16:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 16:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 16:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 16:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 16:50:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:
 
[INFO][2017-07-20 16:51:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:51:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 16:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsClassLists: 
select count(0) from (select * from  cds_class)  tmp_count 
[INFO][2017-07-20 16:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsClassLists: 
select tmp.* from (select (row_number() Over(order by listorder asc)) as rownumber, * from  cds_class) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 16:51:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:
 
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:51:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 16:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 16:51:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-20 16:51:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:51:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 16:51:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:51:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-20 16:51:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:51:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-20 16:53:01] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Jul 20 16:19:40 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-20 16:53:01] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-20 16:53:02] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-20 16:53:02] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Thu Jul 20 16:19:37 CST 2017]; root of context hierarchy 
[INFO][2017-07-20 16:53:02] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-20 16:53:14] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-20 16:53:14] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Thu Jul 20 16:53:14 CST 2017]; root of context hierarchy 
[INFO][2017-07-20 16:53:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-20 16:53:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-20 16:53:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-20 16:53:15] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-20 16:53:17] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-20 16:53:17] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2935 ms 
[INFO][2017-07-20 16:53:17] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-20 16:53:17] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Jul 20 16:53:17 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-20 16:53:17] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-20 16:53:19] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.stores_login() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresManageController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresManageController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresManageController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 16:53:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 16:53:21] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Jul 20 16:53:17 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-20 16:53:21] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-20 16:53:21] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-20 16:53:22] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-57466-1500540801938-1:1,clientId=null,started=false} 
[INFO][2017-07-20 16:53:22] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-20 16:53:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-20 16:53:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-20 16:53:22] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5402 ms 
[INFO][2017-07-20 16:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-20 16:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:chenbin
 
[INFO][2017-07-20 16:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:351
参数2:1032
 
[INFO][2017-07-20 16:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:53:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:352
参数2:1032
 
[INFO][2017-07-20 16:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:375
参数2:1032
 
[INFO][2017-07-20 16:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:380
参数2:1032
 
[INFO][2017-07-20 16:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:376
参数2:1032
 
[INFO][2017-07-20 16:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:355
参数2:1032
 
[INFO][2017-07-20 16:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 16:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:356
参数2:1032
 
[INFO][2017-07-20 16:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-20 16:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:9
 
[INFO][2017-07-20 16:53:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-20 16:53:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:9
参数2:2017-07-20
参数3:2017-07-20
参数4:9
参数5:2017-07-20
参数6:2017-07-20
参数7:9
参数8:2017-07-20
参数9:2017-07-20
参数10:9
参数11:2017-07-20
参数12:2017-07-20
参数13:9
参数14:2017-07-20
参数15:2017-07-20
参数16:9
参数17:2017-07-20
参数18:2017-07-20
 
[INFO][2017-07-20 16:53:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-20 16:53:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:2017-07-20
参数2:2017-07-20
参数3:9
参数4:2017-07-19
参数5:2017-07-19
参数6:9
参数7:2017-07-13
参数8:2017-07-13
参数9:9
 
[INFO][2017-07-20 16:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:53:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:53:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:53:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:53:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:53:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:53:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:53:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:53:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:53:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:53:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:
 
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 16:53:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 16:53:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 16:53:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 16:53:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:53:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-20 16:53:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:53:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-20 16:54:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:54:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-20 16:54:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:54:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 16:54:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:54:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-20 16:54:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:54:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 16:54:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:54:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
参数2:红烧牛腩
 
[INFO][2017-07-20 16:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:2
参数2:红烧牛腩
 
[INFO][2017-07-20 16:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.queryGoodNum: 
select  max(good_num) from cds_ms_goods 
[INFO][2017-07-20 16:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 16:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.insertRecord: 
INSERT INTO cds_ms_goods(
          
            class_id
         , 
            good_num
         , 
            good_name
         , 
            pinxin
         , 
            plu_num
         , 
            mode
         , 
            est_type_id
         , 
            listorder
         , 
            status
         , 
            uptime
         , 
            isback
         , 
            isweight
         , 
            good_price
         , 
            is_sync
         , 
            draftsman
         , 
            auditor
         , 
            approver
         , 
            finished_weight
         , 
            gist
         , 
            process
         , 
            out_time
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-20 16:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2
参数2:9000027
参数3:null
参数4:null
参数5:0
参数6:null
参数7:0
参数8:1
参数9:0
参数10:null
参数11:0
参数12:0
参数13:0.0
参数14:0
参数15:0
参数16:0
参数17:0
参数18:0
参数19:null
参数20:null
参数21:0
 
[INFO][2017-07-20 16:54:18] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) http-nio-8001-exec-8 Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
[INFO][2017-07-20 16:54:18] org.springframework.jdbc.support.SQLErrorCodesFactory.<init>(SQLErrorCodesFactory.java:127) http-nio-8001-exec-8 SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
[WARN][2017-07-20 16:54:18] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-8 Resolved exception caused by Handler execution: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'good_name'，表 'caidashi.dbo.cds_ms_goods'；列不允许有 Null 值。INSERT 失败。
### The error may involve baseSqlMap.insertRecord-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO cds_ms_goods(                        class_id          ,              good_num          ,              good_name          ,              pinxin          ,              plu_num          ,              mode          ,              est_type_id          ,              listorder          ,              status          ,              uptime          ,              isback          ,              isweight          ,              good_price          ,              is_sync          ,              draftsman          ,              auditor          ,              approver          ,              finished_weight          ,              gist          ,              process          ,              out_time                   ) VALUES(                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?                   )
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'good_name'，表 'caidashi.dbo.cds_ms_goods'；列不允许有 Null 值。INSERT 失败。
; SQL []; 不能将值 NULL 插入列 'good_name'，表 'caidashi.dbo.cds_ms_goods'；列不允许有 Null 值。INSERT 失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'good_name'，表 'caidashi.dbo.cds_ms_goods'；列不允许有 Null 值。INSERT 失败。 
[INFO][2017-07-20 16:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:54:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:2
参数2:红烧牛腩
 
[INFO][2017-07-20 16:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.queryGoodNum: 
select  max(good_num) from cds_ms_goods 
[INFO][2017-07-20 16:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 16:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_ms_goods(
          
            class_id
         , 
            good_num
         , 
            good_name
         , 
            pinxin
         , 
            plu_num
         , 
            mode
         , 
            est_type_id
         , 
            listorder
         , 
            status
         , 
            uptime
         , 
            isback
         , 
            isweight
         , 
            good_price
         , 
            is_sync
         , 
            draftsman
         , 
            auditor
         , 
            approver
         , 
            finished_weight
         , 
            gist
         , 
            process
         , 
            out_time
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-20 16:54:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2
参数2:9000027
参数3:null
参数4:null
参数5:0
参数6:null
参数7:0
参数8:1
参数9:0
参数10:null
参数11:0
参数12:0
参数13:0.0
参数14:0
参数15:0
参数16:0
参数17:0
参数18:0
参数19:null
参数20:null
参数21:0
 
[WARN][2017-07-20 16:54:37] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-2 Resolved exception caused by Handler execution: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'good_name'，表 'caidashi.dbo.cds_ms_goods'；列不允许有 Null 值。INSERT 失败。
### The error may involve baseSqlMap.insertRecord-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO cds_ms_goods(                        class_id          ,              good_num          ,              good_name          ,              pinxin          ,              plu_num          ,              mode          ,              est_type_id          ,              listorder          ,              status          ,              uptime          ,              isback          ,              isweight          ,              good_price          ,              is_sync          ,              draftsman          ,              auditor          ,              approver          ,              finished_weight          ,              gist          ,              process          ,              out_time                   ) VALUES(                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?                   )
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'good_name'，表 'caidashi.dbo.cds_ms_goods'；列不允许有 Null 值。INSERT 失败。
; SQL []; 不能将值 NULL 插入列 'good_name'，表 'caidashi.dbo.cds_ms_goods'；列不允许有 Null 值。INSERT 失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'good_name'，表 'caidashi.dbo.cds_ms_goods'；列不允许有 Null 值。INSERT 失败。 
[INFO][2017-07-20 16:55:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:55:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
参数2:红烧牛腩
 
[INFO][2017-07-20 16:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.queryGoodNum: 
select  max(good_num) from cds_ms_goods 
[INFO][2017-07-20 16:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 16:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.insertRecord: 
INSERT INTO cds_ms_goods(
          
            class_id
         , 
            good_num
         , 
            good_name
         , 
            pinxin
         , 
            plu_num
         , 
            mode
         , 
            est_type_id
         , 
            listorder
         , 
            status
         , 
            uptime
         , 
            isback
         , 
            isweight
         , 
            good_price
         , 
            is_sync
         , 
            draftsman
         , 
            auditor
         , 
            approver
         , 
            finished_weight
         , 
            gist
         , 
            process
         , 
            out_time
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-20 16:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
参数2:9000027
参数3:null
参数4:null
参数5:0
参数6:null
参数7:0
参数8:1
参数9:0
参数10:null
参数11:0
参数12:0
参数13:0.0
参数14:0
参数15:0
参数16:0
参数17:0
参数18:0
参数19:null
参数20:null
参数21:0
 
[WARN][2017-07-20 16:55:41] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-3 Resolved exception caused by Handler execution: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'good_name'，表 'caidashi.dbo.cds_ms_goods'；列不允许有 Null 值。INSERT 失败。
### The error may involve baseSqlMap.insertRecord-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO cds_ms_goods(                        class_id          ,              good_num          ,              good_name          ,              pinxin          ,              plu_num          ,              mode          ,              est_type_id          ,              listorder          ,              status          ,              uptime          ,              isback          ,              isweight          ,              good_price          ,              is_sync          ,              draftsman          ,              auditor          ,              approver          ,              finished_weight          ,              gist          ,              process          ,              out_time                   ) VALUES(                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?                   )
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'good_name'，表 'caidashi.dbo.cds_ms_goods'；列不允许有 Null 值。INSERT 失败。
; SQL []; 不能将值 NULL 插入列 'good_name'，表 'caidashi.dbo.cds_ms_goods'；列不允许有 Null 值。INSERT 失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'good_name'，表 'caidashi.dbo.cds_ms_goods'；列不允许有 Null 值。INSERT 失败。 
[INFO][2017-07-20 16:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 16:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:2
参数2:红烧牛腩
 
[INFO][2017-07-20 16:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.queryGoodNum: 
select  max(good_num) from cds_ms_goods 
[INFO][2017-07-20 16:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 16:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.insertRecord: 
INSERT INTO cds_ms_goods(
          
            class_id
         , 
            good_num
         , 
            good_name
         , 
            pinxin
         , 
            plu_num
         , 
            mode
         , 
            est_type_id
         , 
            listorder
         , 
            status
         , 
            uptime
         , 
            isback
         , 
            isweight
         , 
            good_price
         , 
            is_sync
         , 
            draftsman
         , 
            auditor
         , 
            approver
         , 
            finished_weight
         , 
            gist
         , 
            process
         , 
            out_time
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-20 16:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:2
参数2:9000027
参数3:红烧牛腩
参数4:HSN0
参数5:0
参数6:null
参数7:0
参数8:1
参数9:0
参数10:2017-07-20 16:56:49
参数11:0
参数12:0
参数13:0.0
参数14:0
参数15:0
参数16:0
参数17:0
参数18:0
参数19:null
参数20:null
参数21:0
 
[INFO][2017-07-20 16:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 16:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 16:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 16:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 16:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ? 
            
            
            
                
                    AND (
                        good_name LIKE '%'+?+'%' OR
                        pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-20 16:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
参数2:红烧牛腩
参数3:红烧牛腩
 
[INFO][2017-07-20 16:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ? 
            
            
            
                
                    AND (
                        good_name LIKE '%'+?+'%' OR
                        pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-20 16:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
参数2:红烧牛腩
参数3:红烧牛腩
 
[INFO][2017-07-20 16:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ? 
            
            
            
                
                    AND (
                        good_name LIKE '%'+?+'%' OR
                        pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-20 16:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
参数2:红烧牛腩
参数3:红烧牛腩
 
[INFO][2017-07-20 16:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ? 
            
            
            
                
                    AND (
                        good_name LIKE '%'+?+'%' OR
                        pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-20 16:57:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
参数2:红烧牛腩
参数3:红烧牛腩
 
[INFO][2017-07-20 16:57:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE  (
                        good_name LIKE '%'+?+'%' OR
                        pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-20 16:57:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:红烧牛腩
参数2:红烧牛腩
 
[INFO][2017-07-20 16:57:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE  (
                        good_name LIKE '%'+?+'%' OR
                        pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-20 16:57:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:红烧牛腩
参数2:红烧牛腩
 
[INFO][2017-07-20 17:00:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:00:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:00:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 17:00:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 17:00:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:00:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 17:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-20 17:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 17:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 17:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 17:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 17:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 17:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 16 and 16 
[INFO][2017-07-20 17:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-20 17:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
参数2:21
 
[INFO][2017-07-20 17:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-20 17:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
参数2:21
 
[INFO][2017-07-20 17:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-20 17:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
参数2:21
 
[INFO][2017-07-20 17:03:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 17:03:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 17:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 17:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:03:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 17:03:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:03:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:03:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 16 and 16 
[INFO][2017-07-20 17:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:04:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:04:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:04:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-20 17:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:04:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:04:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:04:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:04:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:04:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 17:04:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 17:04:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 17:04:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 17:04:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 17:04:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:
 
[INFO][2017-07-20 17:04:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:04:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 17:04:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 17:04:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 17:04:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 17:04:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:29
参数2:红烧牛腩
 
[INFO][2017-07-20 17:04:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 17:04:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:29
参数2:
 
[INFO][2017-07-20 17:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-20 17:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:9
参数2:2017-07-20
参数3:2017-07-20
参数4:9
参数5:2017-07-20
参数6:2017-07-20
参数7:9
参数8:2017-07-20
参数9:2017-07-20
参数10:9
参数11:2017-07-20
参数12:2017-07-20
参数13:9
参数14:2017-07-20
参数15:2017-07-20
参数16:9
参数17:2017-07-20
参数18:2017-07-20
 
[INFO][2017-07-20 17:08:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-20 17:08:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2017-07-20
参数2:2017-07-20
参数3:9
参数4:2017-07-19
参数5:2017-07-19
参数6:9
参数7:2017-07-13
参数8:2017-07-13
参数9:9
 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 17:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-20 17:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-20 17:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:08:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:08:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:08:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:08:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:08:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:
 
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:08:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:08:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:08:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 17:08:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 17:08:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 17:08:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 17:08:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 17:08:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:
 
[INFO][2017-07-20 17:08:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:08:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 17:08:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 17:08:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 17:08:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsClassLists: 
select count(0) from (select * from  cds_class)  tmp_count 
[INFO][2017-07-20 17:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsClassLists: 
select tmp.* from (select (row_number() Over(order by listorder asc)) as rownumber, * from  cds_class) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 17:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:08:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:
 
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 17:08:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 17:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 17:08:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:29
参数2:红烧牛腩
 
[INFO][2017-07-20 17:08:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 17:08:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:29
参数2:
 
[INFO][2017-07-20 17:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:08:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-20 17:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:
 
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 17:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-20 17:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsClassLists: 
select count(0) from (select * from  cds_class)  tmp_count 
[INFO][2017-07-20 17:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsClassLists: 
select tmp.* from (select (row_number() Over(order by listorder asc)) as rownumber, * from  cds_class) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 17:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:09:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE class_name = ?
            and
                brand_id = ? 
[INFO][2017-07-20 17:09:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:测试类别666
参数2:2
 
[INFO][2017-07-20 17:09:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE class_name = ?
            and
                brand_id = ? 
[INFO][2017-07-20 17:09:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:测试类别666
参数2:2
 
[INFO][2017-07-20 17:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsClassLists: 
select count(0) from (select * from  cds_class
         
         WHERE  (
                         brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-20 17:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-20 17:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsClassLists: 
select tmp.* from (select (row_number() Over(order by listorder asc)) as rownumber, * from  cds_class
         
         WHERE  (
                         brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-20 17:09:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-20 17:09:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsClassLists: 
select count(0) from (select * from  cds_class
         
         WHERE  (
                         brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-20 17:09:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 17:09:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsClassLists: 
select tmp.* from (select (row_number() Over(order by listorder asc)) as rownumber, * from  cds_class
         
         WHERE  (
                         brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 17:09:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 17:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE class_name = ?
            and
                brand_id = ? 
[INFO][2017-07-20 17:09:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:菜大师公告
参数2:1
 
[INFO][2017-07-20 17:09:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE class_name = ?
            and
                brand_id = ? 
[INFO][2017-07-20 17:09:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:
参数2:1
 
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 17:09:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:
 
[INFO][2017-07-20 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 17:09:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 17:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 17:11:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:11:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 17:11:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:11:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:11:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:11:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 17:11:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:11:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 17:11:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:11:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:11:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:11:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:11:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:12:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 17:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-20 17:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 17:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 17:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 17:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:
 
[INFO][2017-07-20 17:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-20 17:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 17:12:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-20 17:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 17:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 17:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:12:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-20 17:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:14:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:
 
[INFO][2017-07-20 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 17:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-20 17:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
参数2:33
参数3:1
 
[INFO][2017-07-20 17:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-20 17:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
参数2:33
参数3:1
 
[INFO][2017-07-20 17:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE class_id = ?
            and
                good_name = ? 
[INFO][2017-07-20 17:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:33
参数2:米饭
 
[INFO][2017-07-20 17:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:17:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-20 17:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:18:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 17:18:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:18:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 17:18:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:18:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:18:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:18:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 17:18:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:18:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 17:18:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:18:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:18:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getStoresBrand2: 
select count(0) from (select * from cds_stores_brand where stores_id = ?)  tmp_count 
[INFO][2017-07-20 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:18
 
[INFO][2017-07-20 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getStoresBrand2: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-20 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:18
 
[INFO][2017-07-20 17:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getStoresBrand2: 
select count(0) from (select * from cds_stores_brand where stores_id = ?)  tmp_count 
[INFO][2017-07-20 17:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:20
 
[INFO][2017-07-20 17:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getStoresBrand2: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-20 17:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:20
 
[INFO][2017-07-20 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getStoresBrand2: 
select count(0) from (select * from cds_stores_brand where stores_id = ?)  tmp_count 
[INFO][2017-07-20 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:17
 
[INFO][2017-07-20 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getStoresBrand2: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-20 17:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:17
 
[INFO][2017-07-20 17:18:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 17:18:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:18:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 17:18:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:18:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:18:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:18:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 17:18:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:18:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 17:18:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:18:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:18:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:19:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-20 17:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:19:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-20 17:19:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:19:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:19:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:19:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:19:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:19:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 17:19:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:19:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:19:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:19:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 17:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 17:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 17:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 17:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 17:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:
 
[INFO][2017-07-20 17:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-20 17:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 17:19:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-20 17:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:27:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:
 
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 17:27:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-20 17:28:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:28:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:28:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:28:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:
 
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-20 17:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-20 17:36:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 17:36:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 17:36:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getStoresLoginPageRecord: 
select count(0) from (select * from  cds_stores_login)  tmp_count 
[INFO][2017-07-20 17:36:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:36:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getStoresLoginPageRecord: 
select tmp.* from (select (row_number() Over(order by id asc)) as rownumber, * from  cds_stores_login) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-07-20 17:36:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 17:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 17:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:37:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 17:37:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 17:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 17:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 17:37:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 17:37:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 17:37:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 17:37:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[WARN][2017-07-20 17:37:07] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-7 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-20 17:37:07] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-20 17:37:07] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-6 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-20 17:37:07] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-20 17:37:09] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-4 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-20 17:37:09] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-20 17:37:15] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-20 18:02:40] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Jul 20 16:53:17 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-20 18:02:40] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-20 18:02:41] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-20 18:02:41] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Thu Jul 20 16:53:14 CST 2017]; root of context hierarchy 
[INFO][2017-07-20 18:02:41] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-20 18:02:57] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-20 18:02:57] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Thu Jul 20 18:02:57 CST 2017]; root of context hierarchy 
[INFO][2017-07-20 18:02:57] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-20 18:02:58] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-20 18:02:58] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-20 18:02:58] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-20 18:03:01] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-20 18:03:01] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 4472 ms 
[INFO][2017-07-20 18:03:01] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-20 18:03:01] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Jul 20 18:03:01 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-20 18:03:01] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-20 18:03:05] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresManageController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresManageController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresManageController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.stores_login() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-20 18:03:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-20 18:03:09] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Jul 20 18:03:01 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-20 18:03:09] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-20 18:03:09] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-20 18:03:09] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-59919-1500544989759-1:1,clientId=null,started=false} 
[INFO][2017-07-20 18:03:09] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-20 18:03:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-20 18:03:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-20 18:03:10] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 8742 ms 
[INFO][2017-07-20 18:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-20 18:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-20 18:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 18:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-20 18:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 18:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-20 18:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 18:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:375
参数2:1032
 
[INFO][2017-07-20 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:380
参数2:1032
 
[INFO][2017-07-20 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-20 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-20 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-20 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-20 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-20 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-20 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-20 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:9
参数2:2017-07-20
参数3:2017-07-20
参数4:9
参数5:2017-07-20
参数6:2017-07-20
参数7:9
参数8:2017-07-20
参数9:2017-07-20
参数10:9
参数11:2017-07-20
参数12:2017-07-20
参数13:9
参数14:2017-07-20
参数15:2017-07-20
参数16:9
参数17:2017-07-20
参数18:2017-07-20
 
[INFO][2017-07-20 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-20 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2017-07-20
参数2:2017-07-20
参数3:9
参数4:2017-07-19
参数5:2017-07-19
参数6:9
参数7:2017-07-13
参数8:2017-07-13
参数9:9
 
[INFO][2017-07-20 18:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 18:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 18:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 18:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 18:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 18:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 18:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 18:03:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 18:03:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 18:03:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 18:03:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 18:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:9001
 
[WARN][2017-07-20 18:03:40] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-5 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "qx" 
[INFO][2017-07-20 18:04:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 18:04:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 18:04:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:04:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 18:04:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 18:04:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 18:04:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 18:04:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-20 18:04:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 18:04:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:04:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 18:04:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:04:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:04:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:9001
 
[WARN][2017-07-20 18:04:27] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "qx" 
[INFO][2017-07-20 18:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9001
 
[WARN][2017-07-20 18:06:28] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-8 Resolved exception caused by Handler execution: java.lang.NumberFormatException: For input string: "qx" 
[INFO][2017-07-20 18:06:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 18:06:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:06:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:06:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:06:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 18:06:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:06:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 18:06:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:07:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 18:07:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 18:07:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 18:07:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 18:07:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:07:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:9001
 
[INFO][2017-07-20 18:07:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:07:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-20 18:08:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:08:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:9001
 
[INFO][2017-07-20 18:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:08:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 18:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:08:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:9001
 
[INFO][2017-07-20 18:10:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 18:10:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 18:10:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:10:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 18:10:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 18:10:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 18:10:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 18:10:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 18:10:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 18:10:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 18:10:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 18:10:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 18:10:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:10:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:9001
 
[INFO][2017-07-20 18:10:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getStoresBrand2: 
select count(0) from (select * from cds_stores_brand where stores_id = ?)  tmp_count 
[INFO][2017-07-20 18:10:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-20 18:10:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getStoresBrand2: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-20 18:10:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-20 18:10:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getStoresBrand2: 
select count(0) from (select * from cds_stores_brand where stores_id = ?)  tmp_count 
[INFO][2017-07-20 18:10:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:10
 
[INFO][2017-07-20 18:10:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getStoresBrand2: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-20 18:10:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:10
 
[INFO][2017-07-20 18:10:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getStoresBrand2: 
select count(0) from (select * from cds_stores_brand where stores_id = ?)  tmp_count 
[INFO][2017-07-20 18:10:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:11
 
[INFO][2017-07-20 18:10:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getStoresBrand2: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-20 18:10:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:11
 
[INFO][2017-07-20 18:10:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getStoresBrand2: 
select count(0) from (select * from cds_stores_brand where stores_id = ?)  tmp_count 
[INFO][2017-07-20 18:10:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:13
 
[INFO][2017-07-20 18:10:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getStoresBrand2: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-20 18:10:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:13
 
[INFO][2017-07-20 18:10:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getStoresBrand2: 
select count(0) from (select * from cds_stores_brand where stores_id = ?)  tmp_count 
[INFO][2017-07-20 18:10:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:15
 
[INFO][2017-07-20 18:10:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getStoresBrand2: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-20 18:10:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:15
 
[INFO][2017-07-20 18:10:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getStoresBrand2: 
select count(0) from (select * from cds_stores_brand where stores_id = ?)  tmp_count 
[INFO][2017-07-20 18:10:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:17
 
[INFO][2017-07-20 18:10:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getStoresBrand2: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-20 18:10:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:17
 
[INFO][2017-07-20 18:10:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:10:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-20 18:10:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getStoresBrand2: 
select count(0) from (select * from cds_stores_brand where stores_id = ?)  tmp_count 
[INFO][2017-07-20 18:10:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:12
 
[INFO][2017-07-20 18:10:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getStoresBrand2: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-20 18:10:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:12
 
[INFO][2017-07-20 18:10:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getStoresBrand2: 
select count(0) from (select * from cds_stores_brand where stores_id = ?)  tmp_count 
[INFO][2017-07-20 18:10:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:15
 
[INFO][2017-07-20 18:10:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getStoresBrand2: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-20 18:10:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:15
 
[INFO][2017-07-20 18:10:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getStoresBrand2: 
select count(0) from (select * from cds_stores_brand where stores_id = ?)  tmp_count 
[INFO][2017-07-20 18:10:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:17
 
[INFO][2017-07-20 18:10:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getStoresBrand2: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-20 18:10:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:17
 
[INFO][2017-07-20 18:10:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 18:10:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:10:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 18:10:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 18:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 18:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 18:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 18:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 18:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 18:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 18:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-20 18:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 18:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 18:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 18:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 18:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-20 18:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
参数2:9
 
[INFO][2017-07-20 18:10:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-20 18:10:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
参数2:11
 
[INFO][2017-07-20 18:10:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-20 18:10:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
参数2:9
 
[INFO][2017-07-20 18:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 18:17:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:17:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:17:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:17:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 18:17:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 18:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 18:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 18:17:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 18:17:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-20 18:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-20 18:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
参数2:9
 
[INFO][2017-07-20 18:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-20 18:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
参数2:9
 
[INFO][2017-07-20 18:18:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 18:18:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 18:18:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:18:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 18:18:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 18:18:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 18:18:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 18:18:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-20 18:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 18:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:18:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:18:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:18:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 18:18:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:18:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 18:18:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-20 18:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 18:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 18:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 18:18:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-20 18:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-20 18:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
参数2:11
 
[INFO][2017-07-20 18:19:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-20 18:19:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 18:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-20 18:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 18:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-20 18:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 18:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-20 18:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-20 18:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-20 18:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 18:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-20 18:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-20 18:19:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-20 18:19:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
参数2:9
 
[INFO][2017-07-20 18:25:19] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Jul 20 18:03:01 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-20 18:25:19] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-20 18:25:20] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-20 18:25:20] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Thu Jul 20 18:02:57 CST 2017]; root of context hierarchy 
[INFO][2017-07-20 18:25:20] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-21 09:16:15] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-21 09:16:15] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Fri Jul 21 09:16:15 CST 2017]; root of context hierarchy 
[INFO][2017-07-21 09:16:15] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-21 09:16:15] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-21 09:16:15] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-21 09:16:15] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-21 09:16:18] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-21 09:16:18] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 3059 ms 
[INFO][2017-07-21 09:16:18] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-21 09:16:18] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Fri Jul 21 09:16:18 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-21 09:16:18] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-21 09:16:20] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresManageController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresManageController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresManageController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.stores_login() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresManageController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 09:16:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 09:16:22] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Fri Jul 21 09:16:18 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-21 09:16:22] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-21 09:16:23] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-21 09:16:23] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-50359-1500599783165-1:1,clientId=null,started=false} 
[INFO][2017-07-21 09:16:23] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-21 09:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-21 09:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-21 09:16:24] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5715 ms 
[INFO][2017-07-21 09:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-21 09:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:chenbin
 
[INFO][2017-07-21 09:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 09:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:351
参数2:1032
 
[INFO][2017-07-21 09:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 09:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:352
参数2:1032
 
[INFO][2017-07-21 09:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 09:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:375
参数2:1032
 
[INFO][2017-07-21 09:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 09:57:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:380
参数2:1032
 
[INFO][2017-07-21 09:57:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 09:57:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:376
参数2:1032
 
[INFO][2017-07-21 09:57:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 09:57:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:355
参数2:1032
 
[INFO][2017-07-21 09:57:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 09:57:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:356
参数2:1032
 
[INFO][2017-07-21 09:57:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-21 09:57:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:9
 
[INFO][2017-07-21 09:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-21 09:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:9
参数2:2017-07-21
参数3:2017-07-21
参数4:9
参数5:2017-07-21
参数6:2017-07-21
参数7:9
参数8:2017-07-21
参数9:2017-07-21
参数10:9
参数11:2017-07-21
参数12:2017-07-21
参数13:9
参数14:2017-07-21
参数15:2017-07-21
参数16:9
参数17:2017-07-21
参数18:2017-07-21
 
[INFO][2017-07-21 09:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-21 09:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:2017-07-21
参数2:2017-07-21
参数3:9
参数4:2017-07-20
参数5:2017-07-20
参数6:9
参数7:2017-07-14
参数8:2017-07-14
参数9:9
 
[INFO][2017-07-21 09:57:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 09:57:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 09:57:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 09:57:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 09:57:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 09:57:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 09:57:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 09:57:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 09:57:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 09:57:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 09:57:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 09:57:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 09:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 09:58:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:2
参数2:11
 
[INFO][2017-07-21 09:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 09:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2
参数2:12
 
[INFO][2017-07-21 09:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 09:58:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2
参数2:9
 
[INFO][2017-07-21 09:58:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 09:58:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:2
参数2:21
 
[INFO][2017-07-21 09:58:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 09:58:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
参数2:19
 
[INFO][2017-07-21 09:58:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 09:58:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 09:58:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 09:58:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 10:14:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 10:14:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 10:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 10:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 10:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 10:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 10:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 10:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 10:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 10:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 10:14:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[WARN][2017-07-21 10:14:22] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-5 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 10:14:22] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 10:14:22] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 10:14:22] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 10:14:24] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-7 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 10:14:24] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-21 10:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 10:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 10:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 10:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 10:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 10:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 10:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 10:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_gift.getPageRecord: 
select count(0) from (select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59')  tmp_count 
[INFO][2017-07-21 10:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:2017-07-21
参数2:2017-07-21
 
[INFO][2017-07-21 10:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_gift.getPageRecord: 
select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-21 10:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:2017-07-21
参数2:2017-07-21
 
[INFO][2017-07-21 10:49:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_gift.getPageRecord: 
select count(0) from (select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59'  
            
            
            
            
                 AND o.send_name = ?)  tmp_count 
[INFO][2017-07-21 10:49:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:2017-07-21
参数2:2017-07-21
参数3:美团
 
[INFO][2017-07-21 10:49:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_gift.getPageRecord: 
select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59'  
            
            
            
            
                 AND o.send_name = ? 
[INFO][2017-07-21 10:49:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:2017-07-21
参数2:2017-07-21
参数3:美团
 
[INFO][2017-07-21 10:49:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_gift.getPageRecord: 
select count(0) from (select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59')  tmp_count 
[INFO][2017-07-21 10:49:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2017-07-21
参数2:2017-07-21
 
[INFO][2017-07-21 10:49:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_gift.getPageRecord: 
select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-21 10:49:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2017-07-21
参数2:2017-07-21
 
[INFO][2017-07-21 10:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_gift.getPageRecord: 
select count(0) from (select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59')  tmp_count 
[INFO][2017-07-21 10:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:2017-07-20
参数2:2017-07-21
 
[INFO][2017-07-21 10:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_gift.getPageRecord: 
select tmp.* from (select (row_number() Over(order by order_no desc)) as rownumber,
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59') tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 10:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:2017-07-20
参数2:2017-07-21
 
[INFO][2017-07-21 10:49:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 10:49:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-21 10:49:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 10:49:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-21 10:50:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-21 10:50:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 10:50:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 10:50:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 10:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-21 10:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 10:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 10:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-21 10:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 10:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 10:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 10:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-21 10:51:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 10:51:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-21 10:51:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 10:51:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-21 10:51:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 10:51:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-21 10:51:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 10:51:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-21 10:51:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 10:51:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 10:51:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 10:51:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 10:51:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:51:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 10:51:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 10:51:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[WARN][2017-07-21 10:51:51] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-2 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 10:51:51] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-6 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 10:51:51] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 10:51:51] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 10:51:53] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-7 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 10:51:53] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-5 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-21 10:51:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:51:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 10:51:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:51:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 10:51:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:51:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:
 
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 10:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-21 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
参数2:1
 
[INFO][2017-07-21 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
参数2:1
 
[INFO][2017-07-21 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
参数2:2
 
[INFO][2017-07-21 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 13 
[INFO][2017-07-21 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
参数2:2
 
[INFO][2017-07-21 10:52:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 10:52:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
参数2:43
参数3:2
 
[INFO][2017-07-21 10:52:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-21 10:52:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
参数2:43
参数3:2
 
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 10:52:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 10:52:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 10:52:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2
参数2:10
 
[INFO][2017-07-21 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:2
参数2:10
 
[INFO][2017-07-21 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-21 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:26
 
[INFO][2017-07-21 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:2
参数2:10
 
[INFO][2017-07-21 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-21 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-21 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:10
参数2:2
 
[INFO][2017-07-21 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-21 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 10:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 10:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 10:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 10:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 10:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 10:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 10:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 10:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 10:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 10:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 10:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 10:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 10:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 10:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 10:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 10:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 10:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 10:52:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 10:52:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 10:52:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_gift.getPageRecord: 
select count(0) from (select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59')  tmp_count 
[INFO][2017-07-21 10:52:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2017-07-21
参数2:2017-07-21
 
[INFO][2017-07-21 10:52:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 10:52:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 10:52:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_gift.getPageRecord: 
select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-21 10:52:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2017-07-21
参数2:2017-07-21
 
[INFO][2017-07-21 10:52:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_gift.getPageRecord: 
select count(0) from (select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59')  tmp_count 
[INFO][2017-07-21 10:52:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:2017-07-12
参数2:2017-07-21
 
[INFO][2017-07-21 10:52:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_gift.getPageRecord: 
select tmp.* from (select (row_number() Over(order by order_no desc)) as rownumber,
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59') tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 10:52:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:2017-07-12
参数2:2017-07-21
 
[INFO][2017-07-21 10:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 10:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-21 10:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 10:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-21 11:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 11:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_gift.getHistoryPageRecord: 
select count(0) from (select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from view_cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59')  tmp_count 
[INFO][2017-07-21 11:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2017-07-19
参数2:2017-07-19
 
[INFO][2017-07-21 11:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_gift.getHistoryPageRecord: 
select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from view_cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-21 11:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2017-07-19
参数2:2017-07-19
 
[INFO][2017-07-21 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
参数2:9
 
[INFO][2017-07-21 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2
参数2:9
 
[INFO][2017-07-21 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-21 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9
 
[INFO][2017-07-21 11:03:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-21 11:03:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:25
 
[INFO][2017-07-21 11:03:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 11:03:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
参数2:9
 
[INFO][2017-07-21 11:03:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:03:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
参数2:9
 
[INFO][2017-07-21 11:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 11:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
参数2:9
 
[INFO][2017-07-21 11:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 11:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:2
参数2:9
 
[INFO][2017-07-21 11:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-21 11:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:9
 
[INFO][2017-07-21 11:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 11:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-21 11:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:25
 
[INFO][2017-07-21 11:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-21 11:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-21 11:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:
 
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 11:03:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:03:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 11:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 11:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-21 11:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-21 11:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 11:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-21 11:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-21 11:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:2
参数2:10
 
[INFO][2017-07-21 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-21 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-21 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:26
参数2:不背锅套餐
 
[INFO][2017-07-21 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:2
参数2:10
 
[INFO][2017-07-21 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-21 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-21 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1227683784
 
[INFO][2017-07-21 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:26
参数2:再加一份米饭
 
[INFO][2017-07-21 11:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 11:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:26
参数2:特制饮品
 
[INFO][2017-07-21 11:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 11:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1227826943
 
[INFO][2017-07-21 11:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 11:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:26
参数2:公告（仔细看哦~）
 
[INFO][2017-07-21 11:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 11:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1227885044
 
[INFO][2017-07-21 11:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 11:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1227872705
 
[INFO][2017-07-21 11:03:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 11:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 11:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 11:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 11:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 11:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 11:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 11:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 11:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 11:16:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-21 11:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-21 11:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:
 
[INFO][2017-07-21 11:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-21 11:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 11:16:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-21 11:16:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:16:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 11:16:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:16:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 11:16:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:16:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:
 
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-21 11:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 11:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 11:17:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 11:17:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-21 11:17:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:17:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-21 11:17:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:17:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-21 11:17:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:17:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:
 
[INFO][2017-07-21 11:17:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 11:17:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-21 11:22:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:22:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:22:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:22:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:
 
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-21 11:35:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:35:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:67
 
[INFO][2017-07-21 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:97
 
[INFO][2017-07-21 11:35:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:35:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:86
 
[INFO][2017-07-21 11:35:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:35:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:82
 
[INFO][2017-07-21 11:35:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:35:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:78
 
[INFO][2017-07-21 11:35:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:35:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:73
 
[INFO][2017-07-21 11:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:82
 
[INFO][2017-07-21 11:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:97
 
[INFO][2017-07-21 11:35:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:35:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:98
 
[INFO][2017-07-21 11:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:126
 
[INFO][2017-07-21 11:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:67
 
[INFO][2017-07-21 11:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:67
 
[INFO][2017-07-21 11:36:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:78
 
[INFO][2017-07-21 11:36:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:79
 
[INFO][2017-07-21 11:36:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:82
 
[INFO][2017-07-21 11:36:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:85
 
[INFO][2017-07-21 11:36:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:86
 
[INFO][2017-07-21 11:36:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:97
 
[INFO][2017-07-21 11:36:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:98
 
[INFO][2017-07-21 11:36:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:100
 
[INFO][2017-07-21 11:36:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:126
 
[INFO][2017-07-21 11:36:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 11:36:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:0
 
[INFO][2017-07-21 11:36:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:36:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:0
 
[INFO][2017-07-21 11:36:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 11:36:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-21 11:36:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:36:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-21 11:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 11:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:0
 
[INFO][2017-07-21 11:36:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:36:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:0
 
[INFO][2017-07-21 11:36:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 11:36:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-21 11:36:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:36:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-21 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-21 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 11:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-21 11:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-21 11:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:100
 
[INFO][2017-07-21 11:36:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:98
 
[INFO][2017-07-21 11:36:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:86
 
[INFO][2017-07-21 11:36:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:82
 
[INFO][2017-07-21 11:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:79
 
[INFO][2017-07-21 11:36:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:73
 
[INFO][2017-07-21 11:36:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:67
 
[INFO][2017-07-21 11:36:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:36:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:79
 
[INFO][2017-07-21 11:36:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:36:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:36:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:36:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-21 11:36:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:36:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-21 11:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 11:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-21 11:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 11:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
参数2:1000002
参数3:红烧牛腩
参数4:hsn
参数5:红烧牛腩（小份）,红烧牛腩  (份),红烧牛腩（小份）,红烧牛腩,红烧牛腩-大份,红烧牛腩  (大份)
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:29:46
参数12:1
参数13:0
参数14:26.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:360
参数20:null
参数21:null
参数22:10
参数23:2
 
[INFO][2017-07-21 11:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 11:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:6
 
[INFO][2017-07-21 11:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 11:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
参数2:1000006
参数3:川味辣子鸡
参数4:cwlzj
参数5:辣子鸡,正宗川味辣子鸡,正宗川味辣子鸡  (份),正宗川味辣子鸡-份,正宗川味辣子鸡-小份,正宗川味辣子鸡-大份,正宗川味辣子鸡 （大份）,正宗川味辣子鸡  (大份)
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:47:57
参数12:1
参数13:0
参数14:20.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:290
参数20:null
参数21:null
参数22:10
参数23:6
 
[INFO][2017-07-21 11:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 11:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:10
 
[INFO][2017-07-21 11:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 11:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
参数2:1000010
参数3:花菜炒豆腐
参数4:hccdf
参数5:花菜炒豆腐,花菜炒豆腐  (份),花菜炒豆腐-份,花菜炒豆腐（大份）,花菜炒豆腐(大份),花菜炒豆腐  (大份),花菜炒豆腐-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-09 10:05:30
参数12:1
参数13:0
参数14:20.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:10
 
[INFO][2017-07-21 11:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 11:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:17
 
[INFO][2017-07-21 11:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 11:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
参数2:1000017
参数3:橄榄菜豆角肉末
参数4:cdjrm
参数5:橄榄菜豆角肉末
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:46:08
参数12:1
参数13:0
参数14:23.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:370
参数20:null
参数21:null
参数22:10
参数23:17
 
[INFO][2017-07-21 11:37:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 11:37:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:24
 
[INFO][2017-07-21 11:37:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 11:37:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
参数2:1000024
参数3:小炒土豆片
参数4:xctdp
参数5:小炒土豆片
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:47:23
参数12:1
参数13:0
参数14:16.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:430
参数20:null
参数21:null
参数22:10
参数23:24
 
[INFO][2017-07-21 11:37:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 11:37:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:47
 
[INFO][2017-07-21 11:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 11:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
参数2:2000008
参数3:雪花蛋酒
参数4:xhdj
参数5:雪花蛋酒
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-03-11 17:27:42
参数12:0
参数13:0
参数14:3.5
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:47
 
[INFO][2017-07-21 11:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 11:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:73
 
[INFO][2017-07-21 11:37:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 11:37:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:6
参数2:6000007
参数3:百事可乐（听装）
参数4:bskltz
参数5:百事可乐（听装）,百事可乐（常温）
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-03-11 18:04:43
参数12:0
参数13:0
参数14:3.8
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:73
 
[INFO][2017-07-21 11:37:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 11:37:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:74
 
[INFO][2017-07-21 11:37:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 11:37:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:6
参数2:6000008
参数3:雪碧（听装）
参数4:xbtz
参数5:雪碧（听装）
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-03-11 18:05:20
参数12:0
参数13:0
参数14:3.8
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:74
 
[INFO][2017-07-21 11:38:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:38:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-21 11:38:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 16 and 30 
[INFO][2017-07-21 11:38:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-21 11:38:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 11:38:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:132
 
[INFO][2017-07-21 11:38:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 11:38:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
参数2:1000063
参数3:鲜菇炒肉丝
参数4:XGCRS
参数5:鲜菇炒肉丝
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-30 18:24:30
参数12:1
参数13:0
参数14:20.9
参数15:0
参数16:1
参数17:1
参数18:1
参数19:0
参数20:null
参数21:null
参数22:10
参数23:132
 
[INFO][2017-07-21 11:38:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 11:38:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:138
 
[INFO][2017-07-21 11:38:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 11:38:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:10
参数2:1000002
参数3:菇香黑椒牛柳+小米椒鸡丁(赠特饮+蒸蛋) 
参数4:gxhjnlxmjjdztyzd
参数5:菇香黑椒牛柳+小米椒鸡丁(赠特饮+蒸蛋) 
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-05 16:13:18
参数12:0
参数13:0
参数14:27.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:0
参数23:138
 
[INFO][2017-07-21 11:38:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 11:38:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:139
 
[INFO][2017-07-21 11:38:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 11:38:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:10
参数2:1000003
参数3:馋嘴牛蛙+小炒土豆片(赠特饮+蒸蛋)
参数4:cznwxctdpztyzd
参数5:馋嘴牛蛙+小炒土豆片(赠特饮+蒸蛋)
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-09 15:34:56
参数12:0
参数13:0
参数14:27.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:0
参数23:139
 
[INFO][2017-07-21 11:38:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 11:38:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:141
 
[INFO][2017-07-21 11:38:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 11:38:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:10
参数2:1000005
参数3:疯狂鱿须鱼+小米椒鸡丁(赠特饮+蒸蛋)
参数4:fkxyxmjjdztyzd
参数5:疯狂鱿须鱼+小米椒鸡丁(赠特饮+蒸蛋)
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-05 16:14:11
参数12:0
参数13:0
参数14:27.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:0
参数23:141
 
[INFO][2017-07-21 11:38:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 11:38:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:130
 
[INFO][2017-07-21 11:38:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 11:38:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
参数2:1000061
参数3:肉末鱼香茄条
参数4:rmyxqt
参数5:肉末鱼香茄条
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:31:18
参数12:1
参数13:0
参数14:19.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:440
参数20:null
参数21:null
参数22:10
参数23:130
 
[INFO][2017-07-21 11:39:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 11:39:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:127
 
[INFO][2017-07-21 11:39:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 11:39:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
参数2:1000058
参数3:香酥鸡柳
参数4:xsjl
参数5:香酥鸡柳
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:31:44
参数12:1
参数13:0
参数14:20.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:330
参数20:null
参数21:null
参数22:10
参数23:127
 
[INFO][2017-07-21 11:39:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 11:39:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:129
 
[INFO][2017-07-21 11:39:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 11:39:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
参数2:1000060
参数3:新派手撕鸡
参数4:xpssj
参数5:新派手撕鸡
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:13:17
参数12:1
参数13:0
参数14:22.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:129
 
[INFO][2017-07-21 11:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-21 11:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 31 and 43 
[INFO][2017-07-21 11:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-21 11:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 11:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:162
 
[INFO][2017-07-21 11:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 11:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
参数2:9000025
参数3:湘味手工豆皮
参数4:XWSGDP
参数5:null
参数6:0
参数7:null
参数8:0
参数9:1
参数10:1
参数11:2017-07-12 12:20:15
参数12:0
参数13:0
参数14:22.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:162
 
[INFO][2017-07-21 11:39:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 11:39:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:163
 
[INFO][2017-07-21 11:39:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 11:39:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
参数2:9000026
参数3:大盘冬瓜
参数4:DPDG
参数5:null
参数6:0
参数7:null
参数8:0
参数9:1
参数10:1
参数11:2017-07-12 12:20:45
参数12:0
参数13:0
参数14:16.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:163
 
[INFO][2017-07-21 11:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 11:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 11:39:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 11:39:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 11:39:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:39:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 11:39:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 11:39:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 11:39:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 11:39:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 11:39:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:39:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[WARN][2017-07-21 11:39:56] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 11:39:56] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 11:39:57] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-4 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 11:39:57] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 11:39:58] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-2 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 11:39:58] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-5 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-21 11:40:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 11:40:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:40:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 11:40:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:40:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:40:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:40:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 11:40:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:40:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 11:40:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:40:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:40:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:40:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 11:40:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 11:40:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 16 and 16 
[INFO][2017-07-21 11:40:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 11:40:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:40:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 11:40:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:40:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:
 
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 11:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-21 11:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:126
 
[INFO][2017-07-21 11:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1172
 
[INFO][2017-07-21 11:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1171
 
[INFO][2017-07-21 11:40:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:40:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:145
 
[INFO][2017-07-21 11:40:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:40:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:142
 
[INFO][2017-07-21 11:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:100
 
[INFO][2017-07-21 11:40:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:40:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:98
 
[INFO][2017-07-21 11:40:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:40:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:97
 
[INFO][2017-07-21 11:40:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:40:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:86
 
[INFO][2017-07-21 11:40:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:40:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:85
 
[INFO][2017-07-21 11:40:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:40:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:82
 
[INFO][2017-07-21 11:40:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:40:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:79
 
[INFO][2017-07-21 11:40:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:40:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:78
 
[INFO][2017-07-21 11:40:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:40:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:73
 
[INFO][2017-07-21 11:40:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:40:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:67
 
[INFO][2017-07-21 11:40:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 11:40:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 11:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 11:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 11:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 11:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 11:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 11:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-21 11:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-21 11:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:
 
[INFO][2017-07-21 11:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-21 11:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 11:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-21 11:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 11:41:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:41:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:41:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:41:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:
 
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 11:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-21 11:41:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:41:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:86
 
[INFO][2017-07-21 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:85
 
[INFO][2017-07-21 11:41:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:41:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:67
 
[INFO][2017-07-21 11:41:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:41:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:126
 
[INFO][2017-07-21 11:41:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:41:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:100
 
[INFO][2017-07-21 11:41:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:41:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:98
 
[INFO][2017-07-21 11:41:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:41:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:97
 
[INFO][2017-07-21 11:41:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:41:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:86
 
[INFO][2017-07-21 11:41:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:41:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:85
 
[INFO][2017-07-21 11:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:100
 
[INFO][2017-07-21 11:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:126
 
[INFO][2017-07-21 11:42:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:42:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1172
 
[INFO][2017-07-21 11:42:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:42:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1171
 
[INFO][2017-07-21 11:42:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:42:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:145
 
[INFO][2017-07-21 11:42:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:42:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:142
 
[INFO][2017-07-21 11:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:126
 
[INFO][2017-07-21 11:44:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:44:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1172
 
[INFO][2017-07-21 11:44:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:44:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1171
 
[INFO][2017-07-21 11:44:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:44:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:145
 
[INFO][2017-07-21 11:44:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:44:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:142
 
[INFO][2017-07-21 11:44:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:44:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:126
 
[INFO][2017-07-21 11:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-21 11:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 11 and 20 
[INFO][2017-07-21 11:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-21 11:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-21 11:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 21 and 30 
[INFO][2017-07-21 11:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-21 11:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-21 11:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 31 and 40 
[INFO][2017-07-21 11:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-21 11:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-21 11:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 41 and 43 
[INFO][2017-07-21 11:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-21 11:44:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:44:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-21 11:44:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 31 and 40 
[INFO][2017-07-21 11:44:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-21 11:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-21 11:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 21 and 30 
[INFO][2017-07-21 11:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-21 11:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-21 11:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 11 and 20 
[INFO][2017-07-21 11:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-21 11:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 11:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-21 11:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 11:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-21 11:44:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:44:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:85
 
[INFO][2017-07-21 11:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:82
 
[INFO][2017-07-21 11:44:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:44:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:79
 
[INFO][2017-07-21 11:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:78
 
[INFO][2017-07-21 11:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:73
 
[INFO][2017-07-21 11:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 11:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:67
 
[INFO][2017-07-21 11:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 11:44:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 11:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 11:44:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 11:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 11:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 11:44:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:44:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:44:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:44:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 11:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 11:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 11:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 11:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 11:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 11:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2
参数2:10
 
[INFO][2017-07-21 11:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 11:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
参数2:10
 
[INFO][2017-07-21 11:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 11:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
参数2:10
 
[INFO][2017-07-21 11:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-21 11:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:26
 
[INFO][2017-07-21 11:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-21 11:44:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-21 11:44:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:10
参数2:2
 
[INFO][2017-07-21 11:44:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-21 11:44:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-21 13:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-21 13:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:9
参数2:2017-07-21
参数3:2017-07-21
参数4:9
参数5:2017-07-21
参数6:2017-07-21
参数7:9
参数8:2017-07-21
参数9:2017-07-21
参数10:9
参数11:2017-07-21
参数12:2017-07-21
参数13:9
参数14:2017-07-21
参数15:2017-07-21
参数16:9
参数17:2017-07-21
参数18:2017-07-21
 
[INFO][2017-07-21 13:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-21 13:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2017-07-21
参数2:2017-07-21
参数3:9
参数4:2017-07-20
参数5:2017-07-20
参数6:9
参数7:2017-07-14
参数8:2017-07-14
参数9:9
 
[INFO][2017-07-21 13:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-21 13:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:chenbin
 
[INFO][2017-07-21 13:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 13:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:351
参数2:1032
 
[INFO][2017-07-21 13:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 13:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:352
参数2:1032
 
[INFO][2017-07-21 13:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 13:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:375
参数2:1032
 
[INFO][2017-07-21 13:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 13:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:380
参数2:1032
 
[INFO][2017-07-21 13:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 13:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:376
参数2:1032
 
[INFO][2017-07-21 13:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 13:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:355
参数2:1032
 
[INFO][2017-07-21 13:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 13:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:356
参数2:1032
 
[INFO][2017-07-21 13:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-21 13:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-07-21 13:56:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-21 13:56:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
参数2:2017-07-21
参数3:2017-07-21
参数4:9
参数5:2017-07-21
参数6:2017-07-21
参数7:9
参数8:2017-07-21
参数9:2017-07-21
参数10:9
参数11:2017-07-21
参数12:2017-07-21
参数13:9
参数14:2017-07-21
参数15:2017-07-21
参数16:9
参数17:2017-07-21
参数18:2017-07-21
 
[INFO][2017-07-21 13:56:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-21 13:56:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-07-21
参数2:2017-07-21
参数3:9
参数4:2017-07-20
参数5:2017-07-20
参数6:9
参数7:2017-07-14
参数8:2017-07-14
参数9:9
 
[INFO][2017-07-21 13:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 13:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 13:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 13:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 13:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 13:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 13:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 13:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 13:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 13:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 13:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 13:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 13:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 13:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 13:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 13:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 13:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 13:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 13:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 13:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 13:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 13:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 13:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 13:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 13:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 13:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 13:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 13:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:
 
[INFO][2017-07-21 13:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 13:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-21 13:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 13:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-21 13:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 13:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-21 13:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 13:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-21 13:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 13:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 13:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 13:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 13:57:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores_manage.getPageRecord: 
select count(0) from (select a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id)  tmp_count 
[INFO][2017-07-21 13:57:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 13:57:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores_manage.getPageRecord: 
select tmp.* from (select (row_number() Over(order by a.stores_id asc)) as rownumber, a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 13:57:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 14:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 14:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-21 14:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-21 14:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores_manage.getPageRecord: 
select count(0) from (select a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id)  tmp_count 
[INFO][2017-07-21 14:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 14:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores_manage.getPageRecord: 
select tmp.* from (select (row_number() Over(order by a.stores_id asc)) as rownumber, a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id) tmp where tmp.rownumber between 16 and 16 
[INFO][2017-07-21 14:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 14:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores_manage.getPageRecord: 
select count(0) from (select a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id)  tmp_count 
[INFO][2017-07-21 14:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores_manage.getPageRecord: 
select tmp.* from (select (row_number() Over(order by a.stores_id asc)) as rownumber, a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 14:03:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 14:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:03:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 14:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 14:03:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 14:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:03:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 14:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 14:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 14:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 14:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:03:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:03:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[WARN][2017-07-21 14:03:08] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-4 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 14:03:08] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 14:03:08] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-5 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 14:03:08] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-21 14:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 14:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 14:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[WARN][2017-07-21 14:03:10] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 14:03:10] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-21 14:03:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:03:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 14:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 14:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-21 14:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-21 14:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 14:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 14:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-21 14:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-21 14:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 14:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-07-21 14:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 14:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
参数2:1000002
参数3:红烧牛腩
参数4:hsn
参数5:红烧牛腩（小份）,红烧牛腩  (份),红烧牛腩（小份）,红烧牛腩,红烧牛腩-大份,红烧牛腩  (大份)
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:29:46
参数12:1
参数13:0
参数14:26.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:360
参数20:null
参数21:null
参数22:10
参数23:2
 
[INFO][2017-07-21 14:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 14:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-21 14:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 14:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
参数2:1000003
参数3:农家小炒肉
参数4:njxcr
参数5:农家小炒肉,农家小炒肉  (份),农家小炒肉-份,农家小炒肉  (大份),农家小炒肉-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:49:41
参数12:1
参数13:0
参数14:18.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:340
参数20:null
参数21:null
参数22:10
参数23:3
 
[INFO][2017-07-21 14:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 14:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:7
 
[INFO][2017-07-21 14:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 14:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
参数2:1000007
参数3:番茄炒鸡蛋
参数4:fqcjd
参数5:番茄炒鸡蛋  (份),番茄炒鸡蛋饭-份,番茄炒鸡蛋 （份）,番茄炒鸡蛋,番茄炒鸡蛋-份,番茄炒鸡蛋 （大份）,番茄炒鸡蛋-大份,番茄炒鸡蛋  (大份),番茄炒鸡蛋饭-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-09 10:06:39
参数12:1
参数13:0
参数14:19.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:480
参数20:null
参数21:null
参数22:10
参数23:7
 
[INFO][2017-07-21 14:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 14:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:10
 
[INFO][2017-07-21 14:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 14:05:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
参数2:1000010
参数3:花菜炒豆腐
参数4:hccdf
参数5:花菜炒豆腐,花菜炒豆腐  (份),花菜炒豆腐-份,花菜炒豆腐（大份）,花菜炒豆腐(大份),花菜炒豆腐  (大份),花菜炒豆腐-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-09 10:05:30
参数12:1
参数13:0
参数14:20.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:10
 
[INFO][2017-07-21 14:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 14:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:24
 
[INFO][2017-07-21 14:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 14:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
参数2:1000024
参数3:小炒土豆片
参数4:xctdp
参数5:小炒土豆片
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:47:23
参数12:1
参数13:0
参数14:16.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:430
参数20:null
参数21:null
参数22:10
参数23:24
 
[INFO][2017-07-21 14:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 14:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:73
 
[INFO][2017-07-21 14:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 14:05:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:6
参数2:6000007
参数3:百事可乐（听装）
参数4:bskltz
参数5:百事可乐（听装）,百事可乐（常温）
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-03-11 18:04:43
参数12:0
参数13:0
参数14:3.8
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:73
 
[INFO][2017-07-21 14:05:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 14:05:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:74
 
[INFO][2017-07-21 14:05:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 14:05:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:6
参数2:6000008
参数3:雪碧（听装）
参数4:xbtz
参数5:雪碧（听装）
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-03-11 18:05:20
参数12:0
参数13:0
参数14:3.8
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:74
 
[INFO][2017-07-21 14:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 14:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:82
 
[INFO][2017-07-21 14:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 14:05:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:8
参数2:8000001
参数3:米饭
参数4:mf
参数5:米饭,香米饭,米饭1份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-22 15:36:33
参数12:1
参数13:0
参数14:1.0
参数15:0
参数16:0
参数17:0
参数18:0
参数19:330
参数20:null
参数21:null
参数22:10
参数23:82
 
[INFO][2017-07-21 14:05:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 14:05:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:88
 
[INFO][2017-07-21 14:05:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 14:05:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
参数2:1000038
参数3:水煮肉片
参数4:szrp
参数5:水煮肉片
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:48:35
参数12:1
参数13:0
参数14:24.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:690
参数20:null
参数21:null
参数22:10
参数23:88
 
[INFO][2017-07-21 14:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 14:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 14:05:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 14:05:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 14:05:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:05:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 14:05:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 14:05:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 14:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 14:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 14:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 14:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 14:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
参数2:9
 
[INFO][2017-07-21 14:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 14:05:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2
参数2:9
 
[INFO][2017-07-21 14:05:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-21 14:05:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:9
 
[INFO][2017-07-21 14:05:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-21 14:05:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:25
 
[INFO][2017-07-21 14:05:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 14:05:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
参数2:9
 
[INFO][2017-07-21 14:05:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:05:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
参数2:9
 
[INFO][2017-07-21 14:05:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores_manage.getPageRecord: 
select count(0) from (select a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id)  tmp_count 
[INFO][2017-07-21 14:05:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 14:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores_manage.getPageRecord: 
select tmp.* from (select (row_number() Over(order by a.stores_id asc)) as rownumber, a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:05:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 14:06:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:06:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:06:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:06:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:06:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:06:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 14:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 14:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 14:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:
 
[INFO][2017-07-21 14:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 14:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-21 14:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 14:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11 参数1:1
 
[INFO][2017-07-21 14:06:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 14:06:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11 参数1:1
 
[INFO][2017-07-21 14:06:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:06:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-21 14:06:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:06:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 14:06:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:06:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 14:07:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:07:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsClassLists: 
select count(0) from (select * from  cds_class)  tmp_count 
[INFO][2017-07-21 14:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 14:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsClassLists: 
select tmp.* from (select (row_number() Over(order by listorder asc)) as rownumber, * from  cds_class) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 14:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 14:07:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_stores.GetGoodsClassLists: 
select count(0) from (select * from  cds_class
         
         WHERE  (
                         brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 14:07:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11 参数1:1
 
[INFO][2017-07-21 14:07:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_stores.GetGoodsClassLists: 
select tmp.* from (select (row_number() Over(order by listorder asc)) as rownumber, * from  cds_class
         
         WHERE  (
                         brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 14:07:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11 参数1:1
 
[INFO][2017-07-21 14:07:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.GetGoodsClassLists: 
select count(0) from (select * from  cds_class
         
         WHERE  (
                         brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 14:07:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-07-21 14:07:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.GetGoodsClassLists: 
select tmp.* from (select (row_number() Over(order by listorder asc)) as rownumber, * from  cds_class
         
         WHERE  (
                         brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-21 14:07:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-07-21 14:07:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 14:07:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 14:07:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 14:07:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 14:07:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:07:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 14:07:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 14:07:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 14:07:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 14:07:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:07:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:07:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:07:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 14:07:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:10
 
[INFO][2017-07-21 14:07:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 14:07:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:16
 
[INFO][2017-07-21 14:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 14:07:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:21
 
[INFO][2017-07-21 14:07:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 14:07:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:15
 
[INFO][2017-07-21 14:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 14:07:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:07:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 14:07:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:07:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:07:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:07:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 14:07:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:07:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 14:07:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 14:07:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:07:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 14:08:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:08:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 14:08:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:08:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 14:08:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:08:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:08:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:08:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 14:08:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 14:08:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 14:08:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:08:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 14:08:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores_manage.getPageRecord: 
select count(0) from (select a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id)  tmp_count 
[INFO][2017-07-21 14:08:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 14:08:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores_manage.getPageRecord: 
select tmp.* from (select (row_number() Over(order by a.stores_id asc)) as rownumber, a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:08:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 14:46:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:46:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:46:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:46:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:46:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:46:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:
 
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11 参数1:1
 
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11 参数1:1
 
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:46:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 14:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 14:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 14:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 14:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:46:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-07-21 14:46:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:46:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:46:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 14:46:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 14:46:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:46:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 14:53:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 14:53:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 14:53:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:53:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 14:53:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 14:53:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 14:53:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 14:53:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:53:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 14:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 14:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 14:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-07-21 14:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 14:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 14:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 14:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 14:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-21 14:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
参数2:2017-07-21
参数3:2017-07-21
参数4:9
参数5:2017-07-21
参数6:2017-07-21
参数7:9
参数8:2017-07-21
参数9:2017-07-21
参数10:9
参数11:2017-07-21
参数12:2017-07-21
参数13:9
参数14:2017-07-21
参数15:2017-07-21
参数16:9
参数17:2017-07-21
参数18:2017-07-21
 
[INFO][2017-07-21 14:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-21 14:54:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-07-21
参数2:2017-07-21
参数3:9
参数4:2017-07-20
参数5:2017-07-20
参数6:9
参数7:2017-07-14
参数8:2017-07-14
参数9:9
 
[INFO][2017-07-21 14:54:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 14:54:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 14:54:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 14:54:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 14:54:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:54:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 14:54:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 14:54:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 14:54:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:54:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 14:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 14:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 14:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-21 14:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 14:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 14:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-21 14:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 14:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 14:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-07-21 14:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 14:55:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 14:55:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 14:55:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 14:55:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:55:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 14:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:
 
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 14:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 14:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 14:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 14:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 14:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 14:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-21 14:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 14:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 14:55:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:55:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-21 14:55:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 14:55:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 14:55:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:55:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-07-21 14:55:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:55:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 14:55:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 14:55:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 14:55:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 14:55:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 14:55:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 14:55:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 14:55:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:55:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 14:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 14:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 14:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-21 14:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[INFO][2017-07-21 14:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-21 14:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[INFO][2017-07-21 14:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-21 14:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 14:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[WARN][2017-07-21 14:56:01] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 14:56:01] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 14:56:02] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 14:56:02] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-11 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 14:56:03] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 14:56:03] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-7 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
参数2:10
 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:26
参数2:不背锅套餐
 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
参数2:10
 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1227683784
 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:26
参数2:再加一份米饭
 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1227826943
 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:26
参数2:特制饮品
 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1227885044
 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:26
参数2:公告（仔细看哦~）
 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1227872705
 
[INFO][2017-07-21 14:56:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (38,39))  tmp_count 
[INFO][2017-07-21 14:56:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-07-21 14:56:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (38,39)) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-21 14:56:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-07-21 15:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 15:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 15:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-21 15:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 15:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-21 15:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 15:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 15:00:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-21 15:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 15:00:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-07-21 15:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 15:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 15:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[INFO][2017-07-21 15:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 15:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 15:00:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 15:00:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-07-21 15:00:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:00:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 15:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 15:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 15:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 15:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 15:00:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:00:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 15:00:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:00:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 15:00:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:00:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 15:00:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 15:00:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
参数2:10
 
[INFO][2017-07-21 15:00:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:00:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:10
 
[INFO][2017-07-21 15:00:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 15:00:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:10
 
[INFO][2017-07-21 15:00:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-21 15:00:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:26
 
[INFO][2017-07-21 15:00:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-21 15:00:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-07-21 15:00:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-21 15:00:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11 参数1:10
参数2:2
 
[INFO][2017-07-21 15:00:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-21 15:00:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-07-21 15:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1278,1274)
                
            
            
                
                     and c.class_id in (39,38))  tmp_count 
[INFO][2017-07-21 15:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-07-21 15:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1278,1274)
                
            
            
                
                     and c.class_id in (39,38)) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 15:00:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-07-21 15:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1278,1274)
                
            
            
                
                     and c.class_id in (39,38))  tmp_count 
[INFO][2017-07-21 15:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-07-21 15:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1278,1274)
                
            
            
                
                     and c.class_id in (39,38)) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 15:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-07-21 15:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-21 15:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
参数2:2017-07-21
参数3:2017-07-21
参数4:9
参数5:2017-07-21
参数6:2017-07-21
参数7:9
参数8:2017-07-21
参数9:2017-07-21
参数10:9
参数11:2017-07-21
参数12:2017-07-21
参数13:9
参数14:2017-07-21
参数15:2017-07-21
参数16:9
参数17:2017-07-21
参数18:2017-07-21
 
[INFO][2017-07-21 15:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-21 15:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-07-21
参数2:2017-07-21
参数3:9
参数4:2017-07-20
参数5:2017-07-20
参数6:9
参数7:2017-07-14
参数8:2017-07-14
参数9:9
 
[INFO][2017-07-21 15:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 15:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 15:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:03:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 15:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 15:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 15:03:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 15:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:03:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 15:03:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 15:03:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[INFO][2017-07-21 15:03:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 16 and 30 
[INFO][2017-07-21 15:03:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[INFO][2017-07-21 15:03:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 15:03:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 15:03:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 31 and 45 
[INFO][2017-07-21 15:03:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 15:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:39
 
[INFO][2017-07-21 15:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 15:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:39
 
[INFO][2017-07-21 15:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:40
 
[INFO][2017-07-21 15:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-21 15:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:40
 
[INFO][2017-07-21 15:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:37
 
[INFO][2017-07-21 15:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-21 15:03:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:37
 
[INFO][2017-07-21 15:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:35
 
[INFO][2017-07-21 15:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:35
 
[INFO][2017-07-21 15:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:34
 
[INFO][2017-07-21 15:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 15:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:34
 
[INFO][2017-07-21 15:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:31
 
[INFO][2017-07-21 15:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:31
 
[INFO][2017-07-21 15:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:30
 
[INFO][2017-07-21 15:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:30
 
[INFO][2017-07-21 15:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:29
 
[INFO][2017-07-21 15:03:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:03:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:29
 
[INFO][2017-07-21 15:03:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11 参数1:24
 
[INFO][2017-07-21 15:03:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-21 15:03:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11 参数1:24
 
[INFO][2017-07-21 15:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-21 15:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-21 15:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-21 15:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:31
 
[INFO][2017-07-21 15:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:31
 
[INFO][2017-07-21 15:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:35
 
[INFO][2017-07-21 15:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:35
 
[INFO][2017-07-21 15:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 15:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 15:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-21 15:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 15:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-21 15:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 15:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 15:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-21 15:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 15:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11 参数1:1
参数2:20
 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:28
参数2:新品上新（含米饭）
 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_ptstores_manage.GetGoodsClassList: 
select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11 参数1:1
参数2:20
 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1227305965
 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:28
参数2:菜大师公告
 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1227310908
 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:28
参数2:美味套餐（含米饭）
 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1227833673
 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:28
参数2:精致小炒（含米饭）
 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1227305966
 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:28
参数2:营养靓汤（不含米饭）
 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 15:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1227325956
 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:28
参数2:另加米饭
 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1227315884
 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:28
参数2:美味小吃
 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1227310909
 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:28
参数2:饮料（单点不外送哦）
 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1227325957
 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1227305967
 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:28
参数2:何谓大师
 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1227598636
 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:28
参数2:私厨直播
 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1227310910
 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-21 15:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:28
参数2:回收站
 
[INFO][2017-07-21 15:03:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:40
 
[INFO][2017-07-21 15:03:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-21 15:03:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:40
 
[INFO][2017-07-21 15:03:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:43
 
[INFO][2017-07-21 15:03:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-21 15:03:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:43
 
[INFO][2017-07-21 15:03:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:39
 
[INFO][2017-07-21 15:03:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 15:03:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:39
 
[INFO][2017-07-21 15:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:37
 
[INFO][2017-07-21 15:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-21 15:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:37
 
[INFO][2017-07-21 15:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:35
 
[INFO][2017-07-21 15:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:35
 
[INFO][2017-07-21 15:03:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:34
 
[INFO][2017-07-21 15:03:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 15:03:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:34
 
[INFO][2017-07-21 15:03:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11 参数1:33
 
[INFO][2017-07-21 15:03:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:03:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11 参数1:33
 
[INFO][2017-07-21 15:03:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:31
 
[INFO][2017-07-21 15:03:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:03:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:31
 
[INFO][2017-07-21 15:03:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:30
 
[INFO][2017-07-21 15:03:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:03:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:30
 
[INFO][2017-07-21 15:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:29
 
[INFO][2017-07-21 15:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:29
 
[INFO][2017-07-21 15:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:34
 
[INFO][2017-07-21 15:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 15:03:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:34
 
[INFO][2017-07-21 15:03:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:37
 
[INFO][2017-07-21 15:03:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-21 15:03:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:37
 
[INFO][2017-07-21 15:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:39
 
[INFO][2017-07-21 15:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 15:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:39
 
[INFO][2017-07-21 15:03:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:03:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 15:03:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:03:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 15:03:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:03:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 15:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-21 15:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:10
 
[INFO][2017-07-21 15:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:10
 
[INFO][2017-07-21 15:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 15:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:10
 
[INFO][2017-07-21 15:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-21 15:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:26
 
[INFO][2017-07-21 15:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-21 15:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-07-21 15:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-21 15:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
参数2:2
 
[INFO][2017-07-21 15:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-21 15:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-07-21 15:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:10
参数3:38
 
[INFO][2017-07-21 15:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 15:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:10
参数3:38
 
[INFO][2017-07-21 15:04:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:04:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
参数2:10
参数3:39
 
[INFO][2017-07-21 15:04:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )
                
            
            
                
                    AND (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 15:04:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
参数2:10
参数3:39
 
[INFO][2017-07-21 15:04:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-21 15:04:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:10
 
[INFO][2017-07-21 15:04:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 15:04:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:10
 
[INFO][2017-07-21 15:04:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores_manage.getPageRecord: 
select count(0) from (select a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id)  tmp_count 
[INFO][2017-07-21 15:04:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 15:04:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores_manage.getPageRecord: 
select tmp.* from (select (row_number() Over(order by a.stores_id asc)) as rownumber, a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:04:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 15:07:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-21 15:07:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
参数2:2017-07-21
参数3:2017-07-21
参数4:9
参数5:2017-07-21
参数6:2017-07-21
参数7:9
参数8:2017-07-21
参数9:2017-07-21
参数10:9
参数11:2017-07-21
参数12:2017-07-21
参数13:9
参数14:2017-07-21
参数15:2017-07-21
参数16:9
参数17:2017-07-21
参数18:2017-07-21
 
[INFO][2017-07-21 15:07:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-21 15:07:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2017-07-21
参数2:2017-07-21
参数3:9
参数4:2017-07-20
参数5:2017-07-20
参数6:9
参数7:2017-07-14
参数8:2017-07-14
参数9:9
 
[INFO][2017-07-21 15:07:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores_manage.getPageRecord: 
select count(0) from (select a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id)  tmp_count 
[INFO][2017-07-21 15:07:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 15:07:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores_manage.getPageRecord: 
select tmp.* from (select (row_number() Over(order by a.stores_id asc)) as rownumber, a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:07:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 15:08:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 15:08:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 15:08:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 15:08:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 15:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 15:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 15:08:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 15:08:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 15:08:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 15:08:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:08:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 15:08:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_stores_manage.getPageRecord: 
select count(0) from (select a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id)  tmp_count 
[INFO][2017-07-21 15:08:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[INFO][2017-07-21 15:08:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-11 cds_stores_manage.getPageRecord: 
select tmp.* from (select (row_number() Over(order by a.stores_id asc)) as rownumber, a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:08:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-11  
[INFO][2017-07-21 15:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-21 15:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
参数2:2017-07-21
参数3:2017-07-21
参数4:9
参数5:2017-07-21
参数6:2017-07-21
参数7:9
参数8:2017-07-21
参数9:2017-07-21
参数10:9
参数11:2017-07-21
参数12:2017-07-21
参数13:9
参数14:2017-07-21
参数15:2017-07-21
参数16:9
参数17:2017-07-21
参数18:2017-07-21
 
[INFO][2017-07-21 15:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-21 15:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2017-07-21
参数2:2017-07-21
参数3:9
参数4:2017-07-20
参数5:2017-07-20
参数6:9
参数7:2017-07-14
参数8:2017-07-14
参数9:9
 
[INFO][2017-07-21 15:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores_manage.getPageRecord: 
select count(0) from (select a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id)  tmp_count 
[INFO][2017-07-21 15:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 15:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores_manage.getPageRecord: 
select tmp.* from (select (row_number() Over(order by a.stores_id asc)) as rownumber, a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:09:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 15:09:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores_manage.getPageRecord: 
select count(0) from (select a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id)  tmp_count 
[INFO][2017-07-21 15:09:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 15:09:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores_manage.getPageRecord: 
select tmp.* from (select (row_number() Over(order by a.stores_id asc)) as rownumber, a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:09:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 15:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-21 15:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-21 15:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-21 15:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 15:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-21 15:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 15:35:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-21 15:35:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 15:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_task
             


         WHERE stores_id = ? 
         
            ORDER BY es_id 
[INFO][2017-07-21 15:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:null
 
[INFO][2017-07-21 15:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-21 15:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-21 15:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-21 15:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 15:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-21 15:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 15:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-21 15:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 15:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-21 15:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-21 15:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-21 15:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 15:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-21 15:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 15:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-21 15:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 15:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-21 15:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-21 15:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-21 15:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 15:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-21 15:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 15:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-21 15:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 15:35:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-21 15:35:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-21 15:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-21 15:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 15:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-21 15:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 15:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-21 15:35:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 15:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-21 15:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-21 15:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_task
             


         WHERE stores_id = ? 
         
            ORDER BY es_id 
[INFO][2017-07-21 15:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:null
 
[INFO][2017-07-21 15:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-21 15:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 15:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-21 15:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 15:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-21 15:35:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 15:35:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 15:35:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 15:35:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getStoresLoginPageRecord: 
select count(0) from (select * from  cds_stores_login)  tmp_count 
[INFO][2017-07-21 15:35:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 15:35:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getStoresLoginPageRecord: 
select tmp.* from (select (row_number() Over(order by id asc)) as rownumber, * from  cds_stores_login) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-07-21 15:35:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 15:48:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:48:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 15:48:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:48:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:
 
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 15:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 15:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:
 
[INFO][2017-07-21 15:48:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:48:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-21 15:48:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 15:48:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 15:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:
 
[INFO][2017-07-21 15:49:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 15:49:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-21 15:49:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 15:49:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-21 15:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-21 15:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-21 15:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-21 15:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 15:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-21 15:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 15:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-21 15:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 15:51:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 15:51:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-21 15:51:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getStoresLoginPageRecord: 
select count(0) from (select * from  cds_stores_login)  tmp_count 
[INFO][2017-07-21 15:51:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 15:51:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getStoresLoginPageRecord: 
select tmp.* from (select (row_number() Over(order by id asc)) as rownumber, * from  cds_stores_login) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-07-21 15:51:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 15:52:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 15:52:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 15:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getStoresLoginPageRecord: 
select count(0) from (select * from  cds_stores_login)  tmp_count 
[INFO][2017-07-21 15:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 15:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getStoresLoginPageRecord: 
select tmp.* from (select (row_number() Over(order by id asc)) as rownumber, * from  cds_stores_login) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-07-21 15:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 15:53:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 15:53:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 15:53:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getStoresLoginPageRecord: 
select count(0) from (select * from  cds_stores_login)  tmp_count 
[INFO][2017-07-21 15:53:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 15:53:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getStoresLoginPageRecord: 
select tmp.* from (select (row_number() Over(order by id asc)) as rownumber, * from  cds_stores_login) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-07-21 15:53:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 16:01:43] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Fri Jul 21 09:16:18 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-21 16:01:43] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-21 16:01:44] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-21 16:01:44] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Fri Jul 21 09:16:15 CST 2017]; root of context hierarchy 
[INFO][2017-07-21 16:01:44] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-21 16:01:56] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-21 16:01:56] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Fri Jul 21 16:01:56 CST 2017]; root of context hierarchy 
[INFO][2017-07-21 16:01:56] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-21 16:01:57] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-21 16:01:57] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-21 16:01:57] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-21 16:01:59] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-21 16:01:59] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2738 ms 
[INFO][2017-07-21 16:01:59] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-21 16:01:59] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Fri Jul 21 16:01:59 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-21 16:01:59] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-21 16:02:01] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 16:02:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 16:02:03] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Fri Jul 21 16:01:59 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-21 16:02:04] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-21 16:02:04] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-21 16:02:04] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-50310-1500624124501-1:1,clientId=null,started=false} 
[INFO][2017-07-21 16:02:04] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-21 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-21 16:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-21 16:02:05] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5705 ms 
[INFO][2017-07-21 16:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-21 16:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:chenbin
 
[INFO][2017-07-21 16:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 16:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:351
参数2:1032
 
[INFO][2017-07-21 16:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 16:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:352
参数2:1032
 
[INFO][2017-07-21 16:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 16:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:375
参数2:1032
 
[INFO][2017-07-21 16:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 16:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:380
参数2:1032
 
[INFO][2017-07-21 16:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 16:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:353
参数2:1032
 
[INFO][2017-07-21 16:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 16:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:376
参数2:1032
 
[INFO][2017-07-21 16:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 16:02:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:372
参数2:1032
 
[INFO][2017-07-21 16:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 16:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:354
参数2:1032
 
[INFO][2017-07-21 16:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 16:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:355
参数2:1032
 
[INFO][2017-07-21 16:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 16:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:356
参数2:1032
 
[INFO][2017-07-21 16:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-21 16:02:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:0
 
[INFO][2017-07-21 16:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-21 16:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:0
参数2:2017-07-21
参数3:2017-07-21
参数4:0
参数5:2017-07-21
参数6:2017-07-21
参数7:0
参数8:2017-07-21
参数9:2017-07-21
参数10:0
参数11:2017-07-21
参数12:2017-07-21
参数13:0
参数14:2017-07-21
参数15:2017-07-21
参数16:0
参数17:2017-07-21
参数18:2017-07-21
 
[INFO][2017-07-21 16:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-21 16:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-07-21
参数2:2017-07-21
参数3:0
参数4:2017-07-20
参数5:2017-07-20
参数6:0
参数7:2017-07-14
参数8:2017-07-14
参数9:0
 
[INFO][2017-07-21 16:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 16:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 16:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 16:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 16:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 16:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 16:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 16:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 16:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 16:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 16:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 16:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 16:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 16:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 16:02:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getStoresLoginPageRecord: 
select count(0) from (select * from  cds_stores_login)  tmp_count 
[INFO][2017-07-21 16:02:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 16:02:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getStoresLoginPageRecord: 
select tmp.* from (select (row_number() Over(order by id asc)) as rownumber, * from  cds_stores_login) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-07-21 16:02:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 16:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.insertRecord: 
INSERT INTO cds_stores_login(
          
            stores_id
         , 
            username
         , 
            pass
         , 
            version_no
         , 
            login_time
         , 
            print_format_id
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-21 16:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:21
参数2:测试
参数3:###00d2f65401cda914173ba469067b3715
参数4:null
参数5:null
参数6:1
 
[INFO][2017-07-21 16:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getStoresLoginPageRecord: 
select count(0) from (select * from  cds_stores_login)  tmp_count 
[INFO][2017-07-21 16:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 16:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getStoresLoginPageRecord: 
select tmp.* from (select (row_number() Over(order by id asc)) as rownumber, * from  cds_stores_login) tmp where tmp.rownumber between 1 and 13 
[INFO][2017-07-21 16:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 16:09:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.updateRecord: 
UPDATE cds_stores_login
         SET stores_id = ?
            ,
                username = ?
            ,
                pass = ?
            ,
                version_no = ?
            ,
                login_time = ?
            ,
                print_format_id = ? 
         WHERE id = ? 
[INFO][2017-07-21 16:09:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:21
参数2:测试
参数3:###3b1173a1f9323fde899a102804df97d7
参数4:null
参数5:null
参数6:2
参数7:13
 
[INFO][2017-07-21 16:09:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getStoresLoginPageRecord: 
select count(0) from (select * from  cds_stores_login)  tmp_count 
[INFO][2017-07-21 16:09:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 16:09:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getStoresLoginPageRecord: 
select tmp.* from (select (row_number() Over(order by id asc)) as rownumber, * from  cds_stores_login) tmp where tmp.rownumber between 1 and 13 
[INFO][2017-07-21 16:09:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 16:10:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.updateRecord: 
UPDATE cds_stores_login
         SET stores_id = ?
            ,
                username = ?
            ,
                pass = ?
            ,
                version_no = ?
            ,
                login_time = ?
            ,
                print_format_id = ? 
         WHERE id = ? 
[INFO][2017-07-21 16:10:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:21
参数2:测试
参数3:###4ca05669b1f967de84ef9db65c8b28b7
参数4:null
参数5:null
参数6:1
参数7:13
 
[INFO][2017-07-21 16:10:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getStoresLoginPageRecord: 
select count(0) from (select * from  cds_stores_login)  tmp_count 
[INFO][2017-07-21 16:10:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 16:10:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getStoresLoginPageRecord: 
select tmp.* from (select (row_number() Over(order by id asc)) as rownumber, * from  cds_stores_login) tmp where tmp.rownumber between 1 and 13 
[INFO][2017-07-21 16:10:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 17:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 17:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 17:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getStoresLoginPageRecord: 
select count(0) from (select * from  cds_stores_login)  tmp_count 
[INFO][2017-07-21 17:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 17:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getStoresLoginPageRecord: 
select tmp.* from (select (row_number() Over(order by id asc)) as rownumber, * from  cds_stores_login) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-07-21 17:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 17:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 17:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 17:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_prints
             


          
         
            ORDER BY print_id 
[INFO][2017-07-21 17:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 17:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_prints.getPageRecord: 
select count(0) from (select b.brand_name,p.* from cds_prints p
            left join cds_brand b on p.brand_id = b.brand_id
            where p.stores_id = ?)  tmp_count 
[INFO][2017-07-21 17:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:0
 
[INFO][2017-07-21 17:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_prints.getPageRecord: 
select b.brand_name,p.* from cds_prints p
            left join cds_brand b on p.brand_id = b.brand_id
            where p.stores_id = ? 
[INFO][2017-07-21 17:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:0
 
[INFO][2017-07-21 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_scanner.getPageRecord: 
select count(0) from (select * from cds_scanner
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:0
 
[INFO][2017-07-21 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_scanner.getPageRecord: 
select * from cds_scanner
            where stores_id = ? 
[INFO][2017-07-21 17:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:0
 
[INFO][2017-07-21 17:20:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 17:20:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_prints
             


          
         
            ORDER BY print_id 
[INFO][2017-07-21 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_prints.getPageRecord: 
select count(0) from (select b.brand_name,p.* from cds_prints p
            left join cds_brand b on p.brand_id = b.brand_id
            where p.stores_id = ?)  tmp_count 
[INFO][2017-07-21 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:0
 
[INFO][2017-07-21 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_prints.getPageRecord: 
select b.brand_name,p.* from cds_prints p
            left join cds_brand b on p.brand_id = b.brand_id
            where p.stores_id = ? 
[INFO][2017-07-21 17:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:0
 
[INFO][2017-07-21 17:21:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-21 17:21:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-21 17:21:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-21 17:21:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 17:21:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-21 17:21:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 17:21:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-21 17:21:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 17:21:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_task
             


         WHERE stores_id = ? 
         
            ORDER BY es_id 
[INFO][2017-07-21 17:21:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:null
 
[INFO][2017-07-21 17:21:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-21 17:21:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-21 17:21:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-21 17:21:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 17:21:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-21 17:21:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 17:21:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-21 17:21:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 17:21:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-21 17:21:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-21 17:21:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-21 17:21:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 17:21:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-21 17:21:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 17:21:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-21 17:21:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 17:21:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:21:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:14
 
[INFO][2017-07-21 17:21:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:21:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-07-21 17:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_task
             


         WHERE stores_id = ? 
         
            ORDER BY es_id 
[INFO][2017-07-21 17:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:null
 
[INFO][2017-07-21 17:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-21 17:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-21 17:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-21 17:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 17:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-21 17:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 17:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-21 17:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 17:22:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_task
             


         WHERE stores_id = ? 
         
            ORDER BY es_id 
[INFO][2017-07-21 17:22:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-07-21 17:29:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_task
             


         WHERE stores_id = ? 
         
            ORDER BY es_id 
[INFO][2017-07-21 17:29:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
 
[INFO][2017-07-21 17:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_task
             


         WHERE stores_id = ? 
         
            ORDER BY es_id 
[INFO][2017-07-21 17:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:11
 
[INFO][2017-07-21 17:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_task
             


         WHERE stores_id = ? 
         
            ORDER BY es_id 
[INFO][2017-07-21 17:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-07-21 17:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_task
             


         WHERE stores_id = ? 
         
            ORDER BY es_id 
[INFO][2017-07-21 17:29:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-07-21 17:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-21 17:35:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-21 17:35:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-21 17:35:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 17:35:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-21 17:35:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 17:35:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-21 17:35:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 17:35:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:35:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:12
 
[INFO][2017-07-21 17:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:14
 
[INFO][2017-07-21 17:35:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:35:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:13
 
[INFO][2017-07-21 17:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:12
 
[INFO][2017-07-21 17:35:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:35:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:11
 
[INFO][2017-07-21 17:35:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:35:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-07-21 17:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-07-21 17:35:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:35:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-07-21 17:35:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:35:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:11
 
[INFO][2017-07-21 17:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-07-21 17:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:12
 
[INFO][2017-07-21 17:36:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-07-21 17:36:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:11
 
[INFO][2017-07-21 17:36:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:12
 
[INFO][2017-07-21 17:36:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-07-21 17:36:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:11
 
[INFO][2017-07-21 17:36:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:12
 
[INFO][2017-07-21 17:36:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:13
 
[INFO][2017-07-21 17:36:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:12
 
[INFO][2017-07-21 17:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:11
 
[INFO][2017-07-21 17:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-07-21 17:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-07-21 17:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-07-21 17:36:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-07-21 17:36:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-07-21 17:36:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 17:36:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-21 17:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 17:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-21 17:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 17:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-21 17:36:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 17:36:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-07-21 17:36:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 17:36:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:1000002
参数3:红烧牛腩
参数4:hsn
参数5:红烧牛腩（小份）,红烧牛腩  (份),红烧牛腩（小份）,红烧牛腩,红烧牛腩-大份,红烧牛腩  (大份)
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:29:46
参数12:1
参数13:0
参数14:26.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:360
参数20:null
参数21:null
参数22:10
参数23:2
 
[INFO][2017-07-21 17:36:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 17:36:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:6
 
[INFO][2017-07-21 17:36:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 17:36:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
参数2:1000006
参数3:川味辣子鸡
参数4:cwlzj
参数5:辣子鸡,正宗川味辣子鸡,正宗川味辣子鸡  (份),正宗川味辣子鸡-份,正宗川味辣子鸡-小份,正宗川味辣子鸡-大份,正宗川味辣子鸡 （大份）,正宗川味辣子鸡  (大份)
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:47:57
参数12:1
参数13:0
参数14:20.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:290
参数20:null
参数21:null
参数22:10
参数23:6
 
[INFO][2017-07-21 17:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 17:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-07-21 17:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 17:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:1000010
参数3:花菜炒豆腐
参数4:hccdf
参数5:花菜炒豆腐,花菜炒豆腐  (份),花菜炒豆腐-份,花菜炒豆腐（大份）,花菜炒豆腐(大份),花菜炒豆腐  (大份),花菜炒豆腐-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-09 10:05:30
参数12:1
参数13:0
参数14:20.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:10
 
[INFO][2017-07-21 17:36:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 17:36:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:24
 
[INFO][2017-07-21 17:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 17:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:1000024
参数3:小炒土豆片
参数4:xctdp
参数5:小炒土豆片
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:47:23
参数12:1
参数13:0
参数14:16.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:430
参数20:null
参数21:null
参数22:10
参数23:24
 
[INFO][2017-07-21 17:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 17:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:73
 
[INFO][2017-07-21 17:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 17:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:6
参数2:6000007
参数3:百事可乐（听装）
参数4:bskltz
参数5:百事可乐（听装）,百事可乐（常温）
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-03-11 18:04:43
参数12:0
参数13:0
参数14:3.8
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:73
 
[INFO][2017-07-21 17:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-21 17:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:82
 
[INFO][2017-07-21 17:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-21 17:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:8
参数2:8000001
参数3:米饭
参数4:mf
参数5:米饭,香米饭,米饭1份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-22 15:36:33
参数12:1
参数13:0
参数14:1.0
参数15:0
参数16:0
参数17:0
参数18:0
参数19:330
参数20:null
参数21:null
参数22:10
参数23:82
 
[INFO][2017-07-21 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 17:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 17:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 17:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 17:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 17:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 17:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 17:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 17:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 17:36:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 17:36:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 17:36:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 17:36:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 17:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 17:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 17:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 17:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 17:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 17:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 17:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 17:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 17:36:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 17:36:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 17:36:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 17:36:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[WARN][2017-07-21 17:36:43] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 17:36:43] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 17:36:43] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 17:36:44] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 17:36:45] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-7 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 17:36:45] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-21 17:36:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 17:36:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 17:36:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 17:36:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 17:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-21 17:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-21 17:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-21 17:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-21 17:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-21 17:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-21 17:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-21 17:36:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-21 17:36:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:14
 
[INFO][2017-07-21 17:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:11
 
[INFO][2017-07-21 17:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 17:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-07-21 17:37:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores_order_info.getErpPageCount: 
SELECT count(*) FROM cds_ms_goods mg WHERE mg.status = 1 
[INFO][2017-07-21 17:37:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 17:37:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores_order_info.searchGoods: 
SELECT
            tmp.*
        FROM
            (
                SELECT
                    (
                        row_number () OVER (ORDER BY mg.good_id DESC)
                    ) AS rownumber,
                    (
                        SELECT
                            COUNT (*)
                        FROM
                            cds_chufan_meal cm
                        LEFT JOIN cds_chufan_meal_goods cmg ON cmg.cm_id = cm.cm_id
                        WHERE
                            cm.stores_id = ?
                        AND mg.good_id = cmg.good_id
                    ) AS type,
                    mg.good_id,
                    mg.class_id,
                    mg.good_num,
                    mg.status,
                    mg.good_name,
                    mg.out_time,
                    mg.pinxin,
                    mg.good_price,
                    mg.uptime,
                    mg.good_key
                FROM
                    cds_ms_goods mg
                WHERE
                    mg.status = 1

            ) tmp
        WHERE
            tmp.rownumber BETWEEN ?
        AND ? 
[INFO][2017-07-21 17:37:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
参数2:1
参数3:100
 
[INFO][2017-07-21 17:58:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE are_level = ? 
         
            ORDER BY id 
[INFO][2017-07-21 17:58:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:0
 
[INFO][2017-07-21 17:58:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores_manage.getPageRecord: 
select count(0) from (select a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id)  tmp_count 
[INFO][2017-07-21 17:58:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 17:58:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores_manage.getPageRecord: 
select tmp.* from (select (row_number() Over(order by a.stores_id asc)) as rownumber, a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 17:58:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-21 17:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 17:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 17:59:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 17:59:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-21 17:59:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 17:59:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-21 17:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 17:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 17:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 17:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 17:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 17:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 17:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 17:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 17:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 17:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 17:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-21 17:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:
 
[INFO][2017-07-21 17:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-21 17:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-21 17:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-21 17:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-21 17:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 17:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-21 17:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-21 17:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-21 17:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 17:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-21 17:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 17:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 17:59:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 17:59:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 17:59:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 17:59:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 17:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 17:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-21 17:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 17:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 17:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 17:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 17:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 17:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 17:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-21 17:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-21 17:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 17:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 17:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 17:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 17:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 17:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-21 17:59:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 17:59:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-21 17:59:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 17:59:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 17:59:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-21 17:59:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-07-21 17:59:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 17:59:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-21 17:59:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-21 17:59:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 17:59:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-21 17:59:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 17:59:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 17:59:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-21 17:59:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-21 17:59:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 17:59:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 17:59:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 17:59:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-21 17:59:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 17:59:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-21 17:59:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-21 17:59:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-21 17:59:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-21 17:59:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 17:59:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[WARN][2017-07-21 17:59:19] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 17:59:19] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 17:59:19] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 17:59:19] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 17:59:21] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-21 17:59:21] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-7 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-21 18:03:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-21 18:03:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-21 18:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-21 18:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 18:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-21 18:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 18:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-21 18:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 18:03:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 18:03:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:17
 
[INFO][2017-07-21 18:03:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 18:03:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:16
 
[INFO][2017-07-21 18:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 18:03:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:18
 
[INFO][2017-07-21 18:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 18:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:17
 
[INFO][2017-07-21 18:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 18:04:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:18
 
[INFO][2017-07-21 18:32:20] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Fri Jul 21 16:01:59 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-21 18:32:20] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-21 18:32:21] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-21 18:32:21] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Fri Jul 21 16:01:56 CST 2017]; root of context hierarchy 
[INFO][2017-07-21 18:32:21] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-21 18:32:32] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-21 18:32:32] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Fri Jul 21 18:32:32 CST 2017]; root of context hierarchy 
[INFO][2017-07-21 18:32:32] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-21 18:32:33] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-21 18:32:33] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-21 18:32:33] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-21 18:32:35] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-21 18:32:35] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2967 ms 
[INFO][2017-07-21 18:32:35] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-21 18:32:35] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Fri Jul 21 18:32:35 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-21 18:32:35] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-21 18:32:37] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 18:32:38] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 18:32:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-21 18:32:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 18:32:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 18:32:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-21 18:32:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-21 18:32:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 18:32:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-21 18:32:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-21 18:32:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-21 18:32:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 18:32:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 18:32:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 18:32:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-21 18:32:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-21 18:32:40] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Fri Jul 21 18:32:35 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-21 18:32:40] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-21 18:32:40] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-21 18:32:40] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-55198-1500633160818-1:1,clientId=null,started=false} 
[INFO][2017-07-21 18:32:40] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-21 18:32:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-21 18:32:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-21 18:32:41] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5903 ms 
[INFO][2017-07-21 18:32:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-21 18:32:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-21 18:32:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:32:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-21 18:32:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:32:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-21 18:32:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:32:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:375
参数2:1032
 
[INFO][2017-07-21 18:32:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:32:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:380
参数2:1032
 
[INFO][2017-07-21 18:32:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:32:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-21 18:32:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:32:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-21 18:32:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:32:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-21 18:32:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:32:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-21 18:32:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:32:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-21 18:32:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:32:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-21 18:32:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-21 18:32:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:0
 
[INFO][2017-07-21 18:32:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-21 18:32:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:0
参数2:2017-07-21
参数3:2017-07-21
参数4:0
参数5:2017-07-21
参数6:2017-07-21
参数7:0
参数8:2017-07-21
参数9:2017-07-21
参数10:0
参数11:2017-07-21
参数12:2017-07-21
参数13:0
参数14:2017-07-21
参数15:2017-07-21
参数16:0
参数17:2017-07-21
参数18:2017-07-21
 
[INFO][2017-07-21 18:32:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-21 18:32:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:2017-07-21
参数2:2017-07-21
参数3:0
参数4:2017-07-20
参数5:2017-07-20
参数6:0
参数7:2017-07-14
参数8:2017-07-14
参数9:0
 
[INFO][2017-07-21 18:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-21 18:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-21 18:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-21 18:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 18:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-21 18:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 18:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-21 18:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 18:33:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 18:33:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 18:33:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-21 18:33:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-21 18:33:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-21 18:33:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 18:33:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-21 18:33:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 18:33:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-21 18:33:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 18:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 18:34:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 18:34:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:34:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-21 18:34:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 18:34:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-21 18:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:13
 
[INFO][2017-07-21 18:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:13
 
[INFO][2017-07-21 18:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:12
 
[INFO][2017-07-21 18:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:35:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:12
 
[INFO][2017-07-21 18:35:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:11
 
[INFO][2017-07-21 18:35:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:35:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:11
 
[INFO][2017-07-21 18:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:10
 
[INFO][2017-07-21 18:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 18:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:10
 
[INFO][2017-07-21 18:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:9
 
[INFO][2017-07-21 18:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 18:35:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:9
 
[INFO][2017-07-21 18:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:13
 
[INFO][2017-07-21 18:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:35:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:13
 
[INFO][2017-07-21 18:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:15
 
[INFO][2017-07-21 18:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:35:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:15
 
[INFO][2017-07-21 18:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:16
 
[INFO][2017-07-21 18:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 18:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:16
 
[INFO][2017-07-21 18:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:18
 
[INFO][2017-07-21 18:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 18:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:18
 
[INFO][2017-07-21 18:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:19
 
[INFO][2017-07-21 18:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 18:35:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:19
 
[INFO][2017-07-21 18:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:20
 
[INFO][2017-07-21 18:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 18:35:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:20
 
[INFO][2017-07-21 18:35:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:21
 
[INFO][2017-07-21 18:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 18:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:21
 
[INFO][2017-07-21 18:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:20
 
[INFO][2017-07-21 18:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 18:35:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:20
 
[INFO][2017-07-21 18:35:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:19
 
[INFO][2017-07-21 18:35:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 18:35:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:19
 
[INFO][2017-07-21 18:35:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:17
 
[INFO][2017-07-21 18:35:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:35:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:17
 
[INFO][2017-07-21 18:35:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:16
 
[INFO][2017-07-21 18:35:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 18:35:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:16
 
[INFO][2017-07-21 18:35:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:14
 
[INFO][2017-07-21 18:35:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:35:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:14
 
[INFO][2017-07-21 18:35:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:35:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:13
 
[INFO][2017-07-21 18:35:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:35:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:13
 
[INFO][2017-07-21 18:38:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 18:38:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-21 18:38:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:9
 
[INFO][2017-07-21 18:38:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:9
 
[INFO][2017-07-21 18:38:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:11
 
[INFO][2017-07-21 18:38:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:11
 
[INFO][2017-07-21 18:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:12
 
[INFO][2017-07-21 18:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:12
 
[INFO][2017-07-21 18:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:13
 
[INFO][2017-07-21 18:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:13
 
[INFO][2017-07-21 18:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:14
 
[INFO][2017-07-21 18:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:14
 
[INFO][2017-07-21 18:38:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:15
 
[INFO][2017-07-21 18:38:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:15
 
[INFO][2017-07-21 18:38:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:17
 
[INFO][2017-07-21 18:38:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:17
 
[INFO][2017-07-21 18:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:9
 
[INFO][2017-07-21 18:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:9
 
[INFO][2017-07-21 18:38:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:13
 
[INFO][2017-07-21 18:38:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:13
 
[INFO][2017-07-21 18:38:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:16
 
[INFO][2017-07-21 18:38:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:16
 
[INFO][2017-07-21 18:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:17
 
[INFO][2017-07-21 18:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:17
 
[INFO][2017-07-21 18:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:18
 
[INFO][2017-07-21 18:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:18
 
[INFO][2017-07-21 18:38:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:19
 
[INFO][2017-07-21 18:38:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:19
 
[INFO][2017-07-21 18:38:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:21
 
[INFO][2017-07-21 18:38:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:21
 
[INFO][2017-07-21 18:38:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:21
 
[INFO][2017-07-21 18:38:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:21
 
[INFO][2017-07-21 18:38:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:19
 
[INFO][2017-07-21 18:38:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:19
 
[INFO][2017-07-21 18:38:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:18
 
[INFO][2017-07-21 18:38:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:18
 
[INFO][2017-07-21 18:38:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:17
 
[INFO][2017-07-21 18:38:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:17
 
[INFO][2017-07-21 18:38:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:15
 
[INFO][2017-07-21 18:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:15
 
[INFO][2017-07-21 18:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:14
 
[INFO][2017-07-21 18:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:14
 
[INFO][2017-07-21 18:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:13
 
[INFO][2017-07-21 18:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:13
 
[INFO][2017-07-21 18:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:12
 
[INFO][2017-07-21 18:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:12
 
[INFO][2017-07-21 18:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:11
 
[INFO][2017-07-21 18:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:11
 
[INFO][2017-07-21 18:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:10
 
[INFO][2017-07-21 18:38:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:10
 
[INFO][2017-07-21 18:38:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:9
 
[INFO][2017-07-21 18:38:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:9
 
[INFO][2017-07-21 18:38:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9
 
[INFO][2017-07-21 18:38:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9
 
[INFO][2017-07-21 18:38:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:11
 
[INFO][2017-07-21 18:38:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:11
 
[INFO][2017-07-21 18:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:10
 
[INFO][2017-07-21 18:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:10
 
[INFO][2017-07-21 18:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:12
 
[INFO][2017-07-21 18:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:12
 
[INFO][2017-07-21 18:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:13
 
[INFO][2017-07-21 18:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:13
 
[INFO][2017-07-21 18:38:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:15
 
[INFO][2017-07-21 18:38:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:15
 
[INFO][2017-07-21 18:38:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:16
 
[INFO][2017-07-21 18:38:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:16
 
[INFO][2017-07-21 18:38:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:18
 
[INFO][2017-07-21 18:38:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:18
 
[INFO][2017-07-21 18:38:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:19
 
[INFO][2017-07-21 18:38:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:19
 
[INFO][2017-07-21 18:38:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:20
 
[INFO][2017-07-21 18:38:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:20
 
[INFO][2017-07-21 18:38:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:21
 
[INFO][2017-07-21 18:38:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:38:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:21
 
[INFO][2017-07-21 18:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:14
 
[INFO][2017-07-21 18:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:14
 
[INFO][2017-07-21 18:38:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 18:38:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 18:38:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-21 18:38:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 18:38:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-21 18:38:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:10
 
[INFO][2017-07-21 18:38:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 18:38:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:10
 
[INFO][2017-07-21 18:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:11
 
[INFO][2017-07-21 18:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:11
 
[INFO][2017-07-21 18:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:13
 
[INFO][2017-07-21 18:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:13
 
[INFO][2017-07-21 18:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:16
 
[INFO][2017-07-21 18:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 18:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:16
 
[INFO][2017-07-21 18:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:20
 
[INFO][2017-07-21 18:38:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 18:38:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:20
 
[INFO][2017-07-21 18:38:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:38:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:21
 
[INFO][2017-07-21 18:38:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 18:38:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:21
 
[INFO][2017-07-21 18:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9
 
[INFO][2017-07-21 18:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 18:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9
 
[INFO][2017-07-21 18:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:11
 
[INFO][2017-07-21 18:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:39:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:11
 
[INFO][2017-07-21 18:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE are_level = ? 
         
            ORDER BY id 
[INFO][2017-07-21 18:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:0
 
[INFO][2017-07-21 18:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores_manage.getPageRecord: 
select count(0) from (select a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id)  tmp_count 
[INFO][2017-07-21 18:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 18:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores_manage.getPageRecord: 
select tmp.* from (select (row_number() Over(order by a.stores_id asc)) as rownumber, a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-21 18:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-21 18:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 18:39:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-21 18:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:11
 
[INFO][2017-07-21 18:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:39:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:11
 
[INFO][2017-07-21 18:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:10
 
[INFO][2017-07-21 18:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:10
 
[INFO][2017-07-21 18:39:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:39:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:9
 
[INFO][2017-07-21 18:39:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:39:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:9
 
[INFO][2017-07-21 18:39:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:39:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:9
 
[INFO][2017-07-21 18:39:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:39:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:9
 
[INFO][2017-07-21 18:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:10
 
[INFO][2017-07-21 18:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:10
 
[INFO][2017-07-21 18:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:12
 
[INFO][2017-07-21 18:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:12
 
[INFO][2017-07-21 18:39:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:39:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:13
 
[INFO][2017-07-21 18:39:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:39:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:13
 
[INFO][2017-07-21 18:39:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:39:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:15
 
[INFO][2017-07-21 18:39:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:39:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:15
 
[INFO][2017-07-21 18:40:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 18:40:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-21 18:40:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:40:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:9
 
[INFO][2017-07-21 18:40:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:40:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:9
 
[INFO][2017-07-21 18:40:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:40:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:10
 
[INFO][2017-07-21 18:40:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:40:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:10
 
[INFO][2017-07-21 18:40:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:40:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:11
 
[INFO][2017-07-21 18:40:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:40:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:11
 
[INFO][2017-07-21 18:40:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:40:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:13
 
[INFO][2017-07-21 18:40:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:40:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:13
 
[INFO][2017-07-21 18:40:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:40:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:14
 
[INFO][2017-07-21 18:40:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:40:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:14
 
[INFO][2017-07-21 18:40:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:40:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:16
 
[INFO][2017-07-21 18:40:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:40:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:16
 
[INFO][2017-07-21 18:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:18
 
[INFO][2017-07-21 18:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-21 18:40:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:18
 
[INFO][2017-07-21 18:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 18:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-21 18:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:11
 
[INFO][2017-07-21 18:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:11
 
[INFO][2017-07-21 18:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:10
 
[INFO][2017-07-21 18:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 18:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:10
 
[INFO][2017-07-21 18:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:9
 
[INFO][2017-07-21 18:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 18:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:9
 
[INFO][2017-07-21 18:41:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 18:41:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-21 18:41:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:41:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:9
 
[INFO][2017-07-21 18:41:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 18:41:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:9
 
[WARN][2017-07-21 18:47:19] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-07-21 18:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-21 18:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:chenbin
 
[INFO][2017-07-21 18:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:351
参数2:1032
 
[INFO][2017-07-21 18:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:352
参数2:1032
 
[INFO][2017-07-21 18:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:375
参数2:1032
 
[INFO][2017-07-21 18:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:380
参数2:1032
 
[INFO][2017-07-21 18:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:353
参数2:1032
 
[INFO][2017-07-21 18:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:376
参数2:1032
 
[INFO][2017-07-21 18:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:372
参数2:1032
 
[INFO][2017-07-21 18:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:354
参数2:1032
 
[INFO][2017-07-21 18:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:355
参数2:1032
 
[INFO][2017-07-21 18:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-21 18:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:356
参数2:1032
 
[INFO][2017-07-21 18:47:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-21 18:47:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:0
 
[INFO][2017-07-21 18:47:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-21 18:47:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
参数2:2017-07-21
参数3:2017-07-21
参数4:0
参数5:2017-07-21
参数6:2017-07-21
参数7:0
参数8:2017-07-21
参数9:2017-07-21
参数10:0
参数11:2017-07-21
参数12:2017-07-21
参数13:0
参数14:2017-07-21
参数15:2017-07-21
参数16:0
参数17:2017-07-21
参数18:2017-07-21
 
[INFO][2017-07-21 18:47:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-21 18:47:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-07-21
参数2:2017-07-21
参数3:0
参数4:2017-07-20
参数5:2017-07-20
参数6:0
参数7:2017-07-14
参数8:2017-07-14
参数9:0
 
[INFO][2017-07-21 18:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 18:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-21 18:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 18:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-21 18:47:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:47:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-07-21 18:47:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 18:47:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-07-21 18:47:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:47:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-07-21 18:47:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 18:47:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-07-21 18:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:12
 
[INFO][2017-07-21 18:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:12
 
[INFO][2017-07-21 18:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:11
 
[INFO][2017-07-21 18:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:11
 
[INFO][2017-07-21 18:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:11
 
[INFO][2017-07-21 18:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:11
 
[INFO][2017-07-21 18:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:12
 
[INFO][2017-07-21 18:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 18:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:12
 
[INFO][2017-07-21 18:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 18:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-07-21 18:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 18:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-07-21 19:00:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-21 19:00:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-21 19:00:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-21 19:00:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 19:00:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-21 19:00:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 19:00:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-21 19:00:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-21 19:00:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:00:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:9
 
[INFO][2017-07-21 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:10
 
[INFO][2017-07-21 19:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:11
 
[INFO][2017-07-21 19:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:13
 
[INFO][2017-07-21 19:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:14
 
[INFO][2017-07-21 19:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:13
 
[INFO][2017-07-21 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:14
 
[INFO][2017-07-21 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:15
 
[INFO][2017-07-21 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:16
 
[INFO][2017-07-21 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:17
 
[INFO][2017-07-21 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:16
 
[INFO][2017-07-21 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:19
 
[INFO][2017-07-21 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:18
 
[INFO][2017-07-21 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:18
 
[INFO][2017-07-21 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:17
 
[INFO][2017-07-21 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:19
 
[INFO][2017-07-21 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:20
 
[INFO][2017-07-21 19:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:21
 
[INFO][2017-07-21 19:01:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-21 19:01:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9
 
[INFO][2017-07-21 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-21 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:0
参数2:2017-07-21
参数3:2017-07-21
参数4:0
参数5:2017-07-21
参数6:2017-07-21
参数7:0
参数8:2017-07-21
参数9:2017-07-21
参数10:0
参数11:2017-07-21
参数12:2017-07-21
参数13:0
参数14:2017-07-21
参数15:2017-07-21
参数16:0
参数17:2017-07-21
参数18:2017-07-21
 
[INFO][2017-07-21 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-21 19:02:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-07-21
参数2:2017-07-21
参数3:0
参数4:2017-07-20
参数5:2017-07-20
参数6:0
参数7:2017-07-14
参数8:2017-07-14
参数9:0
 
[INFO][2017-07-21 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-21 19:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-21 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-07-21 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 19:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-07-21 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-07-21 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 19:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-07-21 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-07-21 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 19:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-07-21 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:12
 
[INFO][2017-07-21 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:12
 
[INFO][2017-07-21 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 19:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:14
 
[INFO][2017-07-21 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-21 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:14
 
[INFO][2017-07-21 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:16
 
[INFO][2017-07-21 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 19:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:16
 
[INFO][2017-07-21 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:18
 
[INFO][2017-07-21 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:18
 
[INFO][2017-07-21 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:20
 
[INFO][2017-07-21 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 19:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:20
 
[INFO][2017-07-21 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:19
 
[INFO][2017-07-21 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-21 19:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:19
 
[INFO][2017-07-21 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-21 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:21
 
[INFO][2017-07-21 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-21 19:02:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:21
 
[INFO][2017-07-21 19:02:36] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Fri Jul 21 18:32:35 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-21 19:02:36] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-21 19:02:36] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-21 19:02:36] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Fri Jul 21 18:32:32 CST 2017]; root of context hierarchy 
[INFO][2017-07-21 19:02:36] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 09:15:17] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-22 09:15:17] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 22 09:15:17 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 09:15:17] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-22 09:15:17] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-22 09:15:18] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-22 09:15:18] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-22 09:15:20] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 09:15:20] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 3055 ms 
[INFO][2017-07-22 09:15:20] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-22 09:15:20] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:15:20 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:15:20] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-22 09:15:22] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List com.controller.StoresPrinterController.getChuFanMeal(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:15:23] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:15:24] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:15:20 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:15:24] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-22 09:15:24] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 09:15:24] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-50096-1500686124860-1:1,clientId=null,started=false} 
[INFO][2017-07-22 09:17:51] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-22 09:17:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-22 09:17:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-22 09:17:51] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 151353 ms 
[INFO][2017-07-22 09:17:52] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:15:20 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:17:52] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 09:17:53] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-22 09:17:53] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 22 09:15:17 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 09:17:53] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 09:18:06] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-22 09:18:07] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 22 09:18:07 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 09:18:07] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-22 09:18:07] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-22 09:18:07] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-22 09:18:07] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-22 09:18:10] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 09:18:10] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 3272 ms 
[INFO][2017-07-22 09:18:10] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-22 09:18:10] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:18:10 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:18:10] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-22 09:18:12] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List com.controller.StoresPrinterController.getChuFanMeal(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:18:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:18:14] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:18:10 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:18:14] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-22 09:18:15] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 09:18:15] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-50261-1500686295113-1:1,clientId=null,started=false} 
[INFO][2017-07-22 09:18:15] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-22 09:18:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-22 09:18:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-22 09:18:16] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5841 ms 
[INFO][2017-07-22 09:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-22 09:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:chenbin
 
[INFO][2017-07-22 09:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:351
参数2:1032
 
[INFO][2017-07-22 09:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:352
参数2:1032
 
[INFO][2017-07-22 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:375
参数2:1032
 
[INFO][2017-07-22 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:380
参数2:1032
 
[INFO][2017-07-22 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:353
参数2:1032
 
[INFO][2017-07-22 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:376
参数2:1032
 
[INFO][2017-07-22 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:372
参数2:1032
 
[INFO][2017-07-22 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:354
参数2:1032
 
[INFO][2017-07-22 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:355
参数2:1032
 
[INFO][2017-07-22 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:356
参数2:1032
 
[INFO][2017-07-22 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-22 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:0
 
[INFO][2017-07-22 09:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-22 09:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:0
参数2:2017-07-22
参数3:2017-07-22
参数4:0
参数5:2017-07-22
参数6:2017-07-22
参数7:0
参数8:2017-07-22
参数9:2017-07-22
参数10:0
参数11:2017-07-22
参数12:2017-07-22
参数13:0
参数14:2017-07-22
参数15:2017-07-22
参数16:0
参数17:2017-07-22
参数18:2017-07-22
 
[INFO][2017-07-22 09:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-22 09:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-07-22
参数2:2017-07-22
参数3:0
参数4:2017-07-21
参数5:2017-07-21
参数6:0
参数7:2017-07-15
参数8:2017-07-15
参数9:0
 
[INFO][2017-07-22 09:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 09:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 09:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 09:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-22 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_gift.getGiftPageRecord: 
select count(0) from (select * from cds_gift_register_list g
         
         WHERE g.create_time >= ? 
            
            
                 AND g.create_time <= ? + ' 23:59:59')  tmp_count 
[INFO][2017-07-22 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-07-22
参数2:2017-07-22
 
[INFO][2017-07-22 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_gift.getGiftPageRecord: 
select * from cds_gift_register_list g
         
         WHERE g.create_time >= ? 
            
            
                 AND g.create_time <= ? + ' 23:59:59' 
[INFO][2017-07-22 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-07-22
参数2:2017-07-22
 
[INFO][2017-07-22 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-22 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-22 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 09:20:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:20:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 09:20:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 09:20:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 09:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-22 09:20:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 09:20:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-22 09:20:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-22 09:20:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 09:20:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-22 09:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:20:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-22 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


          
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:20:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-22 09:20:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


          
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:20:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-22 09:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


          
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:20:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-22 09:21:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


          
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:21:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 09:21:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


          
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:21:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-22 09:21:33] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:18:10 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:21:33] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 09:21:33] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-22 09:21:33] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 22 09:18:07 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 09:21:33] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 09:21:46] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(9)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-22 09:21:46] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(9)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 22 09:21:46 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 09:21:46] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(9)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-22 09:21:46] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(9)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-22 09:21:46] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(9)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-22 09:21:46] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(9)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-22 09:21:49] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(9)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 09:21:49] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(9)-127.0.0.1 Root WebApplicationContext: initialization completed in 3032 ms 
[INFO][2017-07-22 09:21:49] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(9)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-22 09:21:49] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(9)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:21:49 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:21:49] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(9)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-22 09:21:52] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(9)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List com.controller.StoresPrinterController.getChuFanMeal(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:21:53] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(9)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:21:54] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(9)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:21:49 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:21:54] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(9)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-22 09:21:54] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(9)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 09:21:54] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(9)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-50526-1500686514699-1:1,clientId=null,started=false} 
[INFO][2017-07-22 09:21:54] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-22 09:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(9)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-22 09:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(9)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-22 09:21:55] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(9)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 6113 ms 
[INFO][2017-07-22 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-22 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:chenbin
 
[INFO][2017-07-22 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-22 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-22 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:22:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:375
参数2:1032
 
[INFO][2017-07-22 09:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:380
参数2:1032
 
[INFO][2017-07-22 09:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-22 09:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-22 09:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-22 09:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:22:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-22 09:22:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:22:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-22 09:22:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:22:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-22 09:22:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-22 09:22:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:0
 
[INFO][2017-07-22 09:22:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-22 09:22:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
参数2:2017-07-22
参数3:2017-07-22
参数4:0
参数5:2017-07-22
参数6:2017-07-22
参数7:0
参数8:2017-07-22
参数9:2017-07-22
参数10:0
参数11:2017-07-22
参数12:2017-07-22
参数13:0
参数14:2017-07-22
参数15:2017-07-22
参数16:0
参数17:2017-07-22
参数18:2017-07-22
 
[INFO][2017-07-22 09:22:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-22 09:22:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-07-22
参数2:2017-07-22
参数3:0
参数4:2017-07-21
参数5:2017-07-21
参数6:0
参数7:2017-07-15
参数8:2017-07-15
参数9:0
 
[INFO][2017-07-22 09:22:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:22:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-22 09:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-07-22 09:22:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:22:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-07-22 09:22:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:22:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-07-22 09:22:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:22:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:12
 
[INFO][2017-07-22 09:22:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:22:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:14
 
[INFO][2017-07-22 09:22:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:22:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:20
 
[INFO][2017-07-22 09:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:19
 
[INFO][2017-07-22 09:22:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:22:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:18
 
[INFO][2017-07-22 09:22:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:22:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:17
 
[INFO][2017-07-22 09:22:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:22:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:15
 
[INFO][2017-07-22 09:22:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:22:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:17
 
[INFO][2017-07-22 09:22:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:22:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:17
 
[INFO][2017-07-22 09:23:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:23:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:17
 
[INFO][2017-07-22 09:24:22] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:21:49 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:24:22] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 09:24:23] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-22 09:24:23] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 22 09:21:46 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 09:24:23] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 09:24:34] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-22 09:24:34] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 22 09:24:34 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 09:24:34] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-22 09:24:35] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-22 09:24:35] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-22 09:24:35] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-22 09:24:37] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 09:24:37] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2956 ms 
[INFO][2017-07-22 09:24:37] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-22 09:24:37] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:24:37 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:24:37] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-22 09:24:39] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List com.controller.StoresPrinterController.getChuFanMeal(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:24:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:24:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:24:37 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:24:42] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-22 09:24:42] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 09:24:42] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-50660-1500686682531-1:1,clientId=null,started=false} 
[INFO][2017-07-22 09:24:42] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-22 09:24:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-22 09:24:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-22 09:24:43] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5637 ms 
[INFO][2017-07-22 09:24:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-22 09:24:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:chenbin
 
[INFO][2017-07-22 09:24:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:24:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:351
参数2:1032
 
[INFO][2017-07-22 09:24:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:24:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:352
参数2:1032
 
[INFO][2017-07-22 09:24:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:24:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:375
参数2:1032
 
[INFO][2017-07-22 09:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:380
参数2:1032
 
[INFO][2017-07-22 09:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:353
参数2:1032
 
[INFO][2017-07-22 09:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:376
参数2:1032
 
[INFO][2017-07-22 09:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:372
参数2:1032
 
[INFO][2017-07-22 09:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:24:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:354
参数2:1032
 
[INFO][2017-07-22 09:24:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:24:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:355
参数2:1032
 
[INFO][2017-07-22 09:24:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:24:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:356
参数2:1032
 
[INFO][2017-07-22 09:24:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-22 09:24:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:0
 
[INFO][2017-07-22 09:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-22 09:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:0
参数2:2017-07-22
参数3:2017-07-22
参数4:0
参数5:2017-07-22
参数6:2017-07-22
参数7:0
参数8:2017-07-22
参数9:2017-07-22
参数10:0
参数11:2017-07-22
参数12:2017-07-22
参数13:0
参数14:2017-07-22
参数15:2017-07-22
参数16:0
参数17:2017-07-22
参数18:2017-07-22
 
[INFO][2017-07-22 09:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-22 09:24:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-07-22
参数2:2017-07-22
参数3:0
参数4:2017-07-21
参数5:2017-07-21
参数6:0
参数7:2017-07-15
参数8:2017-07-15
参数9:0
 
[INFO][2017-07-22 09:24:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-22 09:24:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 09:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 09:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 09:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 09:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-22 09:25:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 09:25:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-22 09:25:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-22 09:25:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 09:25:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-22 09:25:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 09:25:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-22 09:25:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 09:25:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-22 09:25:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 09:25:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-22 09:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-22 09:25:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:25:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:16
 
[INFO][2017-07-22 09:25:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:25:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:14
 
[INFO][2017-07-22 09:25:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:25:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:11
 
[INFO][2017-07-22 09:25:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:25:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-07-22 09:25:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-22 09:25:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:chenbin
 
[INFO][2017-07-22 09:25:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:25:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:351
参数2:1032
 
[INFO][2017-07-22 09:25:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:25:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:352
参数2:1032
 
[INFO][2017-07-22 09:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:375
参数2:1032
 
[INFO][2017-07-22 09:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:380
参数2:1032
 
[INFO][2017-07-22 09:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:353
参数2:1032
 
[INFO][2017-07-22 09:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:376
参数2:1032
 
[INFO][2017-07-22 09:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:372
参数2:1032
 
[INFO][2017-07-22 09:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:25:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:354
参数2:1032
 
[INFO][2017-07-22 09:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:355
参数2:1032
 
[INFO][2017-07-22 09:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:356
参数2:1032
 
[INFO][2017-07-22 09:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-22 09:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:0
 
[INFO][2017-07-22 09:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-22 09:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:0
参数2:2017-07-22
参数3:2017-07-22
参数4:0
参数5:2017-07-22
参数6:2017-07-22
参数7:0
参数8:2017-07-22
参数9:2017-07-22
参数10:0
参数11:2017-07-22
参数12:2017-07-22
参数13:0
参数14:2017-07-22
参数15:2017-07-22
参数16:0
参数17:2017-07-22
参数18:2017-07-22
 
[INFO][2017-07-22 09:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-22 09:25:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:2017-07-22
参数2:2017-07-22
参数3:0
参数4:2017-07-21
参数5:2017-07-21
参数6:0
参数7:2017-07-15
参数8:2017-07-15
参数9:0
 
[INFO][2017-07-22 09:26:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-22 09:26:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 09:26:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:26:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 09:26:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 09:26:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 09:26:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-22 09:26:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 09:26:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-22 09:26:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-22 09:26:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 09:26:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-22 09:26:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:26:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 09:26:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:26:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-22 09:26:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:26:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:10
 
[INFO][2017-07-22 09:26:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:26:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:11
 
[INFO][2017-07-22 09:26:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:26:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:11
 
[INFO][2017-07-22 09:26:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:26:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:12
 
[INFO][2017-07-22 09:26:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:26:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:13
 
[INFO][2017-07-22 09:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:15
 
[INFO][2017-07-22 09:26:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:26:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:16
 
[INFO][2017-07-22 09:26:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:26:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:17
 
[INFO][2017-07-22 09:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:26:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:19
 
[INFO][2017-07-22 09:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:21
 
[INFO][2017-07-22 09:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:26:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:20
 
[INFO][2017-07-22 09:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:12
 
[INFO][2017-07-22 09:26:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:26:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:10
 
[INFO][2017-07-22 09:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 09:35:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:35:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:9
 
[INFO][2017-07-22 09:35:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:35:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:11
 
[INFO][2017-07-22 09:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:12
 
[INFO][2017-07-22 09:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:35:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:11
 
[INFO][2017-07-22 09:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:13
 
[INFO][2017-07-22 09:35:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:35:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:15
 
[INFO][2017-07-22 09:36:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:36:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-22 09:36:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:36:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:9
 
[INFO][2017-07-22 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:10
 
[INFO][2017-07-22 09:36:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:36:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:10
 
[INFO][2017-07-22 09:36:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:36:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:11
 
[INFO][2017-07-22 09:36:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:36:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:11
 
[INFO][2017-07-22 09:36:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:36:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:12
 
[INFO][2017-07-22 09:37:50] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:24:37 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:37:50] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 09:37:51] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-22 09:37:51] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 22 09:24:34 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 09:37:51] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 09:38:03] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-22 09:38:03] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 22 09:38:03 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 09:38:03] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-22 09:38:03] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-22 09:38:03] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-22 09:38:03] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-22 09:38:05] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 09:38:05] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2833 ms 
[INFO][2017-07-22 09:38:05] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-22 09:38:05] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:38:05 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:38:05] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-22 09:38:08] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 09:38:08] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.framework.mapping.system.CdsChufanMeal> com.controller.StoresPrinterController.getChuFanMeal(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:38:09] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:38:10] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:38:05 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:38:10] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-22 09:38:10] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 09:38:10] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-51866-1500687490861-1:1,clientId=null,started=false} 
[INFO][2017-07-22 09:38:11] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-22 09:38:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-22 09:38:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-22 09:38:11] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5780 ms 
[INFO][2017-07-22 09:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-22 09:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-22 09:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-22 09:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-22 09:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:375
参数2:1032
 
[INFO][2017-07-22 09:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:380
参数2:1032
 
[INFO][2017-07-22 09:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:38:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-22 09:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-22 09:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-22 09:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-22 09:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-22 09:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-22 09:38:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-22 09:38:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:0
 
[INFO][2017-07-22 09:38:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-22 09:38:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:0
参数2:2017-07-22
参数3:2017-07-22
参数4:0
参数5:2017-07-22
参数6:2017-07-22
参数7:0
参数8:2017-07-22
参数9:2017-07-22
参数10:0
参数11:2017-07-22
参数12:2017-07-22
参数13:0
参数14:2017-07-22
参数15:2017-07-22
参数16:0
参数17:2017-07-22
参数18:2017-07-22
 
[INFO][2017-07-22 09:38:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-22 09:38:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:2017-07-22
参数2:2017-07-22
参数3:0
参数4:2017-07-21
参数5:2017-07-21
参数6:0
参数7:2017-07-15
参数8:2017-07-15
参数9:0
 
[INFO][2017-07-22 09:38:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:38:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-22 09:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-22 09:38:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:38:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:11
 
[INFO][2017-07-22 09:38:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:38:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:11
 
[INFO][2017-07-22 09:39:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:39:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:11
 
[INFO][2017-07-22 09:40:27] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:38:05 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:40:27] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 09:40:28] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-22 09:40:28] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 22 09:38:03 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 09:40:28] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 09:40:39] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-22 09:40:39] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 22 09:40:39 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 09:40:39] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-22 09:40:39] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-22 09:40:39] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-22 09:40:40] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-22 09:40:42] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 09:40:42] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2945 ms 
[INFO][2017-07-22 09:40:42] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-22 09:40:42] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:40:42 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:40:42] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-22 09:40:44] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:40:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:40:46] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:40:42 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:40:46] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-22 09:40:47] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 09:40:47] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-51969-1500687647226-1:1,clientId=null,started=false} 
[INFO][2017-07-22 09:40:47] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-22 09:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-22 09:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-22 09:40:48] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5668 ms 
[INFO][2017-07-22 09:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-22 09:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-22 09:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-22 09:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-22 09:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:375
参数2:1032
 
[INFO][2017-07-22 09:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:380
参数2:1032
 
[INFO][2017-07-22 09:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-22 09:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-22 09:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-22 09:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-22 09:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-22 09:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-22 09:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-22 09:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:0
 
[INFO][2017-07-22 09:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-22 09:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:0
参数2:2017-07-22
参数3:2017-07-22
参数4:0
参数5:2017-07-22
参数6:2017-07-22
参数7:0
参数8:2017-07-22
参数9:2017-07-22
参数10:0
参数11:2017-07-22
参数12:2017-07-22
参数13:0
参数14:2017-07-22
参数15:2017-07-22
参数16:0
参数17:2017-07-22
参数18:2017-07-22
 
[INFO][2017-07-22 09:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-22 09:41:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:2017-07-22
参数2:2017-07-22
参数3:0
参数4:2017-07-21
参数5:2017-07-21
参数6:0
参数7:2017-07-15
参数8:2017-07-15
参数9:0
 
[INFO][2017-07-22 09:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-22 09:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:10
 
[INFO][2017-07-22 09:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:10
 
[INFO][2017-07-22 09:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:11
 
[INFO][2017-07-22 09:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:41:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:11
 
[INFO][2017-07-22 09:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:12
 
[INFO][2017-07-22 09:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:12
 
[INFO][2017-07-22 09:41:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:41:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:13
 
[INFO][2017-07-22 09:41:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:41:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:13
 
[INFO][2017-07-22 09:41:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:41:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:14
 
[INFO][2017-07-22 09:41:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:41:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:14
 
[INFO][2017-07-22 09:41:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:41:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:15
 
[INFO][2017-07-22 09:41:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:41:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:15
 
[INFO][2017-07-22 09:41:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:41:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:17
 
[INFO][2017-07-22 09:41:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:41:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:17
 
[INFO][2017-07-22 09:41:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:41:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:18
 
[INFO][2017-07-22 09:41:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:41:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:18
 
[INFO][2017-07-22 09:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:19
 
[INFO][2017-07-22 09:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:19
 
[INFO][2017-07-22 09:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:20
 
[INFO][2017-07-22 09:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:20
 
[INFO][2017-07-22 09:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-22 09:41:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:41:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-22 09:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-22 09:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:9
 
[INFO][2017-07-22 09:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:9
 
[INFO][2017-07-22 09:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:10
 
[INFO][2017-07-22 09:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:10
 
[INFO][2017-07-22 09:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:11
 
[INFO][2017-07-22 09:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:11
 
[INFO][2017-07-22 09:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:13
 
[INFO][2017-07-22 09:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:13
 
[INFO][2017-07-22 09:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:14
 
[INFO][2017-07-22 09:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:14
 
[INFO][2017-07-22 09:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:15
 
[INFO][2017-07-22 09:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:15
 
[INFO][2017-07-22 09:44:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:16
 
[INFO][2017-07-22 09:44:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:44:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:16
 
[INFO][2017-07-22 09:44:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:17
 
[INFO][2017-07-22 09:44:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:44:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:17
 
[INFO][2017-07-22 09:44:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:18
 
[INFO][2017-07-22 09:44:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:44:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:18
 
[INFO][2017-07-22 09:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:19
 
[INFO][2017-07-22 09:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:19
 
[INFO][2017-07-22 09:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:20
 
[INFO][2017-07-22 09:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:20
 
[INFO][2017-07-22 09:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:21
 
[INFO][2017-07-22 09:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:21
 
[INFO][2017-07-22 09:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:20
 
[INFO][2017-07-22 09:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:20
 
[INFO][2017-07-22 09:44:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:19
 
[INFO][2017-07-22 09:44:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:44:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:19
 
[INFO][2017-07-22 09:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:18
 
[INFO][2017-07-22 09:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:18
 
[INFO][2017-07-22 09:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:17
 
[INFO][2017-07-22 09:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:44:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:17
 
[INFO][2017-07-22 09:44:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:16
 
[INFO][2017-07-22 09:44:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:44:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:16
 
[INFO][2017-07-22 09:44:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:15
 
[INFO][2017-07-22 09:44:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:44:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:15
 
[INFO][2017-07-22 09:44:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:14
 
[INFO][2017-07-22 09:44:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:44:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:14
 
[INFO][2017-07-22 09:44:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:13
 
[INFO][2017-07-22 09:44:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:44:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:13
 
[INFO][2017-07-22 09:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:12
 
[INFO][2017-07-22 09:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:12
 
[INFO][2017-07-22 09:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:10
 
[INFO][2017-07-22 09:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:44:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:10
 
[INFO][2017-07-22 09:44:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9
 
[INFO][2017-07-22 09:44:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:44:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9
 
[INFO][2017-07-22 09:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-22 09:44:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:13
 
[INFO][2017-07-22 09:44:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:44:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:13
 
[INFO][2017-07-22 09:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:12
 
[INFO][2017-07-22 09:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:44:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:12
 
[INFO][2017-07-22 09:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:11
 
[INFO][2017-07-22 09:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:44:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:11
 
[INFO][2017-07-22 09:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-22 09:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-22 09:44:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:9
 
[INFO][2017-07-22 09:44:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:44:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:9
 
[INFO][2017-07-22 09:44:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:44:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:10
 
[INFO][2017-07-22 09:44:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:44:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:10
 
[INFO][2017-07-22 09:46:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:46:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-22 09:46:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-22 09:46:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 09:46:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-22 09:46:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 09:46:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-22 09:46:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 09:46:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:46:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-22 09:46:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:46:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-22 09:46:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:46:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-22 09:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:12
 
[INFO][2017-07-22 09:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:12
 
[INFO][2017-07-22 09:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:11
 
[INFO][2017-07-22 09:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:11
 
[INFO][2017-07-22 09:46:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:46:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:9
 
[INFO][2017-07-22 09:46:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:46:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:9
 
[INFO][2017-07-22 09:46:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:46:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:13
 
[INFO][2017-07-22 09:46:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:46:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:13
 
[INFO][2017-07-22 09:46:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:46:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:16
 
[INFO][2017-07-22 09:46:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:46:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:16
 
[INFO][2017-07-22 09:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 09:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-22 09:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-22 09:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:13
 
[INFO][2017-07-22 09:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:13
 
[INFO][2017-07-22 09:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:12
 
[INFO][2017-07-22 09:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:47:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:12
 
[INFO][2017-07-22 09:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:11
 
[INFO][2017-07-22 09:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:47:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:11
 
[INFO][2017-07-22 09:47:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:47:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:10
 
[INFO][2017-07-22 09:47:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over()) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:47:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:10
 
[INFO][2017-07-22 09:47:11] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) http-nio-8001-exec-5 Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
[INFO][2017-07-22 09:47:11] org.springframework.jdbc.support.SQLErrorCodesFactory.<init>(SQLErrorCodesFactory.java:127) http-nio-8001-exec-5 SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
[WARN][2017-07-22 09:47:11] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-5 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 函数“row_number”必须有包含 ORDER BY 的 OVER 子句。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_printer.xml]
### The error may involve cds_printer.getChuFanMeal-Inline
### The error occurred while setting parameters
### SQL: select tmp.* from (select (row_number() Over()) as rownumber, * from cds_chufan_meal             where stores_id = ?) tmp where tmp.rownumber between 1 and 0
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 函数“row_number”必须有包含 ORDER BY 的 OVER 子句。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [4112]; 函数“row_number”必须有包含 ORDER BY 的 OVER 子句。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 函数“row_number”必须有包含 ORDER BY 的 OVER 子句。 
[INFO][2017-07-22 09:47:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:47:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:9
 
[INFO][2017-07-22 09:47:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over()) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:47:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:9
 
[WARN][2017-07-22 09:47:14] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-7 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 函数“row_number”必须有包含 ORDER BY 的 OVER 子句。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_printer.xml]
### The error may involve cds_printer.getChuFanMeal-Inline
### The error occurred while setting parameters
### SQL: select tmp.* from (select (row_number() Over()) as rownumber, * from cds_chufan_meal             where stores_id = ?) tmp where tmp.rownumber between 1 and 0
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 函数“row_number”必须有包含 ORDER BY 的 OVER 子句。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [4112]; 函数“row_number”必须有包含 ORDER BY 的 OVER 子句。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 函数“row_number”必须有包含 ORDER BY 的 OVER 子句。 
[INFO][2017-07-22 09:47:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:47:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-22 09:48:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:48:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-22 09:48:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:9
 
[INFO][2017-07-22 09:48:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 09:48:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:9
 
[INFO][2017-07-22 09:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:11
 
[INFO][2017-07-22 09:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:11
 
[INFO][2017-07-22 09:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:12
 
[INFO][2017-07-22 09:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:12
 
[INFO][2017-07-22 09:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:13
 
[INFO][2017-07-22 09:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:13
 
[INFO][2017-07-22 09:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:14
 
[INFO][2017-07-22 09:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:48:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:14
 
[INFO][2017-07-22 09:48:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-22 09:48:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-22 09:48:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:48:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-22 09:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 09:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-22 09:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-22 09:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-22 09:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-22 09:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 09:48:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 09:48:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 09:48:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:48:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 09:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9
 
[INFO][2017-07-22 09:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-22 09:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9
 
[INFO][2017-07-22 09:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:10
 
[INFO][2017-07-22 09:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-22 09:48:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:10
 
[INFO][2017-07-22 09:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:12
 
[INFO][2017-07-22 09:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:48:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:12
 
[INFO][2017-07-22 09:48:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:13
 
[INFO][2017-07-22 09:48:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:48:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:13
 
[INFO][2017-07-22 09:48:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:14
 
[INFO][2017-07-22 09:48:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:48:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:14
 
[INFO][2017-07-22 09:48:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:16
 
[INFO][2017-07-22 09:48:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-22 09:48:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:16
 
[INFO][2017-07-22 09:48:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:17
 
[INFO][2017-07-22 09:48:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:48:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:17
 
[INFO][2017-07-22 09:48:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:18
 
[INFO][2017-07-22 09:48:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-22 09:48:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:18
 
[INFO][2017-07-22 09:48:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:20
 
[INFO][2017-07-22 09:48:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-22 09:48:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:20
 
[INFO][2017-07-22 09:48:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:21
 
[INFO][2017-07-22 09:48:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-22 09:48:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:21
 
[INFO][2017-07-22 09:48:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:20
 
[INFO][2017-07-22 09:48:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-22 09:48:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:20
 
[INFO][2017-07-22 09:48:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:18
 
[INFO][2017-07-22 09:48:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-22 09:48:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:18
 
[INFO][2017-07-22 09:48:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:16
 
[INFO][2017-07-22 09:48:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-22 09:48:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:16
 
[INFO][2017-07-22 09:48:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:14
 
[INFO][2017-07-22 09:48:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:48:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:14
 
[INFO][2017-07-22 09:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:13
 
[INFO][2017-07-22 09:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:48:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:13
 
[INFO][2017-07-22 09:48:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:12
 
[INFO][2017-07-22 09:48:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:48:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:12
 
[INFO][2017-07-22 09:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:10
 
[INFO][2017-07-22 09:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-22 09:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:10
 
[INFO][2017-07-22 09:48:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:48:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:9
 
[INFO][2017-07-22 09:48:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-22 09:48:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:9
 
[INFO][2017-07-22 09:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:14
 
[INFO][2017-07-22 09:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:14
 
[INFO][2017-07-22 09:49:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:49:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:16
 
[INFO][2017-07-22 09:49:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-22 09:49:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:16
 
[INFO][2017-07-22 09:49:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:49:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:15
 
[INFO][2017-07-22 09:49:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:49:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:15
 
[INFO][2017-07-22 09:49:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:49:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:14
 
[INFO][2017-07-22 09:49:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:49:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:14
 
[INFO][2017-07-22 09:49:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:49:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:15
 
[INFO][2017-07-22 09:49:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:49:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:15
 
[INFO][2017-07-22 09:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:18
 
[INFO][2017-07-22 09:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-22 09:49:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:18
 
[INFO][2017-07-22 09:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:16
 
[INFO][2017-07-22 09:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanMeal: 
select tmp.* from (select (row_number() Over(order by cm_id asc)) as rownumber, * from cds_chufan_meal
            where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-22 09:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:16
 
[INFO][2017-07-22 09:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select count(0) from (select * from cds_chufan_meal
            where stores_id = ?)  tmp_count 
[INFO][2017-07-22 09:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:17
 
[INFO][2017-07-22 09:49:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanMeal: 
select * from cds_chufan_meal
            where stores_id = ? 
[INFO][2017-07-22 09:49:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:17
 
[INFO][2017-07-22 09:52:17] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:40:42 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:52:17] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 09:52:18] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-22 09:52:18] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 22 09:40:39 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 09:52:18] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 09:52:29] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-22 09:52:29] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 22 09:52:29 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 09:52:29] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-22 09:52:30] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-22 09:52:30] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-22 09:52:30] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-22 09:52:32] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 09:52:32] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2887 ms 
[INFO][2017-07-22 09:52:32] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-22 09:52:32] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:52:32 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:52:32] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-22 09:52:34] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.lang.String com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 09:52:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 09:52:36] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:52:32 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:52:37] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-22 09:52:37] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 09:52:37] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-52259-1500688357440-1:1,clientId=null,started=false} 
[INFO][2017-07-22 09:52:37] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-22 09:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-22 09:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-22 09:52:38] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5665 ms 
[INFO][2017-07-22 09:53:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-22 09:53:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:chenbin
 
[INFO][2017-07-22 09:53:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:53:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:351
参数2:1032
 
[INFO][2017-07-22 09:53:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:53:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:352
参数2:1032
 
[INFO][2017-07-22 09:53:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:53:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:375
参数2:1032
 
[INFO][2017-07-22 09:53:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:53:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:380
参数2:1032
 
[INFO][2017-07-22 09:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:353
参数2:1032
 
[INFO][2017-07-22 09:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:376
参数2:1032
 
[INFO][2017-07-22 09:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:372
参数2:1032
 
[INFO][2017-07-22 09:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:354
参数2:1032
 
[INFO][2017-07-22 09:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:355
参数2:1032
 
[INFO][2017-07-22 09:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 09:53:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:356
参数2:1032
 
[INFO][2017-07-22 09:53:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-22 09:53:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:0
 
[INFO][2017-07-22 09:53:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-22 09:53:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:0
参数2:2017-07-22
参数3:2017-07-22
参数4:0
参数5:2017-07-22
参数6:2017-07-22
参数7:0
参数8:2017-07-22
参数9:2017-07-22
参数10:0
参数11:2017-07-22
参数12:2017-07-22
参数13:0
参数14:2017-07-22
参数15:2017-07-22
参数16:0
参数17:2017-07-22
参数18:2017-07-22
 
[INFO][2017-07-22 09:53:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-22 09:53:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:2017-07-22
参数2:2017-07-22
参数3:0
参数4:2017-07-21
参数5:2017-07-21
参数6:0
参数7:2017-07-15
参数8:2017-07-15
参数9:0
 
[INFO][2017-07-22 09:53:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 09:53:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 09:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 09:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:13
 
[WARN][2017-07-22 09:53:18] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-22 09:59:48] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 09:52:32 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 09:59:48] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 09:59:48] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-22 09:59:48] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 22 09:52:29 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 09:59:48] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 10:00:00] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(4)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-22 10:00:00] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(4)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 22 10:00:00 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 10:00:00] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-22 10:00:00] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-22 10:00:01] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-22 10:00:01] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(4)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-22 10:00:03] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(4)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 10:00:03] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(4)-127.0.0.1 Root WebApplicationContext: initialization completed in 2801 ms 
[INFO][2017-07-22 10:00:03] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(4)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-22 10:00:03] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(4)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 10:00:03 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 10:00:03] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-22 10:00:05] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(4)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:00:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:00:07] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(4)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 10:00:03 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 10:00:07] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(4)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-22 10:00:07] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(4)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 10:00:08] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(4)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-52454-1500688807971-1:1,clientId=null,started=false} 
[INFO][2017-07-22 10:00:08] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-22 10:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(4)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-22 10:00:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(4)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-22 10:00:08] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(4)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5368 ms 
[INFO][2017-07-22 10:00:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-22 10:00:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-22 10:00:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:00:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-22 10:00:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:00:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-22 10:00:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:00:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:375
参数2:1032
 
[INFO][2017-07-22 10:00:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:00:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:380
参数2:1032
 
[INFO][2017-07-22 10:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-22 10:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-22 10:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-22 10:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-22 10:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-22 10:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-22 10:00:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-22 10:00:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:0
 
[INFO][2017-07-22 10:00:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-22 10:00:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:0
参数2:2017-07-22
参数3:2017-07-22
参数4:0
参数5:2017-07-22
参数6:2017-07-22
参数7:0
参数8:2017-07-22
参数9:2017-07-22
参数10:0
参数11:2017-07-22
参数12:2017-07-22
参数13:0
参数14:2017-07-22
参数15:2017-07-22
参数16:0
参数17:2017-07-22
参数18:2017-07-22
 
[INFO][2017-07-22 10:00:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-22 10:00:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:2017-07-22
参数2:2017-07-22
参数3:0
参数4:2017-07-21
参数5:2017-07-21
参数6:0
参数7:2017-07-15
参数8:2017-07-15
参数9:0
 
[INFO][2017-07-22 10:00:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:00:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-22 10:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-22 10:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:11
 
[INFO][2017-07-22 10:00:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:12
 
[INFO][2017-07-22 10:00:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:13
 
[INFO][2017-07-22 10:00:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:14
 
[INFO][2017-07-22 10:00:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:16
 
[INFO][2017-07-22 10:00:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:17
 
[INFO][2017-07-22 10:00:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:18
 
[INFO][2017-07-22 10:00:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:19
 
[INFO][2017-07-22 10:00:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:21
 
[INFO][2017-07-22 10:00:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:21
 
[INFO][2017-07-22 10:00:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:20
 
[INFO][2017-07-22 10:00:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:19
 
[INFO][2017-07-22 10:00:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:18
 
[INFO][2017-07-22 10:00:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:17
 
[INFO][2017-07-22 10:00:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:16
 
[INFO][2017-07-22 10:00:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:14
 
[INFO][2017-07-22 10:00:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:13
 
[INFO][2017-07-22 10:00:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:11
 
[INFO][2017-07-22 10:00:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:10
 
[INFO][2017-07-22 10:00:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-22 10:00:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:10
 
[INFO][2017-07-22 10:00:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:11
 
[INFO][2017-07-22 10:00:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:13
 
[INFO][2017-07-22 10:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:12
 
[INFO][2017-07-22 10:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:11
 
[INFO][2017-07-22 10:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:10
 
[INFO][2017-07-22 10:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:9
 
[INFO][2017-07-22 10:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:01:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-22 10:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:01:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-22 10:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:10
 
[INFO][2017-07-22 10:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:12
 
[INFO][2017-07-22 10:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:13
 
[INFO][2017-07-22 10:01:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:01:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:14
 
[INFO][2017-07-22 10:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:15
 
[INFO][2017-07-22 10:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:01:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:17
 
[INFO][2017-07-22 10:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:18
 
[INFO][2017-07-22 10:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:01:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:19
 
[INFO][2017-07-22 10:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:01:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:20
 
[INFO][2017-07-22 10:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:01:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:20
 
[INFO][2017-07-22 10:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:01:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:21
 
[INFO][2017-07-22 10:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:20
 
[INFO][2017-07-22 10:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:18
 
[INFO][2017-07-22 10:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:17
 
[INFO][2017-07-22 10:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:01:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:15
 
[INFO][2017-07-22 10:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:13
 
[INFO][2017-07-22 10:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:11
 
[INFO][2017-07-22 10:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:02:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:10
 
[INFO][2017-07-22 10:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:02:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:9
 
[INFO][2017-07-22 10:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:02:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:10
 
[INFO][2017-07-22 10:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:10
 
[INFO][2017-07-22 10:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:10
 
[INFO][2017-07-22 10:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 10:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:9
 
[INFO][2017-07-22 10:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:10
 
[INFO][2017-07-22 10:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:11
 
[INFO][2017-07-22 10:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:12
 
[INFO][2017-07-22 10:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:03:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:13
 
[INFO][2017-07-22 10:03:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:03:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:14
 
[INFO][2017-07-22 10:03:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:03:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:15
 
[INFO][2017-07-22 10:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:17
 
[INFO][2017-07-22 10:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:18
 
[INFO][2017-07-22 10:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:20
 
[INFO][2017-07-22 10:03:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:03:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:11
 
[INFO][2017-07-22 10:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:10
 
[INFO][2017-07-22 10:03:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:03:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:9
 
[INFO][2017-07-22 10:03:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:03:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:10
 
[INFO][2017-07-22 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:04:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-22 10:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-22 10:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:04:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:10
 
[INFO][2017-07-22 10:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:12
 
[INFO][2017-07-22 10:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:04:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:13
 
[INFO][2017-07-22 10:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:14
 
[INFO][2017-07-22 10:04:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:04:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:15
 
[INFO][2017-07-22 10:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:9
 
[INFO][2017-07-22 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-22 10:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-22 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-22 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-22 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:05:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 10:05:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:05:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-22 10:05:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:05:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-22 10:05:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE are_level = ? 
         
            ORDER BY id 
[INFO][2017-07-22 10:05:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:0
 
[INFO][2017-07-22 10:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores_manage.getPageRecord: 
select count(0) from (select a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id)  tmp_count 
[INFO][2017-07-22 10:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-22 10:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores_manage.getPageRecord: 
select tmp.* from (select (row_number() Over(order by a.stores_id asc)) as rownumber, a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-22 10:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-22 10:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
参数2:0
 
[INFO][2017-07-22 10:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-22 10:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
参数2:0
 
[INFO][2017-07-22 10:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-22 10:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:0
 
[INFO][2017-07-22 10:05:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-22 10:05:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:0
 
[INFO][2017-07-22 10:05:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-22 10:05:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
参数2:0
 
[INFO][2017-07-22 10:05:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-22 10:05:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
参数2:0
 
[INFO][2017-07-22 10:05:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 10:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 10:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-22 10:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-22 10:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:
 
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:05:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-22 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-22 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:05:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:
 
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:05:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-22 10:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE are_level = ? 
         
            ORDER BY id 
[INFO][2017-07-22 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:0
 
[INFO][2017-07-22 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores_manage.getPageRecord: 
select count(0) from (select a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id)  tmp_count 
[INFO][2017-07-22 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-22 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores_manage.getPageRecord: 
select tmp.* from (select (row_number() Over(order by a.stores_id asc)) as rownumber, a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:05:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-22 10:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-22 10:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 10:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-22 10:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-22 10:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-22 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-22 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-22 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:05:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:
 
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-22 10:05:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:05:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-22 10:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:15
 
[INFO][2017-07-22 10:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:13
 
[INFO][2017-07-22 10:05:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:05:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:12
 
[INFO][2017-07-22 10:05:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:05:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:11
 
[INFO][2017-07-22 10:06:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:06:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:10
 
[INFO][2017-07-22 10:06:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:06:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9
 
[INFO][2017-07-22 10:06:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:06:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:12
 
[INFO][2017-07-22 10:06:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:06:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:14
 
[INFO][2017-07-22 10:06:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:06:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:10
 
[INFO][2017-07-22 10:06:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:06:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:9
 
[INFO][2017-07-22 10:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:06:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:20
 
[INFO][2017-07-22 10:06:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:06:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:19
 
[INFO][2017-07-22 10:06:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:06:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:18
 
[INFO][2017-07-22 10:06:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:06:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:17
 
[INFO][2017-07-22 10:06:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:06:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:16
 
[INFO][2017-07-22 10:06:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:06:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:14
 
[INFO][2017-07-22 10:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:13
 
[INFO][2017-07-22 10:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:06:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:12
 
[INFO][2017-07-22 10:06:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:06:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:11
 
[INFO][2017-07-22 10:06:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:06:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:10
 
[INFO][2017-07-22 10:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:9
 
[INFO][2017-07-22 10:16:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:16:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-22 10:16:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-22 10:16:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 10:16:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-22 10:16:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 10:16:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-22 10:16:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 10:16:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-22 10:16:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:10
 
[INFO][2017-07-22 10:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores_order_info.getErpPageCount: 
SELECT count(*) FROM cds_ms_goods mg WHERE mg.status = 1 
[INFO][2017-07-22 10:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-22 10:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores_order_info.searchGoods: 
SELECT
            tmp.*
        FROM
            (
                SELECT
                    (
                        row_number () OVER (ORDER BY mg.good_id DESC)
                    ) AS rownumber,
                    (
                        SELECT
                            COUNT (*)
                        FROM
                            cds_chufan_meal cm
                        LEFT JOIN cds_chufan_meal_goods cmg ON cmg.cm_id = cm.cm_id
                        WHERE
                            cm.stores_id = ?
                        AND mg.good_id = cmg.good_id
                    ) AS type,
                    mg.good_id,
                    mg.class_id,
                    mg.good_num,
                    mg.status,
                    mg.good_name,
                    mg.out_time,
                    mg.pinxin,
                    mg.good_price,
                    mg.uptime,
                    mg.good_key
                FROM
                    cds_ms_goods mg
                WHERE
                    mg.status = 1

            ) tmp
        WHERE
            tmp.rownumber BETWEEN ?
        AND ? 
[INFO][2017-07-22 10:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:10
参数2:1
参数3:100
 
[INFO][2017-07-22 10:16:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:16:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-22 10:16:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 10:16:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-22 10:16:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:16:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-22 10:16:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 10:16:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-22 10:16:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 16 and 30 
[INFO][2017-07-22 10:16:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-22 10:16:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 10:16:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-22 10:16:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 31 and 43 
[INFO][2017-07-22 10:16:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-22 10:16:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 10:16:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-22 10:16:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 16 and 30 
[INFO][2017-07-22 10:16:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-22 10:16:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 10:16:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-22 10:16:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:16:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-22 10:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-22 10:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-22 10:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 10:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-22 10:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 10:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-22 10:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 10:16:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-22 10:16:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9
 
[INFO][2017-07-22 10:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores_order_info.getErpPageCount: 
SELECT count(*) FROM cds_ms_goods mg WHERE mg.status = 1 
[INFO][2017-07-22 10:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-22 10:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_stores_order_info.searchGoods: 
SELECT
            tmp.*
        FROM
            (
                SELECT
                    (
                        row_number () OVER (ORDER BY mg.good_id DESC)
                    ) AS rownumber,
                    (
                        SELECT
                            COUNT (*)
                        FROM
                            cds_chufan_meal cm
                        LEFT JOIN cds_chufan_meal_goods cmg ON cmg.cm_id = cm.cm_id
                        WHERE
                            cm.stores_id = ?
                        AND mg.good_id = cmg.good_id
                    ) AS type,
                    mg.good_id,
                    mg.class_id,
                    mg.good_num,
                    mg.status,
                    mg.good_name,
                    mg.out_time,
                    mg.pinxin,
                    mg.good_price,
                    mg.uptime,
                    mg.good_key
                FROM
                    cds_ms_goods mg
                WHERE
                    mg.status = 1

            ) tmp
        WHERE
            tmp.rownumber BETWEEN ?
        AND ? 
[INFO][2017-07-22 10:17:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:9
参数2:1
参数3:100
 
[INFO][2017-07-22 10:21:22] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 10:00:03 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 10:21:22] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 10:21:22] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-22 10:21:23] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 22 10:00:00 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 10:21:23] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 10:21:33] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-22 10:21:33] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 22 10:21:33 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 10:21:33] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-22 10:21:34] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-22 10:21:34] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-22 10:21:34] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-22 10:21:36] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 10:21:36] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2879 ms 
[INFO][2017-07-22 10:21:36] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-22 10:21:36] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 10:21:36 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 10:21:36] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-22 10:21:39] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:40] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:21:41] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:21:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 10:21:36 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 10:21:42] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-22 10:21:42] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 10:21:42] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-52960-1500690102634-1:1,clientId=null,started=false} 
[INFO][2017-07-22 10:21:42] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-22 10:21:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-22 10:21:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-22 10:21:43] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 6806 ms 
[INFO][2017-07-22 10:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-22 10:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:chenbin
 
[INFO][2017-07-22 10:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:351
参数2:1032
 
[INFO][2017-07-22 10:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:22:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:352
参数2:1032
 
[INFO][2017-07-22 10:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:375
参数2:1032
 
[INFO][2017-07-22 10:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:380
参数2:1032
 
[INFO][2017-07-22 10:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:353
参数2:1032
 
[INFO][2017-07-22 10:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:376
参数2:1032
 
[INFO][2017-07-22 10:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:372
参数2:1032
 
[INFO][2017-07-22 10:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:22:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:354
参数2:1032
 
[INFO][2017-07-22 10:22:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:22:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:355
参数2:1032
 
[INFO][2017-07-22 10:22:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:22:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:356
参数2:1032
 
[INFO][2017-07-22 10:22:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-22 10:22:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:0
 
[INFO][2017-07-22 10:22:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-22 10:22:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:0
参数2:2017-07-22
参数3:2017-07-22
参数4:0
参数5:2017-07-22
参数6:2017-07-22
参数7:0
参数8:2017-07-22
参数9:2017-07-22
参数10:0
参数11:2017-07-22
参数12:2017-07-22
参数13:0
参数14:2017-07-22
参数15:2017-07-22
参数16:0
参数17:2017-07-22
参数18:2017-07-22
 
[INFO][2017-07-22 10:22:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-22 10:22:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:2017-07-22
参数2:2017-07-22
参数3:0
参数4:2017-07-21
参数5:2017-07-21
参数6:0
参数7:2017-07-15
参数8:2017-07-15
参数9:0
 
[INFO][2017-07-22 10:22:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:22:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-22 10:22:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:22:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:14
 
[INFO][2017-07-22 10:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:22:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:9
 
[WARN][2017-07-22 10:22:29] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-7 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-22 10:23:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:23:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-22 10:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:24:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 10:24:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:24:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:9
 
[WARN][2017-07-22 10:24:12] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-4 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-22 10:24:15] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-5 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-22 10:24:15] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-22 10:24:19] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-22 10:24:19] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-22 10:25:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:25:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 10:25:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:25:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:10
 
[INFO][2017-07-22 10:25:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:25:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:9
 
[WARN][2017-07-22 10:25:37] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-8 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: JDBC requires that the JdbcType must be specified for all nullable parameters. 
[INFO][2017-07-22 10:27:06] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 10:21:36 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 10:27:06] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 10:27:06] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-22 10:27:06] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 22 10:21:33 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 10:27:06] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[WARN][2017-07-22 10:27:07] org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:251) ActiveMQ Transport: tcp:///127.0.0.1:61616@52961 Transport (tcp://127.0.0.1:61616) failed, reason:  java.io.EOFException, not attempting to automatically reconnect 
[INFO][2017-07-22 10:27:18] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-22 10:27:18] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 22 10:27:18 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 10:27:18] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-22 10:27:18] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-22 10:27:18] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-22 10:27:19] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-22 10:27:21] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 10:27:21] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2772 ms 
[INFO][2017-07-22 10:27:21] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-22 10:27:21] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 10:27:21 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 10:27:21] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-22 10:27:23] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:27:24] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:27:25] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 10:27:21 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 10:27:25] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-22 10:27:25] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 10:27:25] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-53101-1500690445890-1:1,clientId=null,started=false} 
[INFO][2017-07-22 10:27:26] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-22 10:27:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-22 10:27:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-22 10:27:26] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5538 ms 
[INFO][2017-07-22 10:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-22 10:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-22 10:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-22 10:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-22 10:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:27:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:375
参数2:1032
 
[INFO][2017-07-22 10:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:380
参数2:1032
 
[INFO][2017-07-22 10:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-22 10:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-22 10:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-22 10:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-22 10:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:27:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-22 10:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-22 10:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-22 10:27:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:0
 
[INFO][2017-07-22 10:27:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-22 10:27:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:0
参数2:2017-07-22
参数3:2017-07-22
参数4:0
参数5:2017-07-22
参数6:2017-07-22
参数7:0
参数8:2017-07-22
参数9:2017-07-22
参数10:0
参数11:2017-07-22
参数12:2017-07-22
参数13:0
参数14:2017-07-22
参数15:2017-07-22
参数16:0
参数17:2017-07-22
参数18:2017-07-22
 
[INFO][2017-07-22 10:27:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-22 10:27:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:2017-07-22
参数2:2017-07-22
参数3:0
参数4:2017-07-21
参数5:2017-07-21
参数6:0
参数7:2017-07-15
参数8:2017-07-15
参数9:0
 
[INFO][2017-07-22 10:27:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:27:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-22 10:27:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:27:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:9
 
[INFO][2017-07-22 10:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
参数2:9
 
[INFO][2017-07-22 10:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
参数2:9
 
[INFO][2017-07-22 10:27:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:27:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
参数2:9
 
[INFO][2017-07-22 10:27:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:27:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:2
参数2:9
 
[INFO][2017-07-22 10:27:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:27:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
参数2:9
 
[INFO][2017-07-22 10:27:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:27:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:2
参数2:9
 
[INFO][2017-07-22 10:27:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:27:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
参数2:9
 
[INFO][2017-07-22 10:27:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:27:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
参数2:9
 
[INFO][2017-07-22 10:27:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:27:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
参数2:9
 
[INFO][2017-07-22 10:27:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:27:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
参数2:9
 
[INFO][2017-07-22 10:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2
参数2:9
 
[INFO][2017-07-22 10:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:2
参数2:9
 
[INFO][2017-07-22 10:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2
参数2:9
 
[INFO][2017-07-22 10:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:2
参数2:9
 
[INFO][2017-07-22 10:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
参数2:9
 
[INFO][2017-07-22 10:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
参数2:9
 
[INFO][2017-07-22 10:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
参数2:9
 
[INFO][2017-07-22 10:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
参数2:9
 
[INFO][2017-07-22 10:28:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:28:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
参数2:9
 
[INFO][2017-07-22 10:28:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:28:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
参数2:9
 
[INFO][2017-07-22 10:28:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:28:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
参数2:9
 
[INFO][2017-07-22 10:28:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:28:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
参数2:9
 
[INFO][2017-07-22 10:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
参数2:9
 
[INFO][2017-07-22 10:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:2
参数2:9
 
[INFO][2017-07-22 10:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
参数2:9
 
[INFO][2017-07-22 10:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:28:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:2
参数2:9
 
[INFO][2017-07-22 10:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
参数2:9
 
[INFO][2017-07-22 10:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
参数2:9
 
[INFO][2017-07-22 10:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
参数2:9
 
[INFO][2017-07-22 10:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:28:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
参数2:9
 
[INFO][2017-07-22 10:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2
参数2:9
 
[INFO][2017-07-22 10:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:2
参数2:9
 
[INFO][2017-07-22 10:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2
参数2:9
 
[INFO][2017-07-22 10:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:28:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:2
参数2:9
 
[INFO][2017-07-22 10:35:03] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 10:27:21 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 10:35:03] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 10:35:04] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-22 10:35:04] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 22 10:27:18 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 10:35:04] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-22 10:35:15] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-22 10:35:15] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 22 10:35:15 CST 2017]; root of context hierarchy 
[INFO][2017-07-22 10:35:15] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-22 10:35:15] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-22 10:35:15] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-22 10:35:15] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-22 10:35:18] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 10:35:18] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2846 ms 
[INFO][2017-07-22 10:35:18] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-22 10:35:18] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 10:35:18 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 10:35:18] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-22 10:35:20] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-22 10:35:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-22 10:35:22] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 22 10:35:18 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-22 10:35:22] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-22 10:35:22] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-22 10:35:22] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-53341-1500690922867-1:1,clientId=null,started=false} 
[INFO][2017-07-22 10:35:23] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-22 10:35:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-22 10:35:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-22 10:35:23] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5547 ms 
[INFO][2017-07-22 10:35:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-22 10:35:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-22 10:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-22 10:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-22 10:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:375
参数2:1032
 
[INFO][2017-07-22 10:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:380
参数2:1032
 
[INFO][2017-07-22 10:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-22 10:35:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:35:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-22 10:35:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:35:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-22 10:35:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:35:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-22 10:35:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:35:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-22 10:35:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:35:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-22 10:35:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-22 10:35:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:0
 
[INFO][2017-07-22 10:35:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-22 10:35:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:0
参数2:2017-07-22
参数3:2017-07-22
参数4:0
参数5:2017-07-22
参数6:2017-07-22
参数7:0
参数8:2017-07-22
参数9:2017-07-22
参数10:0
参数11:2017-07-22
参数12:2017-07-22
参数13:0
参数14:2017-07-22
参数15:2017-07-22
参数16:0
参数17:2017-07-22
参数18:2017-07-22
 
[INFO][2017-07-22 10:35:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-22 10:35:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:2017-07-22
参数2:2017-07-22
参数3:0
参数4:2017-07-21
参数5:2017-07-21
参数6:0
参数7:2017-07-15
参数8:2017-07-15
参数9:0
 
[INFO][2017-07-22 10:35:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:35:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-22 10:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:35:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:9
 
[INFO][2017-07-22 10:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
参数2:9
 
[INFO][2017-07-22 10:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:35:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
参数2:9
 
[INFO][2017-07-22 10:36:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:36:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2
参数2:9
 
[INFO][2017-07-22 10:36:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:36:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
参数2:9
 
[INFO][2017-07-22 10:36:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:36:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2
参数2:9
 
[INFO][2017-07-22 10:36:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:36:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
参数2:9
 
[INFO][2017-07-22 10:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
参数2:9
 
[INFO][2017-07-22 10:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
参数2:9
 
[INFO][2017-07-22 10:36:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:36:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
参数2:9
 
[INFO][2017-07-22 10:36:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:36:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
参数2:9
 
[INFO][2017-07-22 10:36:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:36:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:9
 
[INFO][2017-07-22 10:36:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:36:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:10
 
[INFO][2017-07-22 10:36:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:36:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:12
 
[INFO][2017-07-22 10:36:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:36:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:13
 
[INFO][2017-07-22 10:36:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:36:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:14
 
[INFO][2017-07-22 10:36:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:36:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:15
 
[INFO][2017-07-22 10:36:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:36:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:17
 
[INFO][2017-07-22 10:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:18
 
[INFO][2017-07-22 10:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:36:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:19
 
[INFO][2017-07-22 10:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:37:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:18
 
[INFO][2017-07-22 10:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:7
参数2:18
 
[INFO][2017-07-22 10:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:7
参数2:18
 
[INFO][2017-07-22 10:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:7
参数2:18
 
[INFO][2017-07-22 10:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:37:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:7
参数2:18
 
[INFO][2017-07-22 10:37:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:37:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:16
 
[INFO][2017-07-22 10:37:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:37:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:17
 
[INFO][2017-07-22 10:37:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:37:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-22 10:37:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:37:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9
 
[INFO][2017-07-22 10:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
参数2:9
 
[INFO][2017-07-22 10:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 10:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
参数2:9
 
[INFO][2017-07-22 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:2
参数2:9
 
[INFO][2017-07-22 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2
参数2:9
 
[INFO][2017-07-22 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:2
参数2:9
 
[INFO][2017-07-22 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 0 
[INFO][2017-07-22 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2
参数2:9
 
[INFO][2017-07-22 10:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:38:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-22 10:38:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:38:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:16
 
[INFO][2017-07-22 10:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:38:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:13
 
[INFO][2017-07-22 10:38:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:38:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:11
 
[INFO][2017-07-22 10:38:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:38:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9
 
[INFO][2017-07-22 10:38:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:38:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
参数2:9
 
[INFO][2017-07-22 10:38:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:38:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
参数2:9
 
[WARN][2017-07-22 10:39:57] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-07-22 10:39:57] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-07-22 10:40:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-22 10:40:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:chenbin
 
[INFO][2017-07-22 10:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:351
参数2:1032
 
[INFO][2017-07-22 10:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:352
参数2:1032
 
[INFO][2017-07-22 10:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:375
参数2:1032
 
[INFO][2017-07-22 10:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:380
参数2:1032
 
[INFO][2017-07-22 10:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:40:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:353
参数2:1032
 
[INFO][2017-07-22 10:40:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:40:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:376
参数2:1032
 
[INFO][2017-07-22 10:40:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:40:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:372
参数2:1032
 
[INFO][2017-07-22 10:40:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:40:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:354
参数2:1032
 
[INFO][2017-07-22 10:40:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:40:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:355
参数2:1032
 
[INFO][2017-07-22 10:40:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-22 10:40:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:356
参数2:1032
 
[INFO][2017-07-22 10:40:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-22 10:40:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:0
 
[INFO][2017-07-22 10:40:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-22 10:40:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:0
参数2:2017-07-22
参数3:2017-07-22
参数4:0
参数5:2017-07-22
参数6:2017-07-22
参数7:0
参数8:2017-07-22
参数9:2017-07-22
参数10:0
参数11:2017-07-22
参数12:2017-07-22
参数13:0
参数14:2017-07-22
参数15:2017-07-22
参数16:0
参数17:2017-07-22
参数18:2017-07-22
 
[INFO][2017-07-22 10:40:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-22 10:40:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-07-22
参数2:2017-07-22
参数3:0
参数4:2017-07-21
参数5:2017-07-21
参数6:0
参数7:2017-07-15
参数8:2017-07-15
参数9:0
 
[INFO][2017-07-22 10:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:40:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-22 10:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-22 10:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-22 10:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-22 10:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-22 10:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-22 10:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-22 10:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-22 10:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-22 10:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-22 10:40:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:40:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-22 10:40:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-22 10:40:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-07-22 10:40:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:40:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-22 10:40:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:40:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-22 10:40:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-22 10:40:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:40:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:40:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:41:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:41:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-22 10:41:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:41:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:9
 
[INFO][2017-07-22 10:41:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:41:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:10
 
[INFO][2017-07-22 10:41:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:41:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:11
 
[INFO][2017-07-22 10:41:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:41:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:14
 
[INFO][2017-07-22 10:43:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:43:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-22 10:43:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-22 10:43:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 10:43:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-22 10:43:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 10:43:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-22 10:43:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 10:43:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:43:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5  
[INFO][2017-07-22 10:43:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:43:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:10
 
[INFO][2017-07-22 10:43:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:43:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:10
 
[INFO][2017-07-22 10:43:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:43:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:11
 
[INFO][2017-07-22 10:44:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-22 10:44:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-22 10:44:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:44:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-22 10:44:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:44:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-22 10:44:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-22 10:44:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10  
[INFO][2017-07-22 10:44:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-22 10:44:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-22 10:44:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:44:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-22 10:44:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:44:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7  
[INFO][2017-07-22 10:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:12
 
[INFO][2017-07-22 10:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:11
 
[INFO][2017-07-22 10:46:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:46:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9  
[INFO][2017-07-22 10:46:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:46:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3  
[INFO][2017-07-22 10:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:46:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-22 10:46:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:46:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6  
[INFO][2017-07-22 10:46:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:46:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1  
[INFO][2017-07-22 10:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:16
 
[INFO][2017-07-22 10:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:14
 
[INFO][2017-07-22 10:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:12
 
[INFO][2017-07-22 10:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:10
 
[INFO][2017-07-22 10:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:47:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:14
 
[INFO][2017-07-22 10:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4  
[INFO][2017-07-22 10:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:10
 
[INFO][2017-07-22 10:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:9
参数2:10
 
[INFO][2017-07-22 10:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 11 
[INFO][2017-07-22 10:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:9
参数2:10
 
[INFO][2017-07-22 10:47:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:47:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:9
 
[INFO][2017-07-22 10:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
参数2:9
 
[INFO][2017-07-22 10:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:47:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
参数2:9
 
[INFO][2017-07-22 10:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:1
参数2:9
 
[INFO][2017-07-22 10:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:1
参数2:9
 
[INFO][2017-07-22 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2
参数2:9
 
[INFO][2017-07-22 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
参数2:9
 
[INFO][2017-07-22 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:2
参数2:9
 
[INFO][2017-07-22 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
参数2:9
 
[INFO][2017-07-22 10:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
参数2:9
 
[INFO][2017-07-22 10:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
参数2:9
 
[INFO][2017-07-22 10:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
参数2:9
 
[INFO][2017-07-22 10:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:47:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
参数2:9
 
[INFO][2017-07-22 10:47:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:47:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:2
参数2:9
 
[INFO][2017-07-22 10:47:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:47:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2
参数2:9
 
[INFO][2017-07-22 10:47:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:47:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:2
参数2:9
 
[INFO][2017-07-22 10:47:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:47:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:2
参数2:9
 
[INFO][2017-07-22 10:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
参数2:9
 
[INFO][2017-07-22 10:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
参数2:9
 
[INFO][2017-07-22 10:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
参数2:9
 
[INFO][2017-07-22 10:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
参数2:9
 
[INFO][2017-07-22 10:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:2
参数2:9
 
[INFO][2017-07-22 10:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:47:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:2
参数2:9
 
[INFO][2017-07-22 10:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:2
参数2:9
 
[INFO][2017-07-22 10:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:2
参数2:9
 
[INFO][2017-07-22 10:47:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:47:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
参数2:9
 
[INFO][2017-07-22 10:47:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:47:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
参数2:9
 
[INFO][2017-07-22 10:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
参数2:9
 
[INFO][2017-07-22 10:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:1
参数2:9
 
[INFO][2017-07-22 10:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:2
参数2:9
 
[INFO][2017-07-22 10:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
参数2:9
 
[INFO][2017-07-22 10:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:2
参数2:9
 
[INFO][2017-07-22 10:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:2
参数2:9
 
[INFO][2017-07-22 10:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
参数2:9
 
[INFO][2017-07-22 10:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
参数2:9
 
[INFO][2017-07-22 10:48:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:48:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:1
参数2:9
 
[INFO][2017-07-22 10:48:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:48:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:1
参数2:9
 
[INFO][2017-07-22 10:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:48:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8  
[INFO][2017-07-22 10:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:49:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:9
 
[INFO][2017-07-22 10:49:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:49:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
参数2:9
 
[INFO][2017-07-22 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:49:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:1
参数2:9
 
[INFO][2017-07-22 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:49:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:11
 
[INFO][2017-07-22 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:49:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:10
 
[INFO][2017-07-22 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9
参数2:10
 
[INFO][2017-07-22 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:49:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:9
参数2:10
 
[INFO][2017-07-22 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 11 
[INFO][2017-07-22 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:9
参数2:10
 
[INFO][2017-07-22 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 11 
[INFO][2017-07-22 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:9
参数2:10
 
[INFO][2017-07-22 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:10
参数2:10
 
[INFO][2017-07-22 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:49:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:10
参数2:10
 
[INFO][2017-07-22 10:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-22 10:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:10
参数2:10
 
[INFO][2017-07-22 10:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-22 10:49:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:10
参数2:10
 
[INFO][2017-07-22 10:49:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:49:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:15
 
[INFO][2017-07-22 10:49:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:49:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:19
 
[INFO][2017-07-22 10:49:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:49:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:4
参数2:19
 
[INFO][2017-07-22 10:49:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:49:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:4
参数2:19
 
[INFO][2017-07-22 10:49:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-22 10:49:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:4
参数2:19
 
[INFO][2017-07-22 10:49:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-22 10:49:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:4
参数2:19
 
[INFO][2017-07-22 10:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:5
参数2:19
 
[INFO][2017-07-22 10:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:5
参数2:19
 
[INFO][2017-07-22 10:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 9 
[INFO][2017-07-22 10:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:5
参数2:19
 
[INFO][2017-07-22 10:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 9 
[INFO][2017-07-22 10:49:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:5
参数2:19
 
[INFO][2017-07-22 10:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:49:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:19
 
[INFO][2017-07-22 10:49:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:49:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:4
参数2:19
 
[INFO][2017-07-22 10:49:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:49:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:4
参数2:19
 
[INFO][2017-07-22 10:49:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-22 10:49:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:4
参数2:19
 
[INFO][2017-07-22 10:49:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-22 10:49:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:4
参数2:19
 
[INFO][2017-07-22 10:49:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:49:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:5
参数2:19
 
[INFO][2017-07-22 10:49:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:49:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:5
参数2:19
 
[INFO][2017-07-22 10:49:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 9 
[INFO][2017-07-22 10:49:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:5
参数2:19
 
[INFO][2017-07-22 10:49:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 9 
[INFO][2017-07-22 10:49:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:5
参数2:19
 
[INFO][2017-07-22 10:49:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:49:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:20
 
[INFO][2017-07-22 10:49:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:49:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:6
参数2:20
 
[INFO][2017-07-22 10:49:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:49:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:6
参数2:20
 
[INFO][2017-07-22 10:49:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 33 
[INFO][2017-07-22 10:49:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:6
参数2:20
 
[INFO][2017-07-22 10:49:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 33 
[INFO][2017-07-22 10:49:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:6
参数2:20
 
[INFO][2017-07-22 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:50:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-22 10:50:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-22 10:50:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:50:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-22 10:50:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:50:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-22 10:50:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:50:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_kefu.get_cf_meal: 
select
                (select '{"good_id":"'+ cast(mg.good_id as varchar(8))
                                +'","good_price":"'+ isnull(cast(mg.good_price as varchar(8)),0)
                                +'","good_num":"'+ cast(mg.good_num as varchar(8))
                                +'","good_name":"'+ cast(mg.good_name as varchar(8))
                                +'","good_key":"'+  cast(mg.good_key as varchar(8))
                                +'","status":"'+ cast(mg.status as varchar(8))
                                +'","out_time":"'+ isnull(cast(mg.out_time as varchar(8)),0)
                                +'","gist":"'+ isnull(mg.gist, '')
                                +'","process":"'+isnull(mg.process, '')
                                +'","class_id":"'+cast(mg.class_id as varchar(8))+'"},'
                from cds_ms_goods mg
                inner join cds_chufan_meal_goods cmg
                on mg.good_id = cmg.good_id
                where cmg.cm_id = cm.cm_id for xml path('')
                                ) as cdsMsGoods,cm.*

            from cds_chufan_meal cm
            where cm.stores_id = ? 
[INFO][2017-07-22 10:50:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-07-22 10:51:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-07-22 10:51:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-22 10:51:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:51:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-22 10:51:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:51:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-22 10:51:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-07-22 10:51:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-22 10:51:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-22 10:51:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:51:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:51:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getStoresBrand2: 
select count(0) from (select * from cds_stores_brand where stores_id = ?)  tmp_count 
[INFO][2017-07-22 10:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:15
 
[INFO][2017-07-22 10:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.getStoresBrand2: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand where stores_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-22 10:51:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:15
 
[INFO][2017-07-22 10:51:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-22 10:51:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-22 10:51:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-22 10:51:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-22 10:51:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-22 10:51:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-07-22 10:51:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:51:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-22 10:51:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-22 10:51:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-22 10:51:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-22 10:51:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:51:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-22 10:51:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:51:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:51:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:51:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:51:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-22 10:51:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:20
 
[INFO][2017-07-22 10:51:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-22 10:51:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:20
 
[INFO][2017-07-22 10:51:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-22 10:51:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:20
 
[INFO][2017-07-22 10:51:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-22 10:51:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:28
 
[INFO][2017-07-22 10:51:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:51:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:51:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:51:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:51:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-22 10:51:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:10
 
[INFO][2017-07-22 10:51:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-22 10:51:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:10
 
[INFO][2017-07-22 10:51:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-22 10:51:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:10
 
[INFO][2017-07-22 10:51:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-22 10:51:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:26
 
[INFO][2017-07-22 10:51:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-07-22 10:51:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-22 10:51:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
参数2:2
 
[INFO][2017-07-22 10:51:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-07-22 10:51:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:51:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-07-22 10:51:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:51:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-22 10:51:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-22 10:51:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-22 10:51:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-22 10:51:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-22 10:51:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-22 10:51:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-22 10:51:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-22 10:51:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-07-22 10:51:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-22 10:51:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-22 10:51:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:51:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:51:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-22 10:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-22 10:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-22 10:51:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:51:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-22 10:51:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-22 10:51:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-22 10:51:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-22 10:51:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-22 10:51:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-22 10:51:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-22 10:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-22 10:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-22 10:52:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:52:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:
 
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-22 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-22 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-22 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-22 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-07-22 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-22 10:52:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
参数2:1000002
参数3:红烧牛腩
参数4:hsn
参数5:红烧牛腩（小份）,红烧牛腩  (份),红烧牛腩（小份）,红烧牛腩,红烧牛腩-大份,红烧牛腩  (大份)
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:29:46
参数12:1
参数13:0
参数14:26.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:360
参数20:null
参数21:null
参数22:10
参数23:2
 
[INFO][2017-07-22 10:52:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE are_level = ? 
         
            ORDER BY id 
[INFO][2017-07-22 10:52:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:0
 
[INFO][2017-07-22 10:52:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores_manage.getPageRecord: 
select count(0) from (select a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id)  tmp_count 
[INFO][2017-07-22 10:52:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-22 10:52:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores_manage.getPageRecord: 
select tmp.* from (select (row_number() Over(order by a.stores_id asc)) as rownumber, a.stores_brand_id,a.brand_id,c.brand_name,a.stores_name,a.elem_restaurant_id,a.meituan_restaurant_id,b.linkman,b.start_time,b.end_time,b.address,b.description,b.intro from cds_stores_brand a
            left join cds_stores b on a.stores_id = b.stores_id
            left join cds_brand c on a.brand_id = c.brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:52:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-22 10:52:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-22 10:52:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:0
 
[INFO][2017-07-22 10:52:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-22 10:52:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:0
 
[INFO][2017-07-22 10:52:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-22 10:52:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:0
 
[INFO][2017-07-22 10:52:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-22 10:52:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:0
 
[INFO][2017-07-22 10:52:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-22 10:52:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:0
 
[INFO][2017-07-22 10:52:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-22 10:52:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:0
 
[INFO][2017-07-22 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-22 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:0
 
[INFO][2017-07-22 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-22 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:0
 
[INFO][2017-07-22 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-22 10:52:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:0
 
[INFO][2017-07-22 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-22 10:52:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:0
 
[INFO][2017-07-22 10:52:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-22 10:52:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
参数2:0
 
[INFO][2017-07-22 10:52:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-22 10:52:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
参数2:0
 
[INFO][2017-07-22 10:52:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-22 10:52:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:0
 
[INFO][2017-07-22 10:52:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-22 10:52:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:0
 
[INFO][2017-07-22 10:52:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-22 10:52:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
参数2:0
 
[INFO][2017-07-22 10:52:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-22 10:52:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
参数2:0
 
[INFO][2017-07-22 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-22 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:0
 
[INFO][2017-07-22 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-22 10:52:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:0
 
[INFO][2017-07-22 10:52:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-22 10:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 10:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-22 10:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-22 10:52:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:52:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:52:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:52:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:
 
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-07-22 10:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-22 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-22 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-22 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-22 10:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-22 10:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-22 10:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-22 10:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-22 10:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-22 10:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-07-22 10:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-22 10:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-07-22 10:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-22 10:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-22 10:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-07-22 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_task
             


         WHERE stores_id = ? 
         
            ORDER BY es_id 
[INFO][2017-07-22 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:null
 
[INFO][2017-07-22 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-22 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-22 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-22 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-22 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-22 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-22 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-22 10:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_task
             


         WHERE stores_id = ? 
         
            ORDER BY es_id 
[INFO][2017-07-22 10:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-07-22 10:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_task
             


         WHERE stores_id = ? 
         
            ORDER BY es_id 
[INFO][2017-07-22 10:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-07-22 10:52:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_task
             


         WHERE stores_id = ? 
         
            ORDER BY es_id 
[INFO][2017-07-22 10:52:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-07-22 10:52:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_task
             


         WHERE stores_id = ? 
         
            ORDER BY es_id 
[INFO][2017-07-22 10:52:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
 
[INFO][2017-07-22 10:52:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_task
             


         WHERE stores_id = ? 
         
            ORDER BY es_id 
[INFO][2017-07-22 10:52:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-07-22 10:52:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_task
             


         WHERE stores_id = ? 
         
            ORDER BY es_id 
[INFO][2017-07-22 10:52:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-07-22 10:52:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-22 10:52:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:0
 
[INFO][2017-07-22 10:52:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-07-22 10:52:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:0
 
[INFO][2017-07-22 10:52:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-22 10:52:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:0
 
[INFO][2017-07-22 10:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-07-22 10:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:0
 
[INFO][2017-07-22 10:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-22 10:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:0
 
[INFO][2017-07-22 10:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-22 10:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:0
 
[INFO][2017-07-22 10:52:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:52:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:52:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:52:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-22 10:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-07-22 10:52:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-22 10:52:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-07-22 10:52:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id)  tmp_count 
[INFO][2017-07-22 10:52:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-22 10:52:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber,  a.sgl_id,
              b.good_name,
              b.image_hash,
              b.good_pic,
              a.stores_brand_id,
              b.good_info,
              a.mt_isband,
              d.food_category_id,
              d.meituan_cat_id,
              a.food_id,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.all_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
              left join cds_stores_class d on c.class_id=d.class_id and a.stores_brand_id=d.stores_brand_id and b.class_id=d.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:52:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-07-22 10:55:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-07-22 10:55:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2  
[INFO][2017-07-22 10:55:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:9
 
[INFO][2017-07-22 10:55:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:10
 
[INFO][2017-07-22 10:55:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:11
 
[INFO][2017-07-22 10:55:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:13
 
[INFO][2017-07-22 10:55:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:14
 
[INFO][2017-07-22 10:55:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:9
 
[INFO][2017-07-22 10:55:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:10
 
[INFO][2017-07-22 10:55:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:12
 
[INFO][2017-07-22 10:55:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:11
 
[INFO][2017-07-22 10:55:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:14
 
[INFO][2017-07-22 10:55:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:16
 
[INFO][2017-07-22 10:55:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:17
 
[INFO][2017-07-22 10:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:18
 
[INFO][2017-07-22 10:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:9
 
[INFO][2017-07-22 10:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
参数2:9
 
[INFO][2017-07-22 10:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:1
参数2:9
 
[INFO][2017-07-22 10:55:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:55:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
参数2:9
 
[INFO][2017-07-22 10:55:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:55:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:2
参数2:9
 
[INFO][2017-07-22 10:55:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:55:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:2
参数2:9
 
[INFO][2017-07-22 10:55:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-22 10:55:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:2
参数2:9
 
[INFO][2017-07-22 10:55:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:55:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
参数2:9
 
[INFO][2017-07-22 10:55:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanGoods: 
select count(0) from (select a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?)  tmp_count 
[INFO][2017-07-22 10:55:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
参数2:9
 
[INFO][2017-07-22 10:55:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:55:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:1
参数2:9
 
[INFO][2017-07-22 10:55:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 cds_printer.getChuFanGoods: 
select tmp.* from (select (row_number() Over(order by cmg_id asc)) as rownumber, a.cmg_id,b.good_id,b.good_name,b.good_num,good_key from cds_chufan_meal_goods a  left join cds_ms_goods  b on a.good_id = b.good_id
            left join cds_chufan_meal c on a.cm_id = c.cm_id
            where a.cm_id=? and c.stores_id=?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-22 10:55:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:1
参数2:9
 
[INFO][2017-07-22 10:55:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:10
 
[INFO][2017-07-22 10:55:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:11
 
[INFO][2017-07-22 10:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:21
 
[INFO][2017-07-22 10:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-7 参数1:20
 
[INFO][2017-07-22 10:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-10 参数1:19
 
[INFO][2017-07-22 10:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-8 参数1:18
 
[INFO][2017-07-22 10:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-5 参数1:17
 
[INFO][2017-07-22 10:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-9 参数1:16
 
[INFO][2017-07-22 10:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-4 参数1:15
 
[INFO][2017-07-22 10:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-3 参数1:14
 
[INFO][2017-07-22 10:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-2 参数1:13
 
[INFO][2017-07-22 10:55:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-1 参数1:12
 
[INFO][2017-07-22 10:55:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
[INFO][2017-07-22 10:55:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-8001-exec-6 参数1:11
 
[INFO][2017-07-22 10:55:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_meal
             


         WHERE stores_id = ? 
         
            ORDER BY cm_id 
