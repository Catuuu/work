[INFO][2017-07-01 10:53:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 10:53:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 10:53:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 10:53:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 10:53:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 10:53:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 10:53:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 10:53:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 10:53:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 10:53:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 10:53:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 10:53:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 10:53:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 10:53:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 10:53:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 10:53:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 10:53:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 10:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 10:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 10:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 10:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 10:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 10:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 10:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 10:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 10:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 10:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:
 
[INFO][2017-07-01 10:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 10:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 10:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 10:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 10:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 10:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 10:53:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 10:53:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 10:53:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 10:53:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 10:54:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 10:54:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 10:54:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 10:54:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 10:54:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 10:54:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 10:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-01 10:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:9
参数2:2017-07-01
参数3:2017-07-01
参数4:9
参数5:2017-07-01
参数6:2017-07-01
参数7:9
参数8:2017-07-01
参数9:2017-07-01
参数10:9
参数11:2017-07-01
参数12:2017-07-01
参数13:9
参数14:2017-07-01
参数15:2017-07-01
参数16:9
参数17:2017-07-01
参数18:2017-07-01
 
[INFO][2017-07-01 10:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-01 10:55:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2017-07-01
参数2:2017-07-01
参数3:9
参数4:2017-06-30
参数5:2017-06-30
参数6:9
参数7:2017-06-24
参数8:2017-06-24
参数9:9
 
[INFO][2017-07-01 10:55:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 10:55:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 10:55:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 10:55:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 10:55:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 10:55:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 10:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-01 10:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:9
参数2:2017-07-01
参数3:2017-07-01
参数4:9
参数5:2017-07-01
参数6:2017-07-01
参数7:9
参数8:2017-07-01
参数9:2017-07-01
参数10:9
参数11:2017-07-01
参数12:2017-07-01
参数13:9
参数14:2017-07-01
参数15:2017-07-01
参数16:9
参数17:2017-07-01
参数18:2017-07-01
 
[INFO][2017-07-01 10:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-01 10:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2017-07-01
参数2:2017-07-01
参数3:9
参数4:2017-06-30
参数5:2017-06-30
参数6:9
参数7:2017-06-24
参数8:2017-06-24
参数9:9
 
[INFO][2017-07-01 10:57:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 10:57:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 10:57:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 10:57:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 10:57:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 10:57:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 10:57:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-01 10:57:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:7
 
[INFO][2017-07-01 10:57:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-01 10:57:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:1000007
参数3:番茄炒鸡蛋
参数4:FQCJD
参数5:番茄炒鸡蛋  (份),番茄炒鸡蛋饭-份,番茄炒鸡蛋 （份）,番茄炒鸡蛋,番茄炒鸡蛋-份,番茄炒鸡蛋 （大份）,番茄炒鸡蛋-大份,番茄炒鸡蛋  (大份),番茄炒鸡蛋饭-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-22 17:18:41
参数12:1
参数13:0
参数14:50.0
参数15:0
参数16:1
参数17:1
参数18:1
参数19:100
参数20:null
参数21:null
参数22:80
参数23:7
 
[INFO][2017-07-01 10:57:33] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 10:20:57 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 10:57:33] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-01 10:57:34] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-01 10:57:34] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 01 10:20:54 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 10:57:34] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[WARN][2017-07-01 10:57:34] org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:251) ActiveMQ Transport: tcp:///127.0.0.1:61616@55380 Transport (tcp://127.0.0.1:61616) failed, reason:  java.io.EOFException, not attempting to automatically reconnect 
[INFO][2017-07-01 10:57:45] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-01 10:57:45] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 01 10:57:45 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 10:57:45] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-01 10:57:45] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-01 10:57:45] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-01 10:57:45] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-01 10:57:48] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 10:57:48] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2742 ms 
[INFO][2017-07-01 10:57:48] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-01 10:57:48] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 10:57:48 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 10:57:48] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-01 10:57:49] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 10:57:49] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 10:57:48 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 10:57:50] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-01 10:57:50] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 10:57:50] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-56280-1498877870812-1:1,clientId=null,started=false} 
[INFO][2017-07-01 10:57:50] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-01 10:57:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-01 10:57:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-01 10:57:51] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3310 ms 
[INFO][2017-07-01 10:59:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-01 10:59:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-01 10:59:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 10:59:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-01 10:59:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 10:59:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-01 10:59:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 10:59:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-01 10:59:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 10:59:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:378
参数2:1032
 
[INFO][2017-07-01 10:59:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 10:59:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-01 10:59:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 10:59:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-01 10:59:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 10:59:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-01 10:59:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 10:59:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-01 10:59:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 10:59:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-01 10:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-01 10:59:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-01 10:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-01 10:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:9
参数2:2017-07-01
参数3:2017-07-01
参数4:9
参数5:2017-07-01
参数6:2017-07-01
参数7:9
参数8:2017-07-01
参数9:2017-07-01
参数10:9
参数11:2017-07-01
参数12:2017-07-01
参数13:9
参数14:2017-07-01
参数15:2017-07-01
参数16:9
参数17:2017-07-01
参数18:2017-07-01
 
[INFO][2017-07-01 10:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-01 10:59:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2017-07-01
参数2:2017-07-01
参数3:9
参数4:2017-06-30
参数5:2017-06-30
参数6:9
参数7:2017-06-24
参数8:2017-06-24
参数9:9
 
[INFO][2017-07-01 10:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 10:59:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 10:59:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 10:59:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 10:59:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 10:59:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 10:59:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 10:59:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 10:59:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 10:59:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 10:59:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 10:59:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 10:59:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 10:59:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 10:59:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 10:59:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-01 10:59:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 10:59:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 10:59:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 10:59:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 10:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 10:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 10:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 10:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 10:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-01 10:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:10
 
[INFO][2017-07-01 10:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-01 10:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:1000010
参数3:花菜炒豆腐
参数4:hccdf
参数5:花菜炒豆腐,花菜炒豆腐  (份),花菜炒豆腐-份,花菜炒豆腐（大份）,花菜炒豆腐(大份),花菜炒豆腐  (大份),花菜炒豆腐-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-09 10:05:30
参数12:1
参数13:0
参数14:19.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:10
 
[INFO][2017-07-01 11:00:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-01 11:00:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:47
 
[INFO][2017-07-01 11:00:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-01 11:00:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
参数2:2000008
参数3:雪花蛋酒
参数4:xhdj
参数5:雪花蛋酒
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-03-11 17:27:42
参数12:0
参数13:0
参数14:3.5
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:47
 
[INFO][2017-07-01 11:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:02:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 11:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:
 
[INFO][2017-07-01 11:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 11:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 11:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 11:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 11:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 11:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 11:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 11:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-01 11:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:9001
 
[INFO][2017-07-01 11:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-01 11:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:9001
 
[INFO][2017-07-01 11:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:02:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-01 11:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:02:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 11:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 11:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 11:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 11:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 11:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 11:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-01 11:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 11:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 11:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 11:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:02:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:
 
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:02:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:02:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:02:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 11:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 11:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 11:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 11:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 11:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:02:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 11:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-01 11:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:02:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 11:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:02:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-01 11:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:02:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-01 11:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:
 
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:03:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 11:03:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1184
 
[INFO][2017-07-01 11:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 11:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1176
 
[INFO][2017-07-01 11:03:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:03:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 11:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 11:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 11:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 11:03:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 11:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 11:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-01 11:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:03:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 11:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:20
 
[INFO][2017-07-01 11:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:20
 
[INFO][2017-07-01 11:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:19
 
[INFO][2017-07-01 11:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:03:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:19
 
[INFO][2017-07-01 11:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:20
 
[INFO][2017-07-01 11:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:20
 
[INFO][2017-07-01 11:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-01 11:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 11:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:03:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 11:03:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:03:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 11:03:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:03:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 11:03:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:03:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
参数2:10
 
[INFO][2017-07-01 11:03:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:03:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
参数2:10
 
[INFO][2017-07-01 11:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-01 11:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-01 11:04:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:04:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 11:04:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 11:04:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 11:04:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:04:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:04:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 11:04:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 11:04:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:04:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 11:04:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:04:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 11:04:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:04:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:04:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:04:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-01 11:04:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:04:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 11:06:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:06:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:06:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:06:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:06:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:06:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:06:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:06:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:
 
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:06:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:08:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getPageRecord: 
select count(0) from (select * from  cds_brand)  tmp_count 
[INFO][2017-07-01 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getPageRecord: 
select tmp.* from (select (row_number() Over(order by brand_id asc)) as rownumber, * from  cds_brand) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-01 11:08:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:09:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 11:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 11:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 11:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 11:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 11:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 11:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-01 11:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:09:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 11:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:09:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-01 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 11:09:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:09:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 11:09:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 11:09:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 11:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 11:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 11:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 11:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 11:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1227280992
 
[INFO][2017-07-01 11:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 11:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1227524810
 
[INFO][2017-07-01 11:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 11:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:09:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:测试类别2
 
[WARN][2017-07-01 11:10:35] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-07-01 11:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-01 11:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:chenbin
 
[INFO][2017-07-01 11:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 11:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:351
参数2:1032
 
[INFO][2017-07-01 11:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 11:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:352
参数2:1032
 
[INFO][2017-07-01 11:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 11:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:376
参数2:1032
 
[INFO][2017-07-01 11:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 11:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:378
参数2:1032
 
[INFO][2017-07-01 11:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 11:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:353
参数2:1032
 
[INFO][2017-07-01 11:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 11:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:372
参数2:1032
 
[INFO][2017-07-01 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:354
参数2:1032
 
[INFO][2017-07-01 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:355
参数2:1032
 
[INFO][2017-07-01 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:356
参数2:1032
 
[INFO][2017-07-01 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-01 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:9
 
[INFO][2017-07-01 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-01 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:9
参数2:2017-07-01
参数3:2017-07-01
参数4:9
参数5:2017-07-01
参数6:2017-07-01
参数7:9
参数8:2017-07-01
参数9:2017-07-01
参数10:9
参数11:2017-07-01
参数12:2017-07-01
参数13:9
参数14:2017-07-01
参数15:2017-07-01
参数16:9
参数17:2017-07-01
参数18:2017-07-01
 
[INFO][2017-07-01 11:10:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-01 11:10:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2017-07-01
参数2:2017-07-01
参数3:9
参数4:2017-06-30
参数5:2017-06-30
参数6:9
参数7:2017-06-24
参数8:2017-06-24
参数9:9
 
[INFO][2017-07-01 11:10:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-01 11:10:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:9001
 
[INFO][2017-07-01 11:10:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-01 11:10:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:9001
 
[INFO][2017-07-01 11:10:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:10:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:10:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-01 11:10:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 11:10:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:10:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 11:10:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:10:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:10:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getPageRecord: 
select count(0) from (select * from  cds_brand)  tmp_count 
[INFO][2017-07-01 11:10:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 11:10:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getPageRecord: 
select tmp.* from (select (row_number() Over(order by brand_id asc)) as rownumber, * from  cds_brand) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-01 11:10:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 11:10:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:10:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:10:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:10:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:10:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:10:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:
 
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 11:10:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 11:13:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:13:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:13:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:13:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:13:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:13:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:
 
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:18:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:18:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:18:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:18:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 11:18:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 11:18:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 11:18:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:18:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 11:18:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 11:18:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:18:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:18:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:18:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:18:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:18:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:18:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 11:18:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:18:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-01 11:18:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:18:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 11:18:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:18:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 11:18:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:18:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 11:18:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:18:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
参数2:10
 
[INFO][2017-07-01 11:18:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:18:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
参数2:10
 
[INFO][2017-07-01 11:18:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:18:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:20
 
[INFO][2017-07-01 11:18:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:18:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:20
 
[INFO][2017-07-01 11:18:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:18:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:18
 
[INFO][2017-07-01 11:18:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:18:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:18
 
[INFO][2017-07-01 11:18:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:18:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:15
 
[INFO][2017-07-01 11:18:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:18:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:15
 
[INFO][2017-07-01 11:18:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:18:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:16
 
[INFO][2017-07-01 11:18:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:18:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:16
 
[INFO][2017-07-01 11:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:16
 
[INFO][2017-07-01 11:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:19:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:16
 
[INFO][2017-07-01 11:19:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:19:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:19:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:19:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:19:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 11:19:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:19:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:19:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:19:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:19:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 11:19:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:19:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-01 11:19:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:19:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:19
 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:19
参数2:新品上新（含米饭）
 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:19
 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:19
参数2:菜大师公告
 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227183848
 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:19
参数2:美味套餐（含米饭）
 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227173796
 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:19
参数2:精致小炒（含米饭）
 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227173797
 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:19
参数2:营养靓汤（不含米饭）
 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:19:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227198792
 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:19
参数2:另加米饭
 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227203818
 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:19
参数2:美味小吃
 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227183849
 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:19
参数2:饮料（单点不外送）
 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227183850
 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:19
参数2:饮料（单点不外送哦）
 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227198793
 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:19
参数2:私厨直播
 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227203819
 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:19
参数2:何谓大师
 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227198794
 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:19
参数2:回收站
 
[INFO][2017-07-01 11:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-01 11:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 11:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 11:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 11:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-01 11:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 11:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 11:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1227280992
 
[INFO][2017-07-01 11:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 11:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1227524810
 
[INFO][2017-07-01 11:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 11:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 11:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 11:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:15
 
[INFO][2017-07-01 11:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-01 11:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:43
参数3:1227522610
参数4:null
参数5:1
参数6:null
参数7:15
 
[INFO][2017-07-01 11:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 11:19:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:19:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 11:20:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (47,46,45,44,43,42,41))  tmp_count 
[INFO][2017-07-01 11:20:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 11:20:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (47,46,45,44,43,42,41)) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 11:20:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 11:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-01 11:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 11:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-01 11:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 11:20:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE class_id = ? 
[INFO][2017-07-01 11:20:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:43
 
[INFO][2017-07-01 11:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-01 11:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 11:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-01 11:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 11:21:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE class_id = ? 
[INFO][2017-07-01 11:21:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:46
 
[INFO][2017-07-01 11:21:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE class_id = ? 
[INFO][2017-07-01 11:21:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:42
 
[INFO][2017-07-01 11:21:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE class_id = ? 
[INFO][2017-07-01 11:21:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:44
 
[INFO][2017-07-01 11:21:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE class_id = ? 
[INFO][2017-07-01 11:21:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:46
 
[INFO][2017-07-01 11:21:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE class_id = ? 
[INFO][2017-07-01 11:21:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:42
 
[INFO][2017-07-01 11:21:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


         WHERE brand_id = ? 
[INFO][2017-07-01 11:21:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 11:21:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-01 11:21:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 11:21:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE class_id = ? 
[INFO][2017-07-01 11:21:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:41
 
[INFO][2017-07-01 11:22:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 11:22:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:15
 
[INFO][2017-07-01 11:22:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-01 11:22:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:43
参数3:
参数4:null
参数5:1
参数6:null
参数7:15
 
[INFO][2017-07-01 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1227280992
 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1227524810
 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227280992
 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227524810
 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:23:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 11:27:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:27:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:27:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 11:27:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 11:27:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:27:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 11:27:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:27:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 11:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 11:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 11:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 11:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:
 
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:28:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:
 
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:28:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:30:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:30:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:30:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 11:30:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 11:30:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:30:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:30:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 11:30:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:30:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:30:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:30:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:30:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 11:30:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:30:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 11:30:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:30:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-01 11:30:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:30:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 11:30:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-01 11:30:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3324
 
[INFO][2017-07-01 11:30:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-01 11:30:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:13
参数2:1176
参数3:1
参数4:0
参数5:1
参数6:15
参数7:10
参数8:0
参数9:2
参数10:2
参数11:1.0
参数12:25.0
参数13:个
参数14:9300
参数15:是
参数16:10000
参数17:0
参数18:3324
 
[INFO][2017-07-01 11:30:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-01 11:30:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3323
 
[INFO][2017-07-01 11:30:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-01 11:30:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:10
参数2:1252
参数3:1
参数4:0
参数5:1
参数6:0
参数7:0
参数8:0
参数9:0
参数10:1
参数11:0.0
参数12:0.0
参数13:0
参数14:9299
参数15:是
参数16:10000
参数17:0
参数18:3323
 
[INFO][2017-07-01 11:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-01 11:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3322
 
[INFO][2017-07-01 11:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-01 11:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:16
参数2:1267
参数3:1
参数4:0
参数5:1
参数6:0
参数7:0
参数8:0
参数9:0
参数10:0
参数11:0.0
参数12:0.0
参数13:0
参数14:9298
参数15:是
参数16:9999
参数17:0
参数18:3322
 
[INFO][2017-07-01 11:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-01 11:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-01 11:31:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:31:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
参数2:10
 
[INFO][2017-07-01 11:31:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:31:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
参数2:10
 
[INFO][2017-07-01 11:31:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:31:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 11:31:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:31:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 11:31:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:31:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:31:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:31:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:31:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 11:31:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 11:31:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:31:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 11:31:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:31:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 11:31:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:31:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-01 11:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 11:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 11:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 11:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 11:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 11:31:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:31:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 11:31:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 11:31:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 11:31:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:31:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1227280992
 
[INFO][2017-07-01 11:31:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:31:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 11:31:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:31:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1227524810
 
[INFO][2017-07-01 11:31:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:31:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 11:31:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:31:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:31:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 11:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:31:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 11:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:31:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 11:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-01 11:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 11:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ? 
[INFO][2017-07-01 11:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 11:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
参数2:10
 
[INFO][2017-07-01 11:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:31:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
参数2:10
 
[INFO][2017-07-01 11:31:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:31:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 11:31:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:31:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 11:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 11:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 11:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 11:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:31:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-01 11:31:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:31:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 11:31:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:31:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 11:31:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 11:31:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 11:31:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:31:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 11:31:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:31:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 11:31:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 11:31:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 11:31:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:31:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 11:31:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:31:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 11:31:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:31:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 11:32:00] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) http-nio-8001-exec-6 I/O exception (org.apache.http.NoHttpResponseException) caught when processing request to {}->http://v2.openapi.ele.me:80: The target server failed to respond 
[INFO][2017-07-01 11:32:00] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) http-nio-8001-exec-6 Retrying request to {}->http://v2.openapi.ele.me:80 
[INFO][2017-07-01 11:32:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:32:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1227280992
 
[INFO][2017-07-01 11:32:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:32:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1227524810
 
[INFO][2017-07-01 11:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 11:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:13
 
[INFO][2017-07-01 11:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-01 11:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:41
参数3:1227530729
参数4:游戏互动222
参数5:1
参数6:null
参数7:13
 
[INFO][2017-07-01 11:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-01 11:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:32:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227280992
 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227524810
 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:32:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227530729
 
[INFO][2017-07-01 11:36:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:36:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 11:36:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:36:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 11:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 11:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 11:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 11:37:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:37:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:37:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:37:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:37:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 11:37:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:37:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:37:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:37:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:37:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 11:37:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:37:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-01 11:37:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:37:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1227280992
 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1227524810
 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1227530729
 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 11:42:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:42:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 11:42:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:42:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:42:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 11:42:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:42:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:42:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:42:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:42:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 11:42:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:42:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-01 11:42:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:42:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1227280992
 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1227524810
 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1227530729
 
[INFO][2017-07-01 11:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 11:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:13
 
[INFO][2017-07-01 11:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-01 11:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:30
参数2:41
参数3:
参数4:游戏互动222
参数5:1
参数6:null
参数7:13
 
[INFO][2017-07-01 11:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-01 11:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-01 11:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 11:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 11:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 11:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 11:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 11:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 11:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-01 11:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:49:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:49:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:49:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 11:49:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:49:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:49:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:49:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:49:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:49:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 11:49:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:49:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 11:49:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-01 11:49:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:49:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:49:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:49:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:49:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 11:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 11:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 11:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 11:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 11:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 11:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 11:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 11:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1227280992
 
[INFO][2017-07-01 11:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:49:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 11:49:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:49:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 11:49:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:49:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1227524810
 
[INFO][2017-07-01 11:49:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:49:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 11:49:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 11:49:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:15
 
[INFO][2017-07-01 11:49:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-01 11:49:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:43
参数3:1227533103
参数4:null
参数5:1
参数6:null
参数7:15
 
[INFO][2017-07-01 11:49:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:49:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-01 11:49:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:49:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-01 11:49:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:49:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1227280992
 
[INFO][2017-07-01 11:49:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:49:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1227524810
 
[INFO][2017-07-01 11:49:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:49:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1227533103
 
[INFO][2017-07-01 11:49:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 11:49:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:15
 
[INFO][2017-07-01 11:49:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-01 11:49:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:43
参数3:
参数4:null
参数5:1
参数6:null
参数7:15
 
[INFO][2017-07-01 11:49:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:49:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-01 11:49:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:49:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1227280992
 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1227524810
 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:49:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:52:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 11:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 11:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 11:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 11:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 11:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 11:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 11:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 11:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-01 11:52:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:52:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 11:52:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-01 11:52:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:9001
 
[INFO][2017-07-01 11:52:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-01 11:52:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:9001
 
[INFO][2017-07-01 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-01 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:52:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:52:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:
 
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 11:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 11:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 11:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 11:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 11:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 11:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 11:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 11:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 11:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-01 11:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:52:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:52:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:52:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:52:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 11:52:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 11:52:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 11:52:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:
 
[INFO][2017-07-01 11:52:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:52:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 11:52:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 11:52:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 11:52:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:52:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 11:52:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getPageRecord: 
select count(0) from (select * from  cds_brand)  tmp_count 
[INFO][2017-07-01 11:52:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:52:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getPageRecord: 
select tmp.* from (select (row_number() Over(order by brand_id asc)) as rownumber, * from  cds_brand) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-01 11:52:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:52:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-01 11:52:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:9001
 
[INFO][2017-07-01 11:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-01 11:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:9001
 
[INFO][2017-07-01 11:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-01 11:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:55:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:55:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 11:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 11:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 11:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 11:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 11:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-01 11:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 11:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 11:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 11:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 11:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-01 11:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 11:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 11:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 11:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 11:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 11:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 11:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 11:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 11:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 11:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 11:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 11:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1227280992
 
[INFO][2017-07-01 11:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 11:55:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:55:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 11:55:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 11:55:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1227524810
 
[INFO][2017-07-01 11:55:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:55:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 11:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 11:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:13
 
[INFO][2017-07-01 11:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-01 11:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:41
参数3:
参数4:
参数5:1
参数6:null
参数7:13
 
[INFO][2017-07-01 11:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-01 11:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 11:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-01 11:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 11:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 11:55:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 11:55:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:13
 
[INFO][2017-07-01 11:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-01 11:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:41
参数3:
参数4:游戏互动222
参数5:1
参数6:null
参数7:13
 
[INFO][2017-07-01 11:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 11:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 11:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 11:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 11:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 11:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 11:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 11:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 11:55:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 11:56:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:56:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 11:56:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 11:56:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 11:56:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 11:56:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 11:56:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:56:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 11:56:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 11:56:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:56:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 11:56:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 11:56:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 11:56:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 11:56:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:56:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-01 11:56:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 11:56:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 13:51:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:51:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 13:51:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:51:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 13:51:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:51:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 13:51:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 13:51:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 13:51:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:51:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-01 13:51:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 13:51:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 13:51:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:51:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[WARN][2017-07-01 13:51:39] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 13:51:39] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-5 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 13:51:39] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 13:51:39] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-2 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 13:51:41] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 13:51:41] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-6 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-01 13:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 13:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 13:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 13:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 13:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 13:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 13:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 13:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 13:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 13:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 13:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-01 13:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 13:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 13:53:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:53:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 13:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 13:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 13:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 13:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 13:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 13:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 13:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 13:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-01 13:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227280992
 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227524810
 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 13:54:44] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 10:57:48 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 13:54:44] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-01 13:54:45] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-01 13:54:45] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 01 10:57:45 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 13:54:45] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-01 13:55:00] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-01 13:55:00] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 01 13:55:00 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 13:55:01] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-01 13:55:01] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-01 13:55:01] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-01 13:55:01] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(7)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-01 13:55:04] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 13:55:04] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization completed in 3815 ms 
[INFO][2017-07-01 13:55:04] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-01 13:55:04] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 13:55:04 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 13:55:04] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-01 13:55:09] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(7)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 13:55:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 13:55:11] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(7)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 13:55:04 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 13:55:11] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(7)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-01 13:55:12] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 13:55:13] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(7)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-59581-1498888513045-1:1,clientId=null,started=false} 
[INFO][2017-07-01 13:55:13] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-01 13:55:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(7)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-01 13:55:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(7)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-01 13:55:13] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 9066 ms 
[INFO][2017-07-01 13:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-01 13:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:chenbin
 
[INFO][2017-07-01 13:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:351
参数2:1032
 
[INFO][2017-07-01 13:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:352
参数2:1032
 
[INFO][2017-07-01 13:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:376
参数2:1032
 
[INFO][2017-07-01 13:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:55:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:378
参数2:1032
 
[INFO][2017-07-01 13:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:353
参数2:1032
 
[INFO][2017-07-01 13:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:372
参数2:1032
 
[INFO][2017-07-01 13:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:354
参数2:1032
 
[INFO][2017-07-01 13:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:355
参数2:1032
 
[INFO][2017-07-01 13:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:356
参数2:1032
 
[INFO][2017-07-01 13:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-01 13:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:9
 
[INFO][2017-07-01 13:55:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-01 13:55:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:9
参数2:2017-07-01
参数3:2017-07-01
参数4:9
参数5:2017-07-01
参数6:2017-07-01
参数7:9
参数8:2017-07-01
参数9:2017-07-01
参数10:9
参数11:2017-07-01
参数12:2017-07-01
参数13:9
参数14:2017-07-01
参数15:2017-07-01
参数16:9
参数17:2017-07-01
参数18:2017-07-01
 
[INFO][2017-07-01 13:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-01 13:55:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2017-07-01
参数2:2017-07-01
参数3:9
参数4:2017-06-30
参数5:2017-06-30
参数6:9
参数7:2017-06-24
参数8:2017-06-24
参数9:9
 
[INFO][2017-07-01 13:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 13:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:55:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 13:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 13:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 13:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 13:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 13:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 13:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 13:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 13:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 13:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 13:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 13:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-07-01 13:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:55:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 13:55:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:55:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 13:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 13:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 13:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 13:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 13:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 13:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 13:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-01 13:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:55:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 13:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 13:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 13:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 13:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 13:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 13:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 13:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 13:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 13:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 13:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 13:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1227280992
 
[INFO][2017-07-01 13:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 13:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 13:55:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1227524810
 
[INFO][2017-07-01 13:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 13:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:55:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 13:56:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-01 13:56:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-01 13:56:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:56:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-01 13:56:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:56:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-01 13:56:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:56:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-01 13:56:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:56:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:378
参数2:1032
 
[INFO][2017-07-01 13:56:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:56:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-01 13:56:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:56:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-01 13:56:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:56:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-01 13:56:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:56:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-01 13:56:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 13:56:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-01 13:56:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-01 13:56:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-01 13:56:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-01 13:56:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:9
参数2:2017-07-01
参数3:2017-07-01
参数4:9
参数5:2017-07-01
参数6:2017-07-01
参数7:9
参数8:2017-07-01
参数9:2017-07-01
参数10:9
参数11:2017-07-01
参数12:2017-07-01
参数13:9
参数14:2017-07-01
参数15:2017-07-01
参数16:9
参数17:2017-07-01
参数18:2017-07-01
 
[INFO][2017-07-01 13:56:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-01 13:56:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2017-07-01
参数2:2017-07-01
参数3:9
参数4:2017-06-30
参数5:2017-06-30
参数6:9
参数7:2017-06-24
参数8:2017-06-24
参数9:9
 
[INFO][2017-07-01 13:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 13:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 13:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 13:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 13:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 13:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 13:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 13:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 13:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 13:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 13:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 13:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 13:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-07-01 13:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:56:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 13:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 13:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 13:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 13:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 13:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 13:56:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 13:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 13:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 13:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-01 13:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 13:56:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 13:56:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-01 13:56:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 13:56:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 13:56:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:56:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 13:56:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 13:56:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-01 13:56:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 13:56:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 13:56:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 13:56:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1227280992
 
[INFO][2017-07-01 13:56:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:56:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 13:56:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:56:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 13:56:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 13:56:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1227524810
 
[INFO][2017-07-01 13:56:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:56:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 13:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 13:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 13:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 13:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 13:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 13:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 13:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 13:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 13:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 13:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 13:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 13:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 13:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-01 13:56:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:56:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 13:57:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 13:57:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 13:57:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 13:57:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 13:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 13:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 13:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 13:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 13:57:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 13:57:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-01 13:57:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 13:57:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-01 13:57:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 13:57:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-01 13:57:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 13:57:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-01 13:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 13:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
参数2:10
 
[INFO][2017-07-01 13:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 13:57:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
参数2:10
 
[INFO][2017-07-01 13:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 13:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
参数2:10
 
[INFO][2017-07-01 13:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 13:57:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
参数2:10
 
[INFO][2017-07-01 13:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 13:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 13:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 13:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 13:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 13:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:57:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-01 13:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 13:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 13:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1227280992
 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1227524810
 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 13:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (47,46,45,44,43,42,41))  tmp_count 
[INFO][2017-07-01 13:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 13:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (47,46,45,44,43,42,41)) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 13:57:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 13:57:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 13:57:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 13:57:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:57:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 13:57:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 13:57:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 13:57:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:57:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 13:57:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 13:57:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 13:57:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 13:57:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 13:57:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 13:57:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 13:57:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:57:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-01 13:57:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:57:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 13:57:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:57:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 13:57:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:57:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 13:57:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:57:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 13:57:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 13:57:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 13:57:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 13:57:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 13:57:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:57:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-01 13:57:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:57:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1227280992
 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1227524810
 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 13:58:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:58:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 13:58:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 13:58:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-01 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:58:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 13:58:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:58:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 13:58:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:58:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 13:58:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:58:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 13:58:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 13:58:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 13:58:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:58:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-01 13:58:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 13:58:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 13:58:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:58:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 13:58:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 13:58:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-01 13:58:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 13:58:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 13:58:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 13:58:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-01 13:58:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:58:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 13:58:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 13:58:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 13:58:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 13:58:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1227280992
 
[INFO][2017-07-01 13:58:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:58:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 13:58:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:58:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 13:58:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 13:58:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1227524810
 
[INFO][2017-07-01 13:58:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:58:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 13:59:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 13:59:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 13:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 13:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 13:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 13:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 13:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 13:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 13:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 13:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 13:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-01 13:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 13:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 13:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:59:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 13:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 13:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 13:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 13:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 13:59:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:59:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 13:59:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 13:59:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 13:59:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:59:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 13:59:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 13:59:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 13:59:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:59:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-01 13:59:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 13:59:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 13:59:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 13:59:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 13:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 13:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-01 13:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 13:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 13:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 13:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 13:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-01 13:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 13:59:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 13:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 13:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 13:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1227280992
 
[INFO][2017-07-01 13:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 13:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 13:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1227524810
 
[INFO][2017-07-01 13:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 13:59:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 13:59:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 13:59:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:14
 
[INFO][2017-07-01 13:59:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-01 13:59:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:42
参数3:1227530975
参数4:
参数5:1
参数6:null
参数7:14
 
[INFO][2017-07-01 13:59:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 13:59:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-01 13:59:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 13:59:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-01 13:59:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 13:59:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1227280992
 
[INFO][2017-07-01 13:59:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 13:59:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1227524810
 
[INFO][2017-07-01 13:59:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 13:59:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1227530975
 
[INFO][2017-07-01 14:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:14
 
[INFO][2017-07-01 14:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:42
参数3:
参数4:
参数5:1
参数6:null
参数7:14
 
[INFO][2017-07-01 14:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-01 14:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-01 14:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:00:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1227280992
 
[INFO][2017-07-01 14:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:00:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1227524810
 
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:01:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 14:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 14:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 14:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-01 14:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:01:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:01:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227280992
 
[INFO][2017-07-01 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:01:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227524810
 
[INFO][2017-07-01 14:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 14:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:01:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 14:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 14:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-01 14:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:01:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1227280992
 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1227524810
 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:01:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 14:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:01:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:08:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:08:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:08:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:08:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 14:08:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:08:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 14:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 14:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 14:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-07-01 14:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 14:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:08:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 14:08:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:08:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 14:08:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 14:08:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 14:08:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:08:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:08:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:08:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 14:08:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:08:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 14:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-01 14:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 14:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:08:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 14:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 14:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 14:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 14:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 14:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 14:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 14:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1227280992
 
[INFO][2017-07-01 14:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1227524810
 
[INFO][2017-07-01 14:09:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:09:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 14:09:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:09:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:15
 
[INFO][2017-07-01 14:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:43
参数3:1227533352
参数4:null
参数5:1
参数6:null
参数7:15
 
[INFO][2017-07-01 14:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-01 14:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-01 14:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:09:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1227280992
 
[INFO][2017-07-01 14:09:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:09:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1227524810
 
[INFO][2017-07-01 14:09:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:09:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1227533352
 
[INFO][2017-07-01 14:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:15
 
[INFO][2017-07-01 14:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:43
参数3:
参数4:null
参数5:1
参数6:null
参数7:15
 
[INFO][2017-07-01 14:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 14:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 14:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1227280992
 
[INFO][2017-07-01 14:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1227524810
 
[INFO][2017-07-01 14:12:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:12:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 14:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 14:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 14:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 14:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 14:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 14:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-01 14:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 14:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:12:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 14:12:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:12:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:12:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:12:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:12:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:12:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 14:12:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:12:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-01 14:12:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 14:12:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:12:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:12:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:12:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:12:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 14:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-01 14:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 14:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 14:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-01 14:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 14:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 14:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 14:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:12:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227280992
 
[INFO][2017-07-01 14:12:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:12:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227524810
 
[INFO][2017-07-01 14:12:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:12:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:16
 
[INFO][2017-07-01 14:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:30
参数2:44
参数3:1227506673
参数4:热销菜22
参数5:0
参数6:null
参数7:16
 
[INFO][2017-07-01 14:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 14:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 14:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:热销菜22
 
[INFO][2017-07-01 14:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 14:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:12:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:12:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:16
 
[INFO][2017-07-01 14:12:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:12:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:44
参数3:1227506673
参数4:
参数5:0
参数6:null
参数7:16
 
[INFO][2017-07-01 14:12:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:12:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-01 14:12:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:12:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:12:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:12:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-01 14:12:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:12:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:12:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:12:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 14:12:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:12:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 14:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 14:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 14:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 14:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 14:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-01 14:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 14:13:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:13:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 14:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 14:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 14:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 14:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-01 14:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1227280992
 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1227524810
 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 14:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 14:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 14:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 14:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-01 14:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 14:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 14:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 14:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 14:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-01 14:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 14:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 14:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 14:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227280992
 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:国际美食
 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227524810
 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:15:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:15:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:17
 
[INFO][2017-07-01 14:15:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:15:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:45
参数3:
参数4:国际美食
参数5:1
参数6:null
参数7:17
 
[INFO][2017-07-01 14:15:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:15:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 14:15:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:15:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 14:15:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:15:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227280992
 
[INFO][2017-07-01 14:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:17
 
[INFO][2017-07-01 14:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:45
参数3:
参数4:
参数5:1
参数6:null
参数7:17
 
[INFO][2017-07-01 14:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 14:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 14:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:15:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.deleteRecord: 
DELETE FROM cds_stores_class
         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:15:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:0
 
[INFO][2017-07-01 14:15:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:15:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:15:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:15:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1227280992
 
[INFO][2017-07-01 14:15:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:15:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:15:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:15:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 14:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 14:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 14:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 14:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 14:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 14:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1227280992
 
[INFO][2017-07-01 14:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:16:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:16:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:16:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 14:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 14:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 14:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 14:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 14:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 14:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227280992
 
[INFO][2017-07-01 14:16:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:16:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 14:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 14:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-01 14:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:16:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 14:16:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:16:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-01 14:16:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 14:16:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 14:16:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:16:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:16:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:16:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-01 14:16:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 14:16:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 14:16:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:16:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:16:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:16:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1227280992
 
[INFO][2017-07-01 14:16:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:16:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.deleteRecord: 
DELETE FROM cds_stores_class
         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:0
 
[INFO][2017-07-01 14:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1227280992
 
[INFO][2017-07-01 14:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:17:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 14:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 14:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-01 14:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 14:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 14:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-01 14:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:17:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1227280992
 
[INFO][2017-07-01 14:17:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:17:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:17:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:17:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:19:42] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 13:55:04 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 14:19:42] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-01 14:19:43] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-01 14:19:43] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 01 13:55:00 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 14:19:43] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-01 14:19:55] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-01 14:19:55] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 01 14:19:55 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 14:19:55] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-01 14:19:56] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-01 14:19:56] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-01 14:19:56] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-01 14:19:58] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 14:19:58] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2734 ms 
[INFO][2017-07-01 14:19:58] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-01 14:19:58] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 14:19:58 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 14:19:58] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-01 14:20:00] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:20:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:20:01] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 14:19:58 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 14:20:01] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-01 14:20:01] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 14:20:01] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-60588-1498890001628-1:1,clientId=null,started=false} 
[INFO][2017-07-01 14:20:01] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-01 14:20:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-01 14:20:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-01 14:20:02] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3730 ms 
[WARN][2017-07-01 14:20:15] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-07-01 14:20:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-01 14:20:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:chenbin
 
[INFO][2017-07-01 14:20:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:20:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:351
参数2:1032
 
[INFO][2017-07-01 14:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:352
参数2:1032
 
[INFO][2017-07-01 14:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:376
参数2:1032
 
[INFO][2017-07-01 14:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:378
参数2:1032
 
[INFO][2017-07-01 14:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:353
参数2:1032
 
[INFO][2017-07-01 14:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:372
参数2:1032
 
[INFO][2017-07-01 14:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:20:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:354
参数2:1032
 
[INFO][2017-07-01 14:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:355
参数2:1032
 
[INFO][2017-07-01 14:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:356
参数2:1032
 
[INFO][2017-07-01 14:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-01 14:20:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:9
 
[INFO][2017-07-01 14:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-01 14:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:9
参数2:2017-07-01
参数3:2017-07-01
参数4:9
参数5:2017-07-01
参数6:2017-07-01
参数7:9
参数8:2017-07-01
参数9:2017-07-01
参数10:9
参数11:2017-07-01
参数12:2017-07-01
参数13:9
参数14:2017-07-01
参数15:2017-07-01
参数16:9
参数17:2017-07-01
参数18:2017-07-01
 
[INFO][2017-07-01 14:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-01 14:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2017-07-01
参数2:2017-07-01
参数3:9
参数4:2017-06-30
参数5:2017-06-30
参数6:9
参数7:2017-06-24
参数8:2017-06-24
参数9:9
 
[INFO][2017-07-01 14:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 14:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 14:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 14:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-01 14:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 14:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 14:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:20:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 14:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 14:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 14:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-01 14:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 14:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 14:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 14:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 14:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 14:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 14:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 14:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227280992
 
[INFO][2017-07-01 14:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:0
 
[WARN][2017-07-01 14:20:48] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-01 14:21:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:21:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:0
 
[INFO][2017-07-01 14:21:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:21:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:0
 
[INFO][2017-07-01 14:21:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:21:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:0
 
[INFO][2017-07-01 14:21:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:21:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[WARN][2017-07-01 14:21:27] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-2 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 14:21:27] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 14:21:27] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-01 14:21:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:21:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:0
 
[INFO][2017-07-01 14:21:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:21:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 14:21:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:21:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:21:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:21:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 14:21:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:21:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[WARN][2017-07-01 14:21:34] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-01 14:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 14:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-01 14:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:21:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 14:21:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:21:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:21:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:21:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 14:21:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:21:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 14:21:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 14:21:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 14:21:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:21:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 14:21:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:21:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-07-01 14:21:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:21:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 14:21:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:21:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 14:21:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 14:21:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 14:21:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:21:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:21:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 14:21:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 14:21:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:21:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 14:21:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:21:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:21:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:21:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227280992
 
[INFO][2017-07-01 14:21:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:21:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:23:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-01 14:23:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:0
 
[WARN][2017-07-01 14:23:56] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-01 14:29:06] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 14:19:58 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 14:29:06] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-01 14:29:07] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-01 14:29:07] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 01 14:19:55 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 14:29:07] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-01 14:29:20] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-01 14:29:20] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 01 14:29:20 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 14:29:20] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-01 14:29:20] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-01 14:29:20] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-01 14:29:21] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-01 14:29:23] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 14:29:23] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2732 ms 
[INFO][2017-07-01 14:29:23] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-01 14:29:23] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 14:29:23 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 14:29:23] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-01 14:29:24] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 14:29:23 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 14:29:25] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-01 14:29:26] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 14:29:26] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-60992-1498890566132-1:1,clientId=null,started=false} 
[INFO][2017-07-01 14:29:26] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-01 14:29:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-01 14:29:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-01 14:29:26] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3634 ms 
[INFO][2017-07-01 14:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-01 14:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-01 14:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-01 14:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-01 14:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-01 14:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:378
参数2:1032
 
[INFO][2017-07-01 14:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:29:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-01 14:29:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:29:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-01 14:29:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:29:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-01 14:29:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:29:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-01 14:29:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:29:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-01 14:29:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-01 14:29:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-01 14:29:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-01 14:29:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:9
参数2:2017-07-01
参数3:2017-07-01
参数4:9
参数5:2017-07-01
参数6:2017-07-01
参数7:9
参数8:2017-07-01
参数9:2017-07-01
参数10:9
参数11:2017-07-01
参数12:2017-07-01
参数13:9
参数14:2017-07-01
参数15:2017-07-01
参数16:9
参数17:2017-07-01
参数18:2017-07-01
 
[INFO][2017-07-01 14:29:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-01 14:29:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2017-07-01
参数2:2017-07-01
参数3:9
参数4:2017-06-30
参数5:2017-06-30
参数6:9
参数7:2017-06-24
参数8:2017-06-24
参数9:9
 
[INFO][2017-07-01 14:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-01 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 14:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:29:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 14:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 14:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 14:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-01 14:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:29:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-01 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-01 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1227280992
 
[INFO][2017-07-01 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.deleteClass: 
delete from cds_stores_class  where stores_class_id=#stores_class_id} 
[INFO][2017-07-01 14:29:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:29:53] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) http-nio-8001-exec-1 Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
[INFO][2017-07-01 14:29:53] org.springframework.jdbc.support.SQLErrorCodesFactory.<init>(SQLErrorCodesFactory.java:127) http-nio-8001-exec-1 SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
[WARN][2017-07-01 14:29:53] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: “}”附近有语法错误。
### The error may involve cds_ptstores_manage.deleteClass-Inline
### The error occurred while setting parameters
### SQL: delete from cds_stores_class  where stores_class_id=#stores_class_id}
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: “}”附近有语法错误。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [102]; “}”附近有语法错误。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: “}”附近有语法错误。 
[INFO][2017-07-01 14:30:42] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 14:29:23 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 14:30:42] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-01 14:30:42] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-01 14:30:42] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 01 14:29:20 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 14:30:42] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-01 14:30:53] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-01 14:30:53] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 01 14:30:53 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 14:30:53] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-01 14:30:53] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-01 14:30:54] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-01 14:30:54] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-01 14:30:56] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 14:30:56] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 3035 ms 
[INFO][2017-07-01 14:30:56] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-01 14:30:56] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 14:30:56 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 14:30:56] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-01 14:30:58] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 14:30:58] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 14:30:59] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 14:30:56 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 14:30:59] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-01 14:30:59] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 14:30:59] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-61132-1498890659774-1:1,clientId=null,started=false} 
[INFO][2017-07-01 14:30:59] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-01 14:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-01 14:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-01 14:31:00] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3927 ms 
[INFO][2017-07-01 14:31:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-01 14:31:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:chenbin
 
[INFO][2017-07-01 14:31:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:31:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:351
参数2:1032
 
[INFO][2017-07-01 14:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:352
参数2:1032
 
[INFO][2017-07-01 14:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:376
参数2:1032
 
[INFO][2017-07-01 14:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:378
参数2:1032
 
[INFO][2017-07-01 14:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:353
参数2:1032
 
[INFO][2017-07-01 14:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:372
参数2:1032
 
[INFO][2017-07-01 14:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:31:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:354
参数2:1032
 
[INFO][2017-07-01 14:31:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:31:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:355
参数2:1032
 
[INFO][2017-07-01 14:31:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:31:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:356
参数2:1032
 
[INFO][2017-07-01 14:31:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-01 14:31:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:9
 
[INFO][2017-07-01 14:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-01 14:31:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:9
参数2:2017-07-01
参数3:2017-07-01
参数4:9
参数5:2017-07-01
参数6:2017-07-01
参数7:9
参数8:2017-07-01
参数9:2017-07-01
参数10:9
参数11:2017-07-01
参数12:2017-07-01
参数13:9
参数14:2017-07-01
参数15:2017-07-01
参数16:9
参数17:2017-07-01
参数18:2017-07-01
 
[INFO][2017-07-01 14:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-01 14:31:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2017-07-01
参数2:2017-07-01
参数3:9
参数4:2017-06-30
参数5:2017-06-30
参数6:9
参数7:2017-06-24
参数8:2017-06-24
参数9:9
 
[INFO][2017-07-01 14:31:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:31:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 14:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 14:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 14:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 14:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-01 14:31:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:31:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 14:31:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:31:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 14:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 14:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:31:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 14:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-01 14:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 14:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 14:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 14:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 14:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 14:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 14:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 14:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227280992
 
[INFO][2017-07-01 14:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.deleteClass: 
delete from cds_stores_class  where stores_class_id=? 
[INFO][2017-07-01 14:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:0
 
[INFO][2017-07-01 14:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1227280992
 
[INFO][2017-07-01 14:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1227280992
 
[INFO][2017-07-01 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:31:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:32:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:32:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 14:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 14:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 14:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-07-01 14:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 14:32:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 14:32:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 14:32:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:32:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 14:32:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:32:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 14:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 14:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 14:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 14:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:32:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1227280992
 
[INFO][2017-07-01 14:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.deleteClass: 
delete from cds_stores_class  where stores_class_id=? 
[INFO][2017-07-01 14:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:0
 
[INFO][2017-07-01 14:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 14:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 14:35:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:35:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:35:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:35:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:35:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:35:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 14:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:
 
[INFO][2017-07-01 14:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 14:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 14:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 14:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 14:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 14:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 14:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 14:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:35:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:35:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:35:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[WARN][2017-07-01 14:36:14] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-6 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-07-01 14:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-01 14:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:chenbin
 
[INFO][2017-07-01 14:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:351
参数2:1032
 
[INFO][2017-07-01 14:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:352
参数2:1032
 
[INFO][2017-07-01 14:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:376
参数2:1032
 
[INFO][2017-07-01 14:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:378
参数2:1032
 
[INFO][2017-07-01 14:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:353
参数2:1032
 
[INFO][2017-07-01 14:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:372
参数2:1032
 
[INFO][2017-07-01 14:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:354
参数2:1032
 
[INFO][2017-07-01 14:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:355
参数2:1032
 
[INFO][2017-07-01 14:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 14:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:356
参数2:1032
 
[INFO][2017-07-01 14:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-01 14:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:9
 
[INFO][2017-07-01 14:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-01 14:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:9
参数2:2017-07-01
参数3:2017-07-01
参数4:9
参数5:2017-07-01
参数6:2017-07-01
参数7:9
参数8:2017-07-01
参数9:2017-07-01
参数10:9
参数11:2017-07-01
参数12:2017-07-01
参数13:9
参数14:2017-07-01
参数15:2017-07-01
参数16:9
参数17:2017-07-01
参数18:2017-07-01
 
[INFO][2017-07-01 14:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-01 14:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2017-07-01
参数2:2017-07-01
参数3:9
参数4:2017-06-30
参数5:2017-06-30
参数6:9
参数7:2017-06-24
参数8:2017-06-24
参数9:9
 
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:36:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 14:36:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-01 14:36:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:9001
 
[INFO][2017-07-01 14:36:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-01 14:36:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:9001
 
[INFO][2017-07-01 14:36:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:36:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:36:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-01 14:36:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:36:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:36:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:36:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:36:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 14:36:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:36:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:
 
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 14:36:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 14:38:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:38:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 14:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 14:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 14:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 14:38:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:38:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:38:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:38:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:38:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:38:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:
 
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 14:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 14:45:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:45:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:45:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:45:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 14:45:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:45:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:45:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:45:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:45:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:45:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:45:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:45:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 14:45:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:45:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 14:45:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:45:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-01 14:45:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:45:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 14:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 14:45:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 14:45:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 14:50:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:50:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 14:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 14:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 14:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-01 14:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 14:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 14:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 14:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 14:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 14:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-07-01 14:53:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:53:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 14:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 14:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 14:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 14:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 14:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-01 14:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 14:54:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:54:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:54:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:54:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 14:54:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:54:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:54:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:54:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 14:54:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:54:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 14:54:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:54:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 14:54:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:54:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 14:54:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:54:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-01 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 14:54:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:54:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 14:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 14:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 14:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 14:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:54:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 14:54:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:54:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:54:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:54:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-01 14:54:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:54:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 14:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 14:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 14:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 14:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 14:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 14:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-01 14:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 14:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:55:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:56:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 14:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 14:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 14:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 14:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 14:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-07-01 14:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:56:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 14:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 14:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 14:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 14:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 14:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-01 14:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[WARN][2017-07-01 14:56:41] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-7 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 14:56:41] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 14:56:41] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 14:56:42] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 14:56:43] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 14:56:43] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:57:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 14:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 14:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 14:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 14:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:58:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 14:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 14:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 14:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 14:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 14:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 14:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:58:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-01 14:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 14:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 14:58:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-01 14:58:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3324
 
[INFO][2017-07-01 14:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-01 14:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:13
参数2:1176
参数3:1
参数4:0
参数5:1
参数6:15
参数7:10
参数8:0
参数9:2
参数10:2
参数11:1.0
参数12:25.0
参数13:个
参数14:9300
参数15:是
参数16:10000
参数17:0
参数18:3324
 
[INFO][2017-07-01 14:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-01 14:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3323
 
[INFO][2017-07-01 14:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-01 14:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:10
参数2:1252
参数3:1
参数4:0
参数5:1
参数6:0
参数7:0
参数8:0
参数9:0
参数10:1
参数11:0.0
参数12:0.0
参数13:0
参数14:9299
参数15:是
参数16:10000
参数17:0
参数18:3323
 
[INFO][2017-07-01 14:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 14:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 14:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 14:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 14:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 14:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 14:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 14:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 14:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:58:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-01 14:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 14:58:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 14:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 14:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 14:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 14:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 14:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 14:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 14:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 14:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 14:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 14:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 14:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1227280992
 
[INFO][2017-07-01 14:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:59:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 14:59:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 14:59:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 15:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 15:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 15:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-01 15:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:04:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 15:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:04:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 15:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 15:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 15:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 15:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-01 15:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:04:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 15:05:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:05:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-01 15:05:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:05:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 15:05:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:05:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 15:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 15:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-01 15:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:05:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 15:06:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:06:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 15:06:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 15:06:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 15:06:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-01 15:06:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:06:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:06:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:06:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 15:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 15:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:06:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-01 15:06:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:06:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 15:06:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:06:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 15:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 15:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 15:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-01 15:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:06:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 15:06:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:06:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:06:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:06:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 15:06:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:06:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:06:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:06:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:07:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:07:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:07:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:07:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 15:07:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:07:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 15:07:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:07:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-01 15:07:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:07:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 15:07:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:07:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 15:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:07:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 15:07:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:07:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:07:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:07:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-01 15:07:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:07:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 15:09:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:09:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 15:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 15:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 15:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:09:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-01 15:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:09:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 15:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 15:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 15:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:12:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 15:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 15:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-01 15:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:12:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:12:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:13:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 15:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 15:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 15:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 15:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-01 15:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 15:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:14:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:14:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:
 
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:14:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:14:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 15:14:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:108
 
[INFO][2017-07-01 15:14:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 15:14:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:135
 
[INFO][2017-07-01 15:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 15:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:14:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 15:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-01 15:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:14:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 15:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 15:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 15:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 15:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-01 15:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:7
 
[INFO][2017-07-01 15:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-01 15:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:1000007
参数3:番茄炒鸡蛋
参数4:FQCJD
参数5:番茄炒鸡蛋  (份),番茄炒鸡蛋饭-份,番茄炒鸡蛋 （份）,番茄炒鸡蛋,番茄炒鸡蛋-份,番茄炒鸡蛋 （大份）,番茄炒鸡蛋-大份,番茄炒鸡蛋  (大份),番茄炒鸡蛋饭-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-22 17:18:41
参数12:1
参数13:0
参数14:50.0
参数15:0
参数16:1
参数17:1
参数18:1
参数19:100
参数20:null
参数21:null
参数22:80
参数23:7
 
[INFO][2017-07-01 15:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-01 15:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:10
 
[INFO][2017-07-01 15:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-01 15:15:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:1000010
参数3:花菜炒豆腐
参数4:hccdf
参数5:花菜炒豆腐,花菜炒豆腐  (份),花菜炒豆腐-份,花菜炒豆腐（大份）,花菜炒豆腐(大份),花菜炒豆腐  (大份),花菜炒豆腐-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-09 10:05:30
参数12:1
参数13:0
参数14:19.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:10
 
[INFO][2017-07-01 15:15:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-01 15:15:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:24
 
[INFO][2017-07-01 15:15:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-01 15:15:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:1000024
参数3:小炒土豆片
参数4:xctdp
参数5:小炒土豆片
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:47:23
参数12:1
参数13:0
参数14:15.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:430
参数20:null
参数21:null
参数22:10
参数23:24
 
[INFO][2017-07-01 15:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:19:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 15:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 15:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 15:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 15:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 15:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-01 15:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 15:19:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:19:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 15:19:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 15:19:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-01 15:19:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:19:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:19
 
[INFO][2017-07-01 15:19:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 15:19:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:19
 
[INFO][2017-07-01 15:19:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:19:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:20
 
[INFO][2017-07-01 15:19:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 15:19:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:20
 
[INFO][2017-07-01 15:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:15
 
[INFO][2017-07-01 15:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:19:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:15
 
[INFO][2017-07-01 15:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:13
 
[INFO][2017-07-01 15:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:19:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:13
 
[INFO][2017-07-01 15:19:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:19:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:14
 
[INFO][2017-07-01 15:19:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:19:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:14
 
[INFO][2017-07-01 15:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 15:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 15:22:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 15:23:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-01 15:23:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:23:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:23:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:25:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:25:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:25:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:25:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:25:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 15:25:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:25:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:25:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:25:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:25:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 15:25:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:25:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-01 15:25:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:25:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[WARN][2017-07-01 15:25:28] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-5 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 15:25:28] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 15:25:28] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-4 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 15:25:28] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 15:25:30] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-2 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 15:25:30] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-01 15:27:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:27:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 15:27:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:27:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 15:27:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:27:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 15:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:27:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:27:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:27:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:27:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:27:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:27:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:27:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 15:27:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 15:27:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:27:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 15:27:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:
 
[INFO][2017-07-01 15:27:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:27:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 15:27:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 15:27:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:27:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:27:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 15:27:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 16 and 30 
[INFO][2017-07-01 15:27:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 15:27:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:27:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 15:27:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 31 and 45 
[INFO][2017-07-01 15:27:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 15:27:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:27:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 15:27:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 46 and 60 
[INFO][2017-07-01 15:27:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 15:27:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:27:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 15:27:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 61 and 71 
[INFO][2017-07-01 15:27:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 15:27:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:27:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 15:27:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 46 and 60 
[INFO][2017-07-01 15:27:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 15:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 15:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 31 and 45 
[INFO][2017-07-01 15:27:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 15:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 15:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 16 and 30 
[INFO][2017-07-01 15:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 15:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:28:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 15:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:28:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 15:28:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:28:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 15:28:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 16 and 30 
[INFO][2017-07-01 15:28:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 15:28:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:28:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 15:28:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 31 and 45 
[INFO][2017-07-01 15:28:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 15:28:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:28:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 15:28:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 46 and 60 
[INFO][2017-07-01 15:28:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 15:28:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:28:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 15:28:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 61 and 71 
[INFO][2017-07-01 15:28:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 15:28:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:28:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 15:28:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 46 and 60 
[INFO][2017-07-01 15:28:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 15:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 15:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 31 and 45 
[INFO][2017-07-01 15:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 15:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 15:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 16 and 30 
[INFO][2017-07-01 15:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 15:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 15:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 15:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 15:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 15:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 15:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-01 15:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 15:29:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:29:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:29:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:29:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:29:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:29:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:
 
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:29:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 15:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:30:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 15:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-01 15:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:30:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 15:30:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:30:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 15:30:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 15:30:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-01 15:35:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:35:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 15:35:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 15:35:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 15:35:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:35:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 15:35:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:35:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:35:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:35:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:35:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:35:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:
 
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:35:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:36:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:36:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:36:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:41
参数3:41
 
[INFO][2017-07-01 15:36:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:36:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:41
参数3:41
 
[INFO][2017-07-01 15:36:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:36:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:36:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:36:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.insertRecord: 
INSERT INTO cds_goods_info(
          
            class_id
         , 
            good_name
         , 
            pinxin
         , 
            good_pic
         , 
            egood_pic
         , 
            add_date
         , 
            status
         , 
            listorder
         , 
            default_standrad_id
         , 
            good_info
         , 
            market_price
         , 
            box_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-01 15:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:24
参数2:测试菜品
参数3:CSCP
参数4:null
参数5:null
参数6:2017-07-01 15:37:03
参数7:1
参数8:1
参数9:null
参数10:123456
参数11:30.00
参数12:1.00
 
[INFO][2017-07-01 15:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:37:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:37:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 15:37:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:37:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 15:37:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:37:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:37:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:37:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:37:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:37:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:48
参数3:48
 
[INFO][2017-07-01 15:37:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:37:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:48
参数3:48
 
[INFO][2017-07-01 15:37:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:37:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:41
参数3:41
 
[INFO][2017-07-01 15:37:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:37:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:41
参数3:41
 
[INFO][2017-07-01 15:37:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:37:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:42
参数3:42
 
[INFO][2017-07-01 15:37:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:37:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:42
参数3:42
 
[INFO][2017-07-01 15:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:44
参数3:44
 
[INFO][2017-07-01 15:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:44
参数3:44
 
[INFO][2017-07-01 15:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:45
参数3:45
 
[INFO][2017-07-01 15:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:37:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:45
参数3:45
 
[INFO][2017-07-01 15:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:46
参数3:46
 
[INFO][2017-07-01 15:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:46
参数3:46
 
[INFO][2017-07-01 15:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:47
参数3:47
 
[INFO][2017-07-01 15:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:47
参数3:47
 
[INFO][2017-07-01 15:37:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:37:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:41
参数3:41
 
[INFO][2017-07-01 15:37:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:37:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:41
参数3:41
 
[INFO][2017-07-01 15:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:42
参数3:42
 
[INFO][2017-07-01 15:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:37:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:42
参数3:42
 
[INFO][2017-07-01 15:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:43
参数3:43
 
[INFO][2017-07-01 15:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:38:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:43
参数3:43
 
[INFO][2017-07-01 15:38:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:38:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:45
参数3:45
 
[INFO][2017-07-01 15:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:38:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:45
参数3:45
 
[INFO][2017-07-01 15:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:47
参数3:47
 
[INFO][2017-07-01 15:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:38:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:47
参数3:47
 
[INFO][2017-07-01 15:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:48
参数3:48
 
[INFO][2017-07-01 15:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:38:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:48
参数3:48
 
[INFO][2017-07-01 15:38:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:38:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:41
参数3:41
 
[INFO][2017-07-01 15:38:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:38:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:41
参数3:41
 
[INFO][2017-07-01 15:38:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:38:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:38:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:38:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:38:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:38:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:41
参数3:41
 
[INFO][2017-07-01 15:38:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:38:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:41
参数3:41
 
[INFO][2017-07-01 15:38:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:38:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:38:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:38:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:38:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:38:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:2
参数3:2
 
[INFO][2017-07-01 15:38:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:38:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:2
参数3:2
 
[INFO][2017-07-01 15:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:38:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:38:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:38:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:1
参数3:1
 
[INFO][2017-07-01 15:38:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:38:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:1
参数3:1
 
[INFO][2017-07-01 15:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 15:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:1
参数3:1
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 15:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:1
参数3:1
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 15:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-01 15:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:1
参数3:1
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-01 15:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:1
参数3:1
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 15:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:38:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 15:38:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1286
 
[INFO][2017-07-01 15:38:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 15:38:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1286
 
[INFO][2017-07-01 15:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 15:38:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1286
 
[INFO][2017-07-01 15:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 15:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1286
 
[INFO][2017-07-01 15:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 15:38:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1286
 
[INFO][2017-07-01 15:39:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_goods_info(
          
            class_id
         , 
            good_name
         , 
            pinxin
         , 
            good_pic
         , 
            egood_pic
         , 
            add_date
         , 
            status
         , 
            listorder
         , 
            default_standrad_id
         , 
            good_info
         , 
            market_price
         , 
            box_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-01 15:39:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:48
参数2:测试菜品71
参数3:CSCP00
参数4:null
参数5:null
参数6:2017-07-01 15:39:41
参数7:1
参数8:1
参数9:null
参数10:569
参数11:30.00
参数12:1.00
 
[INFO][2017-07-01 15:39:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 15:39:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:1
参数3:1
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:39:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-01 15:39:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:1
参数3:1
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:39:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:39:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 15:39:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:39:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 15:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 15:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:测试c
参数3:测试c
 
[INFO][2017-07-01 15:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ) 
[INFO][2017-07-01 15:39:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:测试c
参数3:测试c
 
[INFO][2017-07-01 15:39:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 15:39:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:测试
参数3:测试
 
[INFO][2017-07-01 15:39:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-07-01 15:39:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:测试
参数3:测试
 
[INFO][2017-07-01 15:39:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 15:39:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1288
 
[INFO][2017-07-01 15:40:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 15:40:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:48
参数3:48
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:40:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:40:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:48
参数3:48
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:40:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 15:40:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:3
参数3:3
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:40:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:40:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:3
参数3:3
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:40:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 15:40:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:3
参数3:3
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:40:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:40:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:3
参数3:3
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:40:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 15:40:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:2
参数3:2
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:40:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:40:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:2
参数3:2
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:40:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 15:40:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:29
参数3:29
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:40:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:40:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:29
参数3:29
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:40:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 15:40:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:1
参数3:1
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:40:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-01 15:40:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:1
参数3:1
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:40:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 15:40:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:41
参数3:41
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:40:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ) 
[INFO][2017-07-01 15:40:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:41
参数3:41
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 15:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:3
参数3:3
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:3
参数3:3
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 15:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:3
参数3:3
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:40:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:3
参数3:3
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 15:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:3
参数3:3
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )
                
            
            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:41:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:3
参数3:3
参数4:测试
参数5:测试
 
[INFO][2017-07-01 15:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 15:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:41:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:41:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 15:41:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:41:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:41:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:41:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 15:41:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 15:41:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 15:41:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 15:41:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:
 
[INFO][2017-07-01 15:41:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:41:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 15:41:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 15:41:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 15:41:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:41:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:41:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-01 15:41:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:41:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:41:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:41:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-01 15:41:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-01 15:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:9001
 
[INFO][2017-07-01 15:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-01 15:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:9001
 
[INFO][2017-07-01 15:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-01 15:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[WARN][2017-07-01 15:43:04] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-2 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 15:43:04] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-10 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 15:43:05] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-5 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 15:43:05] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 15:43:06] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-07-01 15:43:06] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-4 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-07-01 15:43:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:43:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 15:43:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:
 
[INFO][2017-07-01 15:43:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:43:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 15:43:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 15:43:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 15:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:41
参数3:41
 
[INFO][2017-07-01 15:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:43:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:41
参数3:41
 
[INFO][2017-07-01 15:43:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:43:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:43:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-01 15:43:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 15:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 15:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 15:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-01 15:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 15:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 15:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 15:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 15:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 15:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 15:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 15:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:47:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 15:47:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:47:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:47:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:47:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:47:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:47:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:47:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:47:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:47:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:47:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 15:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 15:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 15:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 15:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 15:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:
 
[INFO][2017-07-01 15:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 15:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 15:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:30
参数3:30
 
[INFO][2017-07-01 15:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 15:47:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:30
参数3:30
 
[INFO][2017-07-01 15:47:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:47:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:46
参数3:46
 
[INFO][2017-07-01 15:47:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:47:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:46
参数3:46
 
[INFO][2017-07-01 15:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:45
参数3:45
 
[INFO][2017-07-01 15:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:45
参数3:45
 
[INFO][2017-07-01 15:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:41
参数3:41
 
[INFO][2017-07-01 15:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:41
参数3:41
 
[INFO][2017-07-01 15:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:47
参数3:47
 
[INFO][2017-07-01 15:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:47
参数3:47
 
[INFO][2017-07-01 15:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:48
参数3:48
 
[INFO][2017-07-01 15:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 15:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:48
参数3:48
 
[INFO][2017-07-01 15:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:42
参数3:42
 
[INFO][2017-07-01 15:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:47:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:42
参数3:42
 
[INFO][2017-07-01 15:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:41
参数3:41
 
[INFO][2017-07-01 15:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:47:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:41
参数3:41
 
[INFO][2017-07-01 15:47:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:47:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:43
参数3:43
 
[INFO][2017-07-01 15:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:43
参数3:43
 
[INFO][2017-07-01 15:47:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:47:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:44
参数3:44
 
[INFO][2017-07-01 15:47:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 15:47:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:44
参数3:44
 
[INFO][2017-07-01 15:47:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:47:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:47:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-01 15:47:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:47:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 15:47:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:47:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-01 15:47:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 15:51:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-01 15:51:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:9001
 
[INFO][2017-07-01 15:51:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-01 15:51:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:9001
 
[INFO][2017-07-01 15:51:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:51:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 15:51:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-01 15:51:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:9001
 
[INFO][2017-07-01 15:51:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-01 15:51:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:9001
 
[INFO][2017-07-01 15:51:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:51:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:51:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-01 15:51:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:51:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:51:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:51:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 15:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 15:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:51:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 15:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 15:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 15:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:51:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:51:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:51:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-01 15:51:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:51:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 15:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-01 15:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:9001
 
[INFO][2017-07-01 15:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-01 15:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:9001
 
[INFO][2017-07-01 15:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 15:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-01 15:52:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:52:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:52:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 15:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 15:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 15:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 15:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 15:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 15:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-07-01 15:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 15:56:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:56:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:56:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:56:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:56:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:56:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:
 
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:57:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:57:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 15:57:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 16:03:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:03:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:03:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-01 16:03:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:03:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 16:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 16:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 16:04:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 16:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:24
 
[INFO][2017-07-01 16:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-01 16:04:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:24
 
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:04:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:04:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:04:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 16:04:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:04:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 16:04:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 16:04:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 16:05:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-01 16:05:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 16:05:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:05:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 16:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:05:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:18
 
[INFO][2017-07-01 16:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:05:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:18
 
[INFO][2017-07-01 16:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 16:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ) 
[INFO][2017-07-01 16:05:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 16:05:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:05:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:29
 
[INFO][2017-07-01 16:05:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:05:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:29
 
[INFO][2017-07-01 16:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:34
 
[INFO][2017-07-01 16:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE  (
                         c.class_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:05:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:34
 
[INFO][2017-07-01 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 16:05:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 16:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:19
 
[INFO][2017-07-01 16:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 16:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:19
 
[INFO][2017-07-01 16:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:16
 
[INFO][2017-07-01 16:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:05:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:16
 
[INFO][2017-07-01 16:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
参数2:10
 
[INFO][2017-07-01 16:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 16:05:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
参数2:10
 
[INFO][2017-07-01 16:06:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:06:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:06:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:06:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:06:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 16:06:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:06:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:06:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:06:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:06:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 16:06:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:06:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-01 16:06:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:06:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 16:06:57] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:96) http-nio-8001-exec-6 I/O exception (org.apache.http.NoHttpResponseException) caught when processing request to {}->http://v2.openapi.ele.me:80: The target server failed to respond 
[INFO][2017-07-01 16:06:57] org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:112) http-nio-8001-exec-6 Retrying request to {}->http://v2.openapi.ele.me:80 
[INFO][2017-07-01 16:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:19:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:19:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:20:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-01 16:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:20:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 16:21:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:21:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:21:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 16:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-01 16:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 16:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ? 
[INFO][2017-07-01 16:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 16:28:02] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 14:30:56 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 16:28:02] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-01 16:28:02] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-01 16:28:02] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 01 14:30:53 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 16:28:02] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-01 16:28:15] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-01 16:28:15] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 01 16:28:15 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 16:28:15] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-01 16:28:15] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-01 16:28:16] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-01 16:28:16] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-01 16:28:18] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 16:28:18] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2762 ms 
[INFO][2017-07-01 16:28:18] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-01 16:28:18] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 16:28:18 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 16:28:18] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-01 16:28:19] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 16:28:18 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 16:28:20] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-01 16:28:21] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 16:28:21] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-63378-1498897701253-1:1,clientId=null,started=false} 
[INFO][2017-07-01 16:28:21] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-01 16:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-01 16:28:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-01 16:28:21] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3530 ms 
[INFO][2017-07-01 16:28:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-01 16:28:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-01 16:28:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:28:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-01 16:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-01 16:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-01 16:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:378
参数2:1032
 
[INFO][2017-07-01 16:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-01 16:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-01 16:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:28:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-01 16:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-01 16:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-01 16:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-01 16:28:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-01 16:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-01 16:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:9
参数2:2017-07-01
参数3:2017-07-01
参数4:9
参数5:2017-07-01
参数6:2017-07-01
参数7:9
参数8:2017-07-01
参数9:2017-07-01
参数10:9
参数11:2017-07-01
参数12:2017-07-01
参数13:9
参数14:2017-07-01
参数15:2017-07-01
参数16:9
参数17:2017-07-01
参数18:2017-07-01
 
[INFO][2017-07-01 16:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-01 16:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2017-07-01
参数2:2017-07-01
参数3:9
参数4:2017-06-30
参数5:2017-06-30
参数6:9
参数7:2017-06-24
参数8:2017-06-24
参数9:9
 
[INFO][2017-07-01 16:28:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:28:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:28:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:28:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:28:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:28:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:28:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 16:28:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:28:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 16:28:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:28:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 16:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-01 16:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 16:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 16:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:28:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-01 16:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 16:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-01 16:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 16:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[WARN][2017-07-01 16:31:21] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-9 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-07-01 16:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:31:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 16:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 16:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 16:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 16:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:31:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 16:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 16:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 16:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 16:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 16:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 16:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 16:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 16:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:
 
[INFO][2017-07-01 16:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 16:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:31:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 16:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 16:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 16:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 16:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 16:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 16:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:32:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 16:32:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:32:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 16:32:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:32:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 16:32:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:32:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 16:32:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 16:32:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:32:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:32:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:32:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:32:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-01 16:32:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:32:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 16:32:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?)  tmp_count 
[INFO][2017-07-01 16:32:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-01 16:32:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-01 16:32:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-01 16:32:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?)  tmp_count 
[INFO][2017-07-01 16:32:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 16:32:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 16:32:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 16:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 16:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 16:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 16:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 16:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 16:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 16:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 16:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 16:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 16:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 16:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1227280992
 
[INFO][2017-07-01 16:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 16:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 16:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 16:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 16:32:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?)  tmp_count 
[INFO][2017-07-01 16:32:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 16:32:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 16:32:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 16:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:32:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:32:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-01 16:32:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:32:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 16:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 16:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 16:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:32:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:
 
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:33:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 16:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 16:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 16:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 16:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:
 
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 16:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:29
参数3:29
 
[INFO][2017-07-01 16:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?  OR
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:44:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:29
参数3:29
 
[INFO][2017-07-01 16:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:
 
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 16:46:58] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 16:28:18 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 16:46:58] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-01 16:46:59] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-01 16:46:59] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 01 16:28:15 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 16:46:59] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-01 16:47:12] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-01 16:47:12] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 01 16:47:12 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 16:47:12] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-01 16:47:12] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-01 16:47:12] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-01 16:47:12] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-01 16:47:14] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 16:47:14] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2730 ms 
[INFO][2017-07-01 16:47:14] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-01 16:47:14] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 16:47:14 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 16:47:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-01 16:47:16] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:47:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:47:17] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 16:47:14 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 16:47:17] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-01 16:47:17] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 16:47:17] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-63962-1498898837838-1:1,clientId=null,started=false} 
[INFO][2017-07-01 16:47:18] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-01 16:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-01 16:47:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-01 16:47:18] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3734 ms 
[INFO][2017-07-01 16:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-01 16:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-01 16:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-01 16:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-01 16:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-01 16:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:378
参数2:1032
 
[INFO][2017-07-01 16:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-01 16:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-01 16:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-01 16:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-01 16:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-01 16:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-01 16:47:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-01 16:47:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-01 16:47:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:9
参数2:2017-07-01
参数3:2017-07-01
参数4:9
参数5:2017-07-01
参数6:2017-07-01
参数7:9
参数8:2017-07-01
参数9:2017-07-01
参数10:9
参数11:2017-07-01
参数12:2017-07-01
参数13:9
参数14:2017-07-01
参数15:2017-07-01
参数16:9
参数17:2017-07-01
参数18:2017-07-01
 
[INFO][2017-07-01 16:47:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-01 16:47:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2017-07-01
参数2:2017-07-01
参数3:9
参数4:2017-06-30
参数5:2017-06-30
参数6:9
参数7:2017-06-24
参数8:2017-06-24
参数9:9
 
[INFO][2017-07-01 16:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:47:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 16:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 16:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 16:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 16:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 16:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 16:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 16:47:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:
 
[INFO][2017-07-01 16:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 16:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:47:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 16:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:
 
[INFO][2017-07-01 16:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 16:47:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:
 
[INFO][2017-07-01 16:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:
 
[INFO][2017-07-01 16:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 16:47:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:
 
[INFO][2017-07-01 16:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:
 
[INFO][2017-07-01 16:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 16:47:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:
 
[INFO][2017-07-01 16:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:42
参数3:42
 
[INFO][2017-07-01 16:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 16:47:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:42
参数3:42
 
[INFO][2017-07-01 16:47:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:47:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:44
参数3:44
 
[INFO][2017-07-01 16:47:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 16:47:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:44
参数3:44
 
[INFO][2017-07-01 16:47:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:47:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:46
参数3:46
 
[INFO][2017-07-01 16:47:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 16:47:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:46
参数3:46
 
[INFO][2017-07-01 16:47:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:47:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:47
参数3:47
 
[INFO][2017-07-01 16:47:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 16:47:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:47
参数3:47
 
[INFO][2017-07-01 16:47:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:47:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:48
参数3:48
 
[INFO][2017-07-01 16:47:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 16:47:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:48
参数3:48
 
[INFO][2017-07-01 16:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:44
参数3:44
 
[INFO][2017-07-01 16:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 16:47:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:44
参数3:44
 
[INFO][2017-07-01 16:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:52:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 16:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 16:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 16:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 16:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 16:52:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getPageRecord: 
select count(0) from (select * from  cds_brand)  tmp_count 
[INFO][2017-07-01 16:52:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 16:52:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getPageRecord: 
select tmp.* from (select (row_number() Over(order by brand_id asc)) as rownumber, * from  cds_brand) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-01 16:52:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 16:52:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:52:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:52:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:52:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:52:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:52:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:
 
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 16:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:52:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:
 
[INFO][2017-07-01 16:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 16:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:
 
[INFO][2017-07-01 16:54:07] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 16:47:14 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 16:54:07] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-01 16:54:08] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-01 16:54:08] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 01 16:47:12 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 16:54:08] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-01 16:54:20] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-01 16:54:20] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 01 16:54:20 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 16:54:20] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-01 16:54:20] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-01 16:54:21] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-01 16:54:21] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-01 16:54:23] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 16:54:23] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2646 ms 
[INFO][2017-07-01 16:54:23] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-01 16:54:23] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 16:54:23 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 16:54:23] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-01 16:54:24] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 16:54:23 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 16:54:25] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-01 16:54:26] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 16:54:26] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-64185-1498899266432-1:1,clientId=null,started=false} 
[INFO][2017-07-01 16:54:26] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-01 16:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-01 16:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-01 16:54:27] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3764 ms 
[INFO][2017-07-01 16:54:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-01 16:54:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:chenbin
 
[INFO][2017-07-01 16:54:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:54:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:351
参数2:1032
 
[INFO][2017-07-01 16:54:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:54:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:352
参数2:1032
 
[INFO][2017-07-01 16:54:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:54:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:376
参数2:1032
 
[INFO][2017-07-01 16:54:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:54:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:378
参数2:1032
 
[INFO][2017-07-01 16:54:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:54:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:353
参数2:1032
 
[INFO][2017-07-01 16:54:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:54:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:372
参数2:1032
 
[INFO][2017-07-01 16:54:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:54:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:354
参数2:1032
 
[INFO][2017-07-01 16:54:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:54:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:355
参数2:1032
 
[INFO][2017-07-01 16:54:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 16:54:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:356
参数2:1032
 
[INFO][2017-07-01 16:54:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-01 16:54:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:9
 
[INFO][2017-07-01 16:54:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-01 16:54:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:9
参数2:2017-07-01
参数3:2017-07-01
参数4:9
参数5:2017-07-01
参数6:2017-07-01
参数7:9
参数8:2017-07-01
参数9:2017-07-01
参数10:9
参数11:2017-07-01
参数12:2017-07-01
参数13:9
参数14:2017-07-01
参数15:2017-07-01
参数16:9
参数17:2017-07-01
参数18:2017-07-01
 
[INFO][2017-07-01 16:54:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-01 16:54:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2017-07-01
参数2:2017-07-01
参数3:9
参数4:2017-06-30
参数5:2017-06-30
参数6:9
参数7:2017-06-24
参数8:2017-06-24
参数9:9
 
[INFO][2017-07-01 16:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:54:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:
 
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:54:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 16:54:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:54:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:3
 
[INFO][2017-07-01 16:54:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 16:54:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:3
 
[INFO][2017-07-01 16:54:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:54:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:3
 
[INFO][2017-07-01 16:54:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 16:54:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:3
 
[INFO][2017-07-01 16:55:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:55:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:3
 
[INFO][2017-07-01 16:55:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 16:55:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:3
 
[INFO][2017-07-01 16:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 16:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 16:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 16:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 16:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:56:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 16:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 16:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 16:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 16:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 16:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 16:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 16:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 16:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 16:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 16:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:
 
[INFO][2017-07-01 16:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 16:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 16:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 16:57:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 16:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 16:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:3
 
[INFO][2017-07-01 16:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 16:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:3
 
[INFO][2017-07-01 17:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 17:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:13:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 17:13:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:13:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:13:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 17:13:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:13:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:13:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:13:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 17:13:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:13:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:13:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:13:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:13:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-01 17:13:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:13:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:13:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:13:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 17:13:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:13:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:13:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:13:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:13:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:13:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:13:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:13:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:13:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:13:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:13:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:13:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:13:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:13:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 17:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:
 
[INFO][2017-07-01 17:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:13:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 17:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:46
参数3:3
 
[INFO][2017-07-01 17:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:13:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:46
参数3:3
 
[INFO][2017-07-01 17:13:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:13:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:47
参数3:3
 
[INFO][2017-07-01 17:13:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:13:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:47
参数3:3
 
[INFO][2017-07-01 17:13:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:13:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:13:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:13:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:13:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:13:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:13:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:13:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:43
参数3:3
 
[INFO][2017-07-01 17:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:13:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:43
参数3:3
 
[INFO][2017-07-01 17:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:44
参数3:3
 
[INFO][2017-07-01 17:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:13:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:44
参数3:3
 
[INFO][2017-07-01 17:13:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:13:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:45
参数3:3
 
[INFO][2017-07-01 17:13:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:13:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:45
参数3:3
 
[INFO][2017-07-01 17:13:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:13:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:46
参数3:3
 
[INFO][2017-07-01 17:13:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:13:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:46
参数3:3
 
[INFO][2017-07-01 17:13:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:13:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:47
参数3:3
 
[INFO][2017-07-01 17:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:13:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:47
参数3:3
 
[INFO][2017-07-01 17:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:13:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:13:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:13:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:13:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:13:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:13:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:13:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:13:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:13:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:14:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:14:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:14:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:14:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:47
参数3:3
 
[INFO][2017-07-01 17:14:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:14:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:47
参数3:3
 
[INFO][2017-07-01 17:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:47
参数3:3
 
[INFO][2017-07-01 17:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:14:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:47
参数3:3
 
[INFO][2017-07-01 17:14:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:14:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:47
参数3:3
 
[INFO][2017-07-01 17:14:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:14:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:47
参数3:3
 
[INFO][2017-07-01 17:14:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:14:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:46
参数3:3
 
[INFO][2017-07-01 17:14:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:14:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:46
参数3:3
 
[INFO][2017-07-01 17:14:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:14:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:47
参数3:3
 
[INFO][2017-07-01 17:14:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:14:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:47
参数3:3
 
[INFO][2017-07-01 17:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:14:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:14:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:14:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:14:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:14:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:14:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:14:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:14:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:14:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:14:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:14:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:14:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:14:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:16:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:
 
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:16:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:16:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:16:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:3
参数3:2
 
[INFO][2017-07-01 17:16:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:16:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:3
参数3:2
 
[INFO][2017-07-01 17:16:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:16:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 17:16:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:16:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 17:16:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:16:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 17:16:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:16:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 17:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:43
参数3:3
 
[INFO][2017-07-01 17:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:43
参数3:3
 
[INFO][2017-07-01 17:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:17:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:17:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:17:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:17:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 17:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 17:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:18:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-01 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:18:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 17:18:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-01 17:18:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:9001
 
[INFO][2017-07-01 17:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-01 17:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:9001
 
[INFO][2017-07-01 17:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-01 17:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:18:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:18:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:18:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:18:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:18:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:18:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:18:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:18:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 17:18:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:18:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:18:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:18:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:
 
[INFO][2017-07-01 17:18:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:18:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 17:18:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:18:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:23:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:23:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 17:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 17:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 17:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-07-01 17:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 17:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 17:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 17:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-01 17:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 17:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 17:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 17:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 17:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 17:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 17:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 17:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 17:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 17:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 17:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 17:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1227280992
 
[INFO][2017-07-01 17:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 17:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 17:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 17:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 17:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (47,46,45,44,43,42,41))  tmp_count 
[INFO][2017-07-01 17:24:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 17:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (47,46,45,44,43,42,41)) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:24:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 17:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:24:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:24:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 17:28:14] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 16:54:23 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 17:28:14] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-01 17:28:14] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-01 17:28:15] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 01 16:54:20 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 17:28:15] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[WARN][2017-07-01 17:28:15] org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:251) ActiveMQ Transport: tcp:///127.0.0.1:61616@64186 Transport (tcp://127.0.0.1:61616) failed, reason:  java.io.EOFException, not attempting to automatically reconnect 
[INFO][2017-07-01 17:28:29] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-01 17:28:29] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Sat Jul 01 17:28:29 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 17:28:29] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-01 17:28:29] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-01 17:28:29] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-01 17:28:30] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-01 17:28:32] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 17:28:32] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2857 ms 
[INFO][2017-07-01 17:28:32] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-01 17:28:32] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 17:28:32 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 17:28:32] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-01 17:28:33] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 17:28:32 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 17:28:34] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-01 17:28:35] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-01 17:28:35] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-50179-1498901315246-1:1,clientId=null,started=false} 
[INFO][2017-07-01 17:28:35] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-01 17:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-01 17:28:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-01 17:28:35] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3720 ms 
[INFO][2017-07-01 17:28:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-01 17:28:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:chenbin
 
[INFO][2017-07-01 17:28:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 17:28:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:351
参数2:1032
 
[INFO][2017-07-01 17:28:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 17:28:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:352
参数2:1032
 
[INFO][2017-07-01 17:28:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 17:28:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:376
参数2:1032
 
[INFO][2017-07-01 17:28:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 17:28:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:378
参数2:1032
 
[INFO][2017-07-01 17:28:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 17:28:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:353
参数2:1032
 
[INFO][2017-07-01 17:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 17:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:372
参数2:1032
 
[INFO][2017-07-01 17:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 17:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:354
参数2:1032
 
[INFO][2017-07-01 17:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 17:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:355
参数2:1032
 
[INFO][2017-07-01 17:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-01 17:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:356
参数2:1032
 
[INFO][2017-07-01 17:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-01 17:28:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:9
 
[INFO][2017-07-01 17:28:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-01 17:28:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:9
参数2:2017-07-01
参数3:2017-07-01
参数4:9
参数5:2017-07-01
参数6:2017-07-01
参数7:9
参数8:2017-07-01
参数9:2017-07-01
参数10:9
参数11:2017-07-01
参数12:2017-07-01
参数13:9
参数14:2017-07-01
参数15:2017-07-01
参数16:9
参数17:2017-07-01
参数18:2017-07-01
 
[INFO][2017-07-01 17:28:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-01 17:28:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2017-07-01
参数2:2017-07-01
参数3:9
参数4:2017-06-30
参数5:2017-06-30
参数6:9
参数7:2017-06-24
参数8:2017-06-24
参数9:9
 
[INFO][2017-07-01 17:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 17:28:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:28:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-01 17:29:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:29:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:29:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:29:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:29:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:29:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:
 
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:29:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:29:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:29:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 17:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:
 
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:29:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 17:30:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:30:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:30:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:30:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:30:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:30:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:
 
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:30:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 17:31:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:31:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:31:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:31:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:31:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:31:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:31:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:31:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:31:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:31:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:31:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:31:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:31:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:31:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:31:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:
 
[INFO][2017-07-01 17:31:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:31:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:32:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:32:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:32:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:32:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:32:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:32:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:32:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:32:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:32:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:32:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:32:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:32:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:
 
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:32:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 17:33:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:33:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:33:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:33:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:33:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:33:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:
 
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:33:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:33:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:33:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:33:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:33:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:33:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:
 
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:33:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:33:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:33:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:33:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getPageRecord: 
select count(0) from (select * from  cds_brand)  tmp_count 
[INFO][2017-07-01 17:33:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:33:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getPageRecord: 
select tmp.* from (select (row_number() Over(order by brand_id asc)) as rownumber, * from  cds_brand) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-01 17:33:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:33:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-01 17:33:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:9001
 
[INFO][2017-07-01 17:33:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-01 17:33:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:9001
 
[INFO][2017-07-01 17:33:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:33:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-01 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:33:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:
 
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:33:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 17:33:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:33:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 17:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:33:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:34:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:34:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:34:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:34:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:34:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 17:34:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:34:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:34:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:
 
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:34:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 17:34:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:34:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:3a
 
[INFO][2017-07-01 17:34:25] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) http-nio-8001-exec-1 Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
[INFO][2017-07-01 17:34:25] org.springframework.jdbc.support.SQLErrorCodesFactory.<init>(SQLErrorCodesFactory.java:127) http-nio-8001-exec-1 SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
[WARN][2017-07-01 17:34:25] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 '3a' 转换成数据类型 int 时失败。
### The error may exist in file [G:\work2\AppServerAPI2\web\WEB-INF\classes\sqlserver\cds_stores.xml]
### The error may involve cds_stores.GetGoodsInfoLists-Inline
### The error occurred while setting parameters
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 '3a' 转换成数据类型 int 时失败。
; uncategorized SQLException for SQL []; SQL state [S0001]; error code [245]; 在将 nvarchar 值 '3a' 转换成数据类型 int 时失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 在将 nvarchar 值 '3a' 转换成数据类型 int 时失败。 
[INFO][2017-07-01 17:34:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:34:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:34:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:34:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:34:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:34:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:34:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:34:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:34:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:34:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:34:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:34:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:34:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:34:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 17:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 17:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:
 
[INFO][2017-07-01 17:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 17:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:34:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 17:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:35:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:36:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:36:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:36:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:36:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:36:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:36:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:36:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:36:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:36:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:36:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 17:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:
 
[INFO][2017-07-01 17:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:36:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 17:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-01 17:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:9001
 
[INFO][2017-07-01 17:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-01 17:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:9001
 
[INFO][2017-07-01 17:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-01 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:36:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:
 
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:37:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:37:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:37:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:37:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:37:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:37:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:37:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:37:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:37:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:37:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:37:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:37:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:37:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:37:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:37:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:37:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 17:37:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:37:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 17:37:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:37:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 17:37:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:37:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:
 
[INFO][2017-07-01 17:37:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:37:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 17:37:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:37:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:3
 
[INFO][2017-07-01 17:37:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:37:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:3
 
[INFO][2017-07-01 17:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:39:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 17:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:39:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:
 
[INFO][2017-07-01 17:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 17:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:39:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:39:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:39:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:3
 
[INFO][2017-07-01 17:39:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:39:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:3
 
[INFO][2017-07-01 17:39:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:39:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:2
 
[INFO][2017-07-01 17:39:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:39:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:2
 
[INFO][2017-07-01 17:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:3
参数3:2
 
[INFO][2017-07-01 17:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:39:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:3
参数3:2
 
[INFO][2017-07-01 17:39:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:39:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 17:39:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:39:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:3
参数3:3
 
[INFO][2017-07-01 17:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:39:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:39:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:39:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:39:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:39:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:46
参数3:3
 
[INFO][2017-07-01 17:39:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:39:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:46
参数3:3
 
[INFO][2017-07-01 17:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:47
参数3:3
 
[INFO][2017-07-01 17:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:47
参数3:3
 
[INFO][2017-07-01 17:39:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:39:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:39:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:39:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:39:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:39:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:40:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.insertRecord: 
INSERT INTO cds_goods_info(
          
            class_id
         , 
            good_name
         , 
            pinxin
         , 
            good_pic
         , 
            egood_pic
         , 
            add_date
         , 
            status
         , 
            listorder
         , 
            default_standrad_id
         , 
            good_info
         , 
            market_price
         , 
            box_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-01 17:40:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:43
参数2:火山飞雪
参数3:HSFX
参数4:null
参数5:null
参数6:2017-07-01 17:40:18
参数7:1
参数8:1
参数9:null
参数10:白糖腌制西红柿
参数11:30.00
参数12:2.00
 
[INFO][2017-07-01 17:40:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:40:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:40:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:40:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:40:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:40:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:40:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:40:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:48
参数3:3
 
[INFO][2017-07-01 17:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 17:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:48
参数3:3
参数4:h
参数5:h
 
[INFO][2017-07-01 17:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 17:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:48
参数3:3
参数4:h
参数5:h
 
[INFO][2017-07-01 17:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ) 
[INFO][2017-07-01 17:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:48
参数3:3
参数4:h
参数5:h
 
[INFO][2017-07-01 17:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ) 
[INFO][2017-07-01 17:40:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:48
参数3:3
参数4:h
参数5:h
 
[INFO][2017-07-01 17:40:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:40:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:48
参数3:2
 
[INFO][2017-07-01 17:40:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:40:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:48
参数3:2
 
[INFO][2017-07-01 17:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 17:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 17:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 17:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:h
参数3:h
 
[INFO][2017-07-01 17:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 17:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:h
参数3:h
 
[INFO][2017-07-01 17:40:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:40:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:h
参数3:h
 
[INFO][2017-07-01 17:40:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:40:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:40:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:40:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:h
参数3:h
 
[INFO][2017-07-01 17:40:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 17:40:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:hs
参数3:hs
 
[INFO][2017-07-01 17:40:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-07-01 17:40:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:hs
参数3:hs
 
[INFO][2017-07-01 17:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 17:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:3
参数3:hs
参数4:hs
 
[INFO][2017-07-01 17:40:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:40:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:3
参数3:hs
参数4:hs
 
[INFO][2017-07-01 17:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 17:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:48
参数3:3
参数4:hs
参数5:hs
 
[INFO][2017-07-01 17:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ) 
[INFO][2017-07-01 17:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:48
参数3:3
参数4:hs
参数5:hs
 
[INFO][2017-07-01 17:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 17:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:47
参数3:3
参数4:hs
参数5:hs
 
[INFO][2017-07-01 17:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ) 
[INFO][2017-07-01 17:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
参数2:47
参数3:3
参数4:hs
参数5:hs
 
[INFO][2017-07-01 17:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 17:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:46
参数3:3
参数4:hs
参数5:hs
 
[INFO][2017-07-01 17:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ) 
[INFO][2017-07-01 17:41:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:46
参数3:3
参数4:hs
参数5:hs
 
[INFO][2017-07-01 17:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 17:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:45
参数3:3
参数4:hs
参数5:hs
 
[INFO][2017-07-01 17:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ) 
[INFO][2017-07-01 17:41:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:45
参数3:3
参数4:hs
参数5:hs
 
[INFO][2017-07-01 17:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 17:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:41
参数3:3
参数4:hs
参数5:hs
 
[INFO][2017-07-01 17:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ) 
[INFO][2017-07-01 17:41:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:41
参数3:3
参数4:hs
参数5:hs
 
[INFO][2017-07-01 17:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 17:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:41
参数3:3
参数4:hs
参数5:hs
 
[INFO][2017-07-01 17:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ) 
[INFO][2017-07-01 17:41:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:41
参数3:3
参数4:hs
参数5:hs
 
[INFO][2017-07-01 17:41:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 17:41:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:41
参数3:3
参数4:hs
参数5:hs
 
[INFO][2017-07-01 17:41:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ) 
[INFO][2017-07-01 17:41:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:41
参数3:3
参数4:hs
参数5:hs
 
[INFO][2017-07-01 17:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ))  tmp_count 
[INFO][2017-07-01 17:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:48
参数3:3
参数4:hs
参数5:hs
 
[INFO][2017-07-01 17:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )
                
            

            
                
                    AND (
                        a.good_name LIKE '%'+?+'%' OR
                        a.pinxin LIKE '%'+?+'%'
                      ) 
[INFO][2017-07-01 17:41:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:48
参数3:3
参数4:hs
参数5:hs
 
[INFO][2017-07-01 17:41:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:41:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:48
参数2:3
 
[INFO][2017-07-01 17:41:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:41:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:48
参数2:3
 
[INFO][2017-07-01 17:41:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:41:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:48
参数2:3
 
[INFO][2017-07-01 17:41:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:41:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:48
参数2:3
 
[INFO][2017-07-01 17:41:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:41:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:42
参数2:3
 
[INFO][2017-07-01 17:41:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:41:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:42
参数2:3
 
[INFO][2017-07-01 17:41:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:41:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:43
参数2:3
 
[INFO][2017-07-01 17:41:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:41:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:43
参数2:3
 
[INFO][2017-07-01 17:41:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:41:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:44
参数2:3
 
[INFO][2017-07-01 17:41:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:41:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:44
参数2:3
 
[INFO][2017-07-01 17:41:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:41:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:46
参数2:3
 
[INFO][2017-07-01 17:41:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:41:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:46
参数2:3
 
[INFO][2017-07-01 17:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:47
参数2:3
 
[INFO][2017-07-01 17:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:47
参数2:3
 
[INFO][2017-07-01 17:41:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:41:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:47
参数2:3
 
[INFO][2017-07-01 17:41:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:41:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:47
参数2:3
 
[INFO][2017-07-01 17:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:48
参数2:3
 
[INFO][2017-07-01 17:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:48
参数2:3
 
[INFO][2017-07-01 17:41:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:41:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:48
参数2:3
 
[INFO][2017-07-01 17:41:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:41:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:48
参数2:3
 
[INFO][2017-07-01 17:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:43
参数2:3
 
[INFO][2017-07-01 17:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:43
参数2:3
 
[INFO][2017-07-01 17:42:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:42:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:41
参数2:3
 
[INFO][2017-07-01 17:42:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:42:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:41
参数2:3
 
[INFO][2017-07-01 17:42:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:42:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:41
参数2:3
 
[INFO][2017-07-01 17:42:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:42:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:41
参数2:3
 
[INFO][2017-07-01 17:42:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:42:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:41
参数2:3
 
[INFO][2017-07-01 17:42:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:42:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:41
参数2:3
 
[INFO][2017-07-01 17:42:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:42:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:35
参数2:2
 
[INFO][2017-07-01 17:42:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 12 
[INFO][2017-07-01 17:42:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:35
参数2:2
 
[INFO][2017-07-01 17:42:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:42:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:35
参数2:3
 
[INFO][2017-07-01 17:42:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:42:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:35
参数2:3
 
[INFO][2017-07-01 17:42:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:42:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:45
参数2:3
 
[INFO][2017-07-01 17:42:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:42:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:45
参数2:3
 
[INFO][2017-07-01 17:42:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:42:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:42
参数2:3
 
[INFO][2017-07-01 17:42:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:42:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:42
参数2:3
 
[INFO][2017-07-01 17:42:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:42:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:42:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsClassLists: 
select count(0) from (select * from  cds_class)  tmp_count 
[INFO][2017-07-01 17:42:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:42:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsClassLists: 
select tmp.* from (select (row_number() Over(order by listorder asc)) as rownumber, * from  cds_class) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:42:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:
 
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:43:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 17:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-01 17:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:9001
 
[INFO][2017-07-01 17:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-01 17:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:9001
 
[INFO][2017-07-01 17:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-01 17:43:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:43:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-01 17:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:9001
 
[INFO][2017-07-01 17:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-01 17:43:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:9001
 
[INFO][2017-07-01 17:43:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:43:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:43:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-01 17:43:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:43:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:43:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_chufan_task
             


         WHERE stores_id = ? 
         
            ORDER BY es_id 
[INFO][2017-07-01 17:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:null
 
[INFO][2017-07-01 17:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


         WHERE status = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-01 17:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 17:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_kefu.getClassType: 
select class_name,class_id from cds_class_type 
[INFO][2017-07-01 17:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_kefu.getClass: 
select class_name,class_id,class_nick_name from cds_class 
[INFO][2017-07-01 17:43:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:43:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_kefu.getUsers: 
select user_login,id,user_nicename from cds_users 
[INFO][2017-07-01 17:43:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:43:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:43:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 17:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:43:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 17:43:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:43:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:
 
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:43:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 17:43:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:43:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:43:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getPageRecord: 
select count(0) from (select * from  cds_brand)  tmp_count 
[INFO][2017-07-01 17:43:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:43:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getPageRecord: 
select tmp.* from (select (row_number() Over(order by brand_id asc)) as rownumber, * from  cds_brand) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-01 17:43:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:43:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:43:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:43:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:43:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:43:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:43:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:43:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 17:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:
 
[INFO][2017-07-01 17:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 17:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:43:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:43:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:43:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:43:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:43:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:43:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsClassLists: 
select count(0) from (select * from  cds_class)  tmp_count 
[INFO][2017-07-01 17:43:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:43:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsClassLists: 
select tmp.* from (select (row_number() Over(order by listorder asc)) as rownumber, * from  cds_class) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:43:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:44:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 17:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:
 
[INFO][2017-07-01 17:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:44:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 17:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:44:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:44:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:44:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:44:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:44:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:44:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:44:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:44:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:45:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 17:45:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:45:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 17:45:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:45:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:45:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-01 17:45:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:45:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:45:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:45:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:45:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:45:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 17:45:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:45:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:45:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:45:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:45:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:45:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:45:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:45:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:45:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:45:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 17:45:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:45:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 17:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:
 
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:3
 
[INFO][2017-07-01 17:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-01 17:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:3
 
[INFO][2017-07-01 17:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
                
                    AND (
                         a.class_id = ?
                      )
                
            
            
                
                    AND (
                         c.brand_id = ?
                      ) 
[INFO][2017-07-01 17:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:41
参数3:3
 
[INFO][2017-07-01 17:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:3
 
[INFO][2017-07-01 17:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-01 17:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:3
 
[INFO][2017-07-01 17:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.insertRecord: 
INSERT INTO cds_goods_info(
          
            class_id
         , 
            good_name
         , 
            pinxin
         , 
            good_pic
         , 
            egood_pic
         , 
            add_date
         , 
            status
         , 
            listorder
         , 
            default_standrad_id
         , 
            good_info
         , 
            market_price
         , 
            box_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-01 17:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:43
参数2:十里春分
参数3:SLCF
参数4:null
参数5:null
参数6:2017-07-01 17:46:58
参数7:1
参数8:1
参数9:null
参数10:春风十里不如睡你
参数11:3000.00
参数12:300.00
 
[INFO][2017-07-01 17:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:3
 
[INFO][2017-07-01 17:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-01 17:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:3
 
[INFO][2017-07-01 17:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 17:47:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1290
 
[INFO][2017-07-01 17:47:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.updateRecord: 
UPDATE cds_goods_info
         SET class_id = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_pic = ?
            ,
                egood_pic = ?
            ,
                status = ?
            ,
                default_standrad_id = ?
            ,
                good_info = ?
            ,
                market_price = ?
            ,
                box_price = ? 
         WHERE good_id = ? 
[INFO][2017-07-01 17:47:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:43
参数2:十里春风
参数3:SLCF
参数4:null
参数5:null
参数6:1
参数7:null
参数8:春风十里不如睡你
参数9:3000.00
参数10:300.00
参数11:1290
 
[INFO][2017-07-01 17:47:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:47:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:3
 
[INFO][2017-07-01 17:47:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-01 17:47:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:3
 
[INFO][2017-07-01 17:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.insertRecord: 
INSERT INTO cds_goods_info(
          
            class_id
         , 
            good_name
         , 
            pinxin
         , 
            good_pic
         , 
            egood_pic
         , 
            add_date
         , 
            status
         , 
            listorder
         , 
            default_standrad_id
         , 
            good_info
         , 
            market_price
         , 
            box_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-01 17:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:42
参数2:南方菇凉
参数3:NFGL
参数4:null
参数5:null
参数6:2017-07-01 17:48:00
参数7:1
参数8:1
参数9:null
参数10:123654
参数11:2500.00
参数12:250.00
 
[INFO][2017-07-01 17:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:3
 
[INFO][2017-07-01 17:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-01 17:48:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:3
 
[INFO][2017-07-01 17:48:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.insertRecord: 
INSERT INTO cds_goods_info(
          
            class_id
         , 
            good_name
         , 
            pinxin
         , 
            good_pic
         , 
            egood_pic
         , 
            add_date
         , 
            status
         , 
            listorder
         , 
            default_standrad_id
         , 
            good_info
         , 
            market_price
         , 
            box_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-01 17:48:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:null
参数2:红烧熊掌
参数3:HSXZ
参数4:null
参数5:null
参数6:2017-07-01 17:48:41
参数7:1
参数8:1
参数9:null
参数10:null
参数11:2500.00
参数12:250.00
 
[WARN][2017-07-01 17:48:42] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-10 Resolved exception caused by Handler execution: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'class_id'，表 'caidashi.dbo.cds_goods_info'；列不允许有 Null 值。INSERT 失败。
### The error may involve baseSqlMap.insertRecord-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO cds_goods_info(                        class_id          ,              good_name          ,              pinxin          ,              good_pic          ,              egood_pic          ,              add_date          ,              status          ,              listorder          ,              default_standrad_id          ,              good_info          ,              market_price          ,              box_price                   ) VALUES(                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?                   )
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'class_id'，表 'caidashi.dbo.cds_goods_info'；列不允许有 Null 值。INSERT 失败。
; SQL []; 不能将值 NULL 插入列 'class_id'，表 'caidashi.dbo.cds_goods_info'；列不允许有 Null 值。INSERT 失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'class_id'，表 'caidashi.dbo.cds_goods_info'；列不允许有 Null 值。INSERT 失败。 
[INFO][2017-07-01 17:48:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.insertRecord: 
INSERT INTO cds_goods_info(
          
            class_id
         , 
            good_name
         , 
            pinxin
         , 
            good_pic
         , 
            egood_pic
         , 
            add_date
         , 
            status
         , 
            listorder
         , 
            default_standrad_id
         , 
            good_info
         , 
            market_price
         , 
            box_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-01 17:48:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:null
参数2:红烧熊掌
参数3:HSXZ
参数4:null
参数5:null
参数6:2017-07-01 17:48:56
参数7:1
参数8:1
参数9:null
参数10:22222
参数11:3500.00
参数12:350.00
 
[WARN][2017-07-01 17:48:56] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-3 Resolved exception caused by Handler execution: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'class_id'，表 'caidashi.dbo.cds_goods_info'；列不允许有 Null 值。INSERT 失败。
### The error may involve baseSqlMap.insertRecord-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO cds_goods_info(                        class_id          ,              good_name          ,              pinxin          ,              good_pic          ,              egood_pic          ,              add_date          ,              status          ,              listorder          ,              default_standrad_id          ,              good_info          ,              market_price          ,              box_price                   ) VALUES(                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?                   )
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'class_id'，表 'caidashi.dbo.cds_goods_info'；列不允许有 Null 值。INSERT 失败。
; SQL []; 不能将值 NULL 插入列 'class_id'，表 'caidashi.dbo.cds_goods_info'；列不允许有 Null 值。INSERT 失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'class_id'，表 'caidashi.dbo.cds_goods_info'；列不允许有 Null 值。INSERT 失败。 
[INFO][2017-07-01 17:48:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.insertRecord: 
INSERT INTO cds_goods_info(
          
            class_id
         , 
            good_name
         , 
            pinxin
         , 
            good_pic
         , 
            egood_pic
         , 
            add_date
         , 
            status
         , 
            listorder
         , 
            default_standrad_id
         , 
            good_info
         , 
            market_price
         , 
            box_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-01 17:48:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:null
参数2:红烧熊掌
参数3:HSXZ
参数4:null
参数5:null
参数6:2017-07-01 17:48:57
参数7:1
参数8:1
参数9:null
参数10:22222
参数11:3500.00
参数12:350.00
 
[WARN][2017-07-01 17:48:57] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-2 Resolved exception caused by Handler execution: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'class_id'，表 'caidashi.dbo.cds_goods_info'；列不允许有 Null 值。INSERT 失败。
### The error may involve baseSqlMap.insertRecord-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO cds_goods_info(                        class_id          ,              good_name          ,              pinxin          ,              good_pic          ,              egood_pic          ,              add_date          ,              status          ,              listorder          ,              default_standrad_id          ,              good_info          ,              market_price          ,              box_price                   ) VALUES(                        ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?                   )
### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'class_id'，表 'caidashi.dbo.cds_goods_info'；列不允许有 Null 值。INSERT 失败。
; SQL []; 不能将值 NULL 插入列 'class_id'，表 'caidashi.dbo.cds_goods_info'；列不允许有 Null 值。INSERT 失败。; nested exception is com.microsoft.sqlserver.jdbc.SQLServerException: 不能将值 NULL 插入列 'class_id'，表 'caidashi.dbo.cds_goods_info'；列不允许有 Null 值。INSERT 失败。 
[INFO][2017-07-01 17:49:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 17:49:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:49:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:49:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:49:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:49:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:3
 
[INFO][2017-07-01 17:49:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-07-01 17:49:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:3
 
[INFO][2017-07-01 17:49:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.insertRecord: 
INSERT INTO cds_goods_info(
          
            class_id
         , 
            good_name
         , 
            pinxin
         , 
            good_pic
         , 
            egood_pic
         , 
            add_date
         , 
            status
         , 
            listorder
         , 
            default_standrad_id
         , 
            good_info
         , 
            market_price
         , 
            box_price
         
        ) VALUES(
          
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         
        ) 
[INFO][2017-07-01 17:49:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:41
参数2:红烧熊掌
参数3:HSXZ
参数4:null
参数5:null
参数6:2017-07-01 17:49:25
参数7:1
参数8:1
参数9:null
参数10:333
参数11:3500.00
参数12:350.00
 
[INFO][2017-07-01 17:49:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:49:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:3
 
[INFO][2017-07-01 17:49:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-01 17:49:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:3
 
[INFO][2017-07-01 17:50:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:50:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:50:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 17:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-01 17:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 17:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ? 
[INFO][2017-07-01 17:50:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 17:50:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:50:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-01 17:50:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 17:50:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-01 17:50:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-01 17:50:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 17:50:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ? 
[INFO][2017-07-01 17:50:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 17:50:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-01 17:50:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-01 17:50:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ? 
[INFO][2017-07-01 17:50:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-01 17:50:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-01 17:50:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-01 17:50:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ? 
[INFO][2017-07-01 17:50:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-01 17:50:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?)  tmp_count 
[INFO][2017-07-01 17:50:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 17:50:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:50:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 17:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 17:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-01 17:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:50:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 17:50:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?)  tmp_count 
[INFO][2017-07-01 17:50:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 17:50:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 17:50:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 17:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?)  tmp_count 
[INFO][2017-07-01 17:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-01 17:50:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?) tmp where tmp.rownumber between 1 and 2 
[INFO][2017-07-01 17:50:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-01 17:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?)  tmp_count 
[INFO][2017-07-01 17:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 17:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 17:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 17:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-01 17:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 17:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 17:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 17:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 17:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 17:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-01 17:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 17:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 17:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 17:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1227280992
 
[INFO][2017-07-01 17:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 17:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 17:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 17:50:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 17:50:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (47,46,45,44,43,42,41))  tmp_count 
[INFO][2017-07-01 17:50:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 17:50:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (47,46,45,44,43,42,41)) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 17:50:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 17:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 17:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 17:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 17:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:51:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 17:51:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 17:53:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:53:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:53:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:53:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:53:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:53:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id)  tmp_count 
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:53:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 17:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 17:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 17:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-01 17:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:57:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 17:57:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 17:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-01 17:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 17:57:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-01 17:57:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 17:57:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 17:57:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-01 17:57:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-01 18:00:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:00:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:
 
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 18:00:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 18:00:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 18:00:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:108
 
[INFO][2017-07-01 18:00:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-01 18:00:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:9001
 
[INFO][2017-07-01 18:00:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-01 18:00:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:9001
 
[INFO][2017-07-01 18:00:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:00:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 18:00:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-01 18:00:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 18:00:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 18:00:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 18:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 18:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 18:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 18:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 18:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 18:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 18:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:01:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 18:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 18:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 18:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 18:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 18:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 18:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 18:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 18:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-01 18:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:01:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 18:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 18:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-01 18:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 18:01:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-01 18:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 18:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 18:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-01 18:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 18:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 18:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 18:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 18:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 18:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-01 18:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 18:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-01 18:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 18:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 18:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:01:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 18:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 18:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 18:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-01 18:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 18:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 18:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-01 18:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-01 18:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-01 18:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-01 18:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-01 18:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-01 18:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227280992
 
[INFO][2017-07-01 18:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 18:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:热销菜
 
[INFO][2017-07-01 18:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-01 18:01:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:测试类别2
 
[INFO][2017-07-01 18:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (47,46,45,44,43,42,41))  tmp_count 
[INFO][2017-07-01 18:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 18:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (47,46,45,44,43,42,41)) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 18:01:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-01 18:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (47,46,45,44,43,42,41))  tmp_count 
[INFO][2017-07-01 18:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 18:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (47,46,45,44,43,42,41)) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-01 18:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-01 18:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:02:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:02:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:2
 
[INFO][2017-07-01 18:02:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:02:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-01 18:02:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:02:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 18:02:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:02:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 18:02:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:02:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 18:02:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:02:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 18:02:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:02:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 18:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 18:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 18:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 18:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 18:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 18:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 18:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 18:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:
 
[INFO][2017-07-01 18:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 18:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-01 18:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 18:02:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 18:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 18:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 18:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:02:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:
 
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 18:02:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-01 18:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 18:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 18:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 18:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 18:02:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-01 18:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-01 18:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:7
 
[INFO][2017-07-01 18:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-01 18:02:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:1000007
参数3:番茄炒鸡蛋
参数4:FQCJD
参数5:番茄炒鸡蛋  (份),番茄炒鸡蛋饭-份,番茄炒鸡蛋 （份）,番茄炒鸡蛋,番茄炒鸡蛋-份,番茄炒鸡蛋 （大份）,番茄炒鸡蛋-大份,番茄炒鸡蛋  (大份),番茄炒鸡蛋饭-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-22 17:18:41
参数12:1
参数13:0
参数14:50.0
参数15:0
参数16:1
参数17:1
参数18:1
参数19:100
参数20:null
参数21:null
参数22:80
参数23:7
 
[INFO][2017-07-01 18:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-01 18:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:10
 
[INFO][2017-07-01 18:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-01 18:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:1000010
参数3:花菜炒豆腐
参数4:hccdf
参数5:花菜炒豆腐,花菜炒豆腐  (份),花菜炒豆腐-份,花菜炒豆腐（大份）,花菜炒豆腐(大份),花菜炒豆腐  (大份),花菜炒豆腐-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-09 10:05:30
参数12:1
参数13:0
参数14:19.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:10
 
[INFO][2017-07-01 18:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-01 18:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:24
 
[INFO][2017-07-01 18:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-01 18:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:1000024
参数3:小炒土豆片
参数4:xctdp
参数5:小炒土豆片
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-16 17:47:23
参数12:1
参数13:0
参数14:15.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:430
参数20:null
参数21:null
参数22:10
参数23:24
 
[INFO][2017-07-01 18:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-01 18:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:43
 
[INFO][2017-07-01 18:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-01 18:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
参数2:2000005
参数3:龙骨藕汤
参数4:lgot
参数5:龙骨藕汤
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-07 15:13:03
参数12:0
参数13:0
参数14:12.0
参数15:1
参数16:0
参数17:0
参数18:0
参数19:36
参数20:null
参数21:null
参数22:25
参数23:43
 
[INFO][2017-07-01 18:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-01 18:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:46
 
[INFO][2017-07-01 18:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-01 18:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
参数2:2000007
参数3:绿豆汤
参数4:ldt
参数5:绿豆汤
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-05-23 16:53:23
参数12:0
参数13:0
参数14:3.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:46
 
[INFO][2017-07-01 18:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-01 18:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:47
 
[INFO][2017-07-01 18:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-01 18:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
参数2:2000008
参数3:雪花蛋酒
参数4:xhdj
参数5:雪花蛋酒
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-03-11 17:27:42
参数12:0
参数13:0
参数14:3.5
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:47
 
[INFO][2017-07-01 18:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-01 18:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:67
 
[INFO][2017-07-01 18:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-01 18:02:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:6
参数2:6000001
参数3:农夫山泉
参数4:NFSQ
参数5:农夫山泉
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-20 16:40:09
参数12:1
参数13:0
参数14:2.5
参数15:0
参数16:1
参数17:1
参数18:1
参数19:290
参数20:null
参数21:null
参数22:10
参数23:67
 
[INFO][2017-07-01 18:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-01 18:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:71
 
[INFO][2017-07-01 18:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-01 18:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:6
参数2:6000005
参数3:加多宝
参数4:JDB
参数5:加多宝,金罐加多宝,罐加多宝,加多宝（听装）
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-20 16:40:56
参数12:1
参数13:0
参数14:5.0
参数15:0
参数16:1
参数17:1
参数18:1
参数19:0
参数20:null
参数21:null
参数22:10
参数23:71
 
[INFO][2017-07-01 18:03:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:03:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 18:03:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:03:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:2
 
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:03:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
 
[INFO][2017-07-01 18:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 18:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 18:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:03:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:
 
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 18:03:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 18:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 18:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 18:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:03:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:
 
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-01 18:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 18:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 18:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-01 18:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 18:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 18:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 18:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-01 18:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:7
 
[INFO][2017-07-01 18:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-01 18:03:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:1000007
参数3:番茄炒鸡蛋
参数4:FQCJD
参数5:番茄炒鸡蛋  (份),番茄炒鸡蛋饭-份,番茄炒鸡蛋 （份）,番茄炒鸡蛋,番茄炒鸡蛋-份,番茄炒鸡蛋 （大份）,番茄炒鸡蛋-大份,番茄炒鸡蛋  (大份),番茄炒鸡蛋饭-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-22 17:18:41
参数12:1
参数13:0
参数14:50.0
参数15:0
参数16:1
参数17:1
参数18:1
参数19:100
参数20:null
参数21:null
参数22:80
参数23:7
 
[INFO][2017-07-01 18:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_ms_goods
             


         WHERE good_id = ? 
[INFO][2017-07-01 18:03:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:10
 
[INFO][2017-07-01 18:03:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.updateRecord: 
UPDATE cds_ms_goods
         SET class_id = ?
            ,
                good_num = ?
            ,
                good_name = ?
            ,
                pinxin = ?
            ,
                good_key = ?
            ,
                plu_num = ?
            ,
                mode = ?
            ,
                est_type_id = ?
            ,
                listorder = ?
            ,
                status = ?
            ,
                uptime = ?
            ,
                isback = ?
            ,
                isweight = ?
            ,
                good_price = ?
            ,
                is_sync = ?
            ,
                draftsman = ?
            ,
                auditor = ?
            ,
                approver = ?
            ,
                finished_weight = ?
            ,
                gist = ?
            ,
                process = ?
            ,
                out_time = ? 
         WHERE good_id = ? 
[INFO][2017-07-01 18:03:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:1000010
参数3:花菜炒豆腐
参数4:hccdf
参数5:花菜炒豆腐,花菜炒豆腐  (份),花菜炒豆腐-份,花菜炒豆腐（大份）,花菜炒豆腐(大份),花菜炒豆腐  (大份),花菜炒豆腐-大份
参数6:0
参数7:null
参数8:0
参数9:0
参数10:1
参数11:2017-06-09 10:05:30
参数12:1
参数13:0
参数14:19.9
参数15:0
参数16:0
参数17:0
参数18:0
参数19:0
参数20:null
参数21:null
参数22:10
参数23:10
 
[INFO][2017-07-01 18:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 18:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 18:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:03:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:03:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-01 18:03:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 18:03:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 18:03:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 18:03:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 18:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 18:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 18:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-01 18:03:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 18:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 18:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 18:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-01 18:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-01 18:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-01 18:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-01 18:09:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-01 18:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-01 18:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-01 18:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-01 18:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-01 18:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 18:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-01 18:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-01 18:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-01 18:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-01 18:09:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-01 18:09:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 18:09:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 18:09:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-01 18:09:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-01 18:09:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-01 18:09:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 18:09:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-01 18:09:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-01 18:13:05] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Sat Jul 01 17:28:32 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-01 18:13:05] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-01 18:13:06] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-01 18:13:06] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Sat Jul 01 17:28:29 CST 2017]; root of context hierarchy 
[INFO][2017-07-01 18:13:06] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-03 09:11:40] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-03 09:11:40] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Mon Jul 03 09:11:40 CST 2017]; root of context hierarchy 
[INFO][2017-07-03 09:11:40] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-03 09:11:40] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-03 09:11:40] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-03 09:11:40] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-03 09:11:43] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-03 09:11:43] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 3069 ms 
[INFO][2017-07-03 09:11:43] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-03 09:11:43] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Mon Jul 03 09:11:43 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-03 09:11:43] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-03 09:11:44] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Mon Jul 03 09:11:43 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-03 09:11:45] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-03 09:11:46] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-03 09:11:46] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-49906-1499044306192-1:1,clientId=null,started=false} 
[INFO][2017-07-03 09:13:41] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-03 09:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-03 09:13:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-03 09:13:42] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 118840 ms 
[INFO][2017-07-03 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-03 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-03 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-03 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-03 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-03 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:378
参数2:1032
 
[INFO][2017-07-03 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-03 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-03 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-03 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-03 09:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-03 09:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-03 09:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-03 09:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-03 09:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:9
参数2:2017-07-03
参数3:2017-07-03
参数4:9
参数5:2017-07-03
参数6:2017-07-03
参数7:9
参数8:2017-07-03
参数9:2017-07-03
参数10:9
参数11:2017-07-03
参数12:2017-07-03
参数13:9
参数14:2017-07-03
参数15:2017-07-03
参数16:9
参数17:2017-07-03
参数18:2017-07-03
 
[INFO][2017-07-03 09:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-03 09:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2017-07-03
参数2:2017-07-03
参数3:9
参数4:2017-07-02
参数5:2017-07-02
参数6:9
参数7:2017-06-26
参数8:2017-06-26
参数9:9
 
[INFO][2017-07-03 09:15:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:15:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-03 09:15:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:15:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-03 09:15:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:15:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-03 09:15:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:15:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-03 09:15:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 09:15:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-03 09:15:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:15:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-03 09:15:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:15:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-03 09:15:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 09:15:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-03 09:15:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:15:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-03 09:15:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:15:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-03 09:15:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:15:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-03 09:15:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:15:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-03 09:15:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:15:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-03 09:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
参数2:10
 
[INFO][2017-07-03 09:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
参数2:10
 
[INFO][2017-07-03 09:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
参数2:9
 
[INFO][2017-07-03 09:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
参数2:9
 
[INFO][2017-07-03 09:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
参数2:10
 
[INFO][2017-07-03 09:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
参数2:10
 
[INFO][2017-07-03 09:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-03 09:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-03 09:15:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:15:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-03 09:15:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 09:15:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-03 09:15:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:15:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-03 09:15:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:15:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-03 09:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-03 09:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-03 09:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-03 09:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-03 09:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-03 09:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-03 09:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-03 09:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:16:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-03 09:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:16:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-03 09:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-03 09:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-03 09:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-03 09:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-03 09:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-03 09:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-03 09:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-03 09:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-03 09:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-03 09:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-03 09:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1227280992
 
[INFO][2017-07-03 09:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-03 09:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:热销菜
 
[INFO][2017-07-03 09:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-03 09:16:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:30
参数2:测试类别2
 
[INFO][2017-07-03 09:16:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (47,46,45,44,43,42,41))  tmp_count 
[INFO][2017-07-03 09:16:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-03 09:16:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (47,46,45,44,43,42,41)) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-03 09:16:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-03 09:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-03 09:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:13
 
[INFO][2017-07-03 09:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-03 09:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:30
参数2:41
参数3:
参数4:
参数5:1
参数6:null
参数7:13
 
[INFO][2017-07-03 09:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-03 09:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-03 09:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:热销菜
 
[INFO][2017-07-03 09:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-03 09:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-03 09:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-03 09:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:测试类别2
 
[INFO][2017-07-03 09:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-03 09:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:13
 
[INFO][2017-07-03 09:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-03 09:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:30
参数2:41
参数3:
参数4:游戏互动222
参数5:1
参数6:null
参数7:13
 
[INFO][2017-07-03 09:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 09:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-03 09:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-03 09:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-03 09:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 09:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-03 09:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
参数2:热销菜
 
[INFO][2017-07-03 09:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-03 09:17:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:30
参数2:测试类别2
 
[INFO][2017-07-03 09:17:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-03 09:17:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:13
 
[INFO][2017-07-03 09:17:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-03 09:17:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:30
参数2:41
参数3:
参数4:
参数5:1
参数6:null
参数7:13
 
[INFO][2017-07-03 09:17:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:17:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 09:17:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-03 09:17:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:热销菜
 
[INFO][2017-07-03 09:17:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-03 09:17:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 09:17:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-03 09:17:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:测试类别2
 
[INFO][2017-07-03 09:17:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_class_id = ? 
[INFO][2017-07-03 09:17:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:13
 
[INFO][2017-07-03 09:17:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.updateRecord: 
UPDATE cds_stores_class
         SET stores_brand_id = ?
            ,
                class_id = ?
            ,
                food_category_id = ?
            ,
                meituan_cat_id = ?
            ,
                type = ?
            ,
                baidu_cat_id = ? 
         WHERE stores_class_id = ? 
[INFO][2017-07-03 09:17:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:30
参数2:41
参数3:
参数4:游戏互动222
参数5:1
参数6:null
参数7:13
 
[INFO][2017-07-03 09:17:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:17:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-03 09:17:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-03 09:17:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-03 09:17:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-03 09:17:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-03 09:17:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-03 09:17:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:热销菜
 
[INFO][2017-07-03 09:17:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-03 09:17:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:30
参数2:测试类别2
 
[INFO][2017-07-03 09:17:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:17:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-03 09:17:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:17:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-03 09:17:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:17:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-03 09:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 09:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-03 09:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-03 09:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-03 09:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-03 09:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 09:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-03 09:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-03 09:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-03 09:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:17:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[WARN][2017-07-03 09:17:50] org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:251) ActiveMQ Transport: tcp:///127.0.0.1:61616@50261 Transport (tcp://127.0.0.1:61616) failed, reason:  java.net.SocketException: Connection reset, attempting to automatically reconnect 
[INFO][2017-07-03 09:17:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:17:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:20
 
[INFO][2017-07-03 09:17:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:17:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:20
 
[INFO][2017-07-03 09:17:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:17:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:18
 
[INFO][2017-07-03 09:17:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:17:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:18
 
[INFO][2017-07-03 09:17:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:17:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:16
 
[INFO][2017-07-03 09:17:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:17:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:16
 
[INFO][2017-07-03 09:17:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:17:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:17
 
[INFO][2017-07-03 09:17:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:17:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:17
 
[INFO][2017-07-03 09:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:16
 
[INFO][2017-07-03 09:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:18:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
参数2:16
 
[INFO][2017-07-03 09:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:15
 
[INFO][2017-07-03 09:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:15
 
[INFO][2017-07-03 09:18:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:18:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:14
 
[INFO][2017-07-03 09:18:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:18:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:14
 
[INFO][2017-07-03 09:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:12
 
[INFO][2017-07-03 09:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:12
 
[INFO][2017-07-03 09:18:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:18:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:13
 
[INFO][2017-07-03 09:18:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:18:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:13
 
[INFO][2017-07-03 09:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:12
 
[INFO][2017-07-03 09:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:12
 
[INFO][2017-07-03 09:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:10
 
[INFO][2017-07-03 09:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:10
 
[INFO][2017-07-03 09:19:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:19:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-03 09:19:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:19:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-03 09:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
参数2:10
 
[INFO][2017-07-03 09:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:19:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
参数2:10
 
[INFO][2017-07-03 09:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
参数2:10
 
[INFO][2017-07-03 09:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:19:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
参数2:10
 
[INFO][2017-07-03 09:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
参数2:12
 
[INFO][2017-07-03 09:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:19:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
参数2:12
 
[INFO][2017-07-03 09:19:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:19:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
参数2:10
 
[INFO][2017-07-03 09:19:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:19:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
参数2:10
 
[INFO][2017-07-03 09:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:10
 
[INFO][2017-07-03 09:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:10
 
[INFO][2017-07-03 09:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:13
 
[INFO][2017-07-03 09:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:19:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
参数2:13
 
[INFO][2017-07-03 09:19:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:19:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:15
 
[INFO][2017-07-03 09:19:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:19:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:15
 
[INFO][2017-07-03 09:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:16
 
[INFO][2017-07-03 09:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:20:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:16
 
[INFO][2017-07-03 09:20:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:20:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:17
 
[INFO][2017-07-03 09:20:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:20:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
参数2:17
 
[INFO][2017-07-03 09:20:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:20:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-03 09:20:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:20:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-03 09:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-03 09:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-03 09:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-03 09:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-03 09:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-03 09:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-03 09:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-03 09:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:20:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-03 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-03 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?)  tmp_count 
[INFO][2017-07-03 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-03 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-03 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:游戏互动222
 
[INFO][2017-07-03 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-03 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-03 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-07-03 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-03 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE food_category_id = ? 
[INFO][2017-07-03 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1227280992
 
[INFO][2017-07-03 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-03 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:热销菜
 
[INFO][2017-07-03 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ?
            and
                meituan_cat_id = ? 
[INFO][2017-07-03 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:30
参数2:测试类别2
 
[INFO][2017-07-03 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetClassList: 
select count(0) from (select * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (47,46,45,44,43,42,41))  tmp_count 
[INFO][2017-07-03 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-03 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetClassList: 
select tmp.* from (select (row_number() Over(order by class_id asc)) as rownumber, * from cds_class
         
         WHERE brand_id = ?

                
            
            
                
                    and class_id not in (47,46,45,44,43,42,41)) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-07-03 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-03 09:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:20:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:20:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:2
 
[INFO][2017-07-03 09:21:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:21:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
 
[INFO][2017-07-03 09:21:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:21:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-03 09:21:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 09:21:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-03 09:22:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:22:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-03 09:22:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:22:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-03 09:22:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:22:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:
 
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-03 09:22:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-03 09:22:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:22:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:22:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:2
 
[INFO][2017-07-03 09:22:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:22:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3
 
[INFO][2017-07-03 09:23:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-03 09:23:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:3324
 
[INFO][2017-07-03 09:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-03 09:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:13
参数2:1176
参数3:1
参数4:0
参数5:1
参数6:15
参数7:10
参数8:0
参数9:2
参数10:2
参数11:1.0
参数12:25.0
参数13:个
参数14:9300
参数15:是
参数16:10000
参数17:0
参数18:3324
 
[INFO][2017-07-03 09:23:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:23:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-03 09:23:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:23:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2
 
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-03 09:23:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-03 09:23:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3324
 
[INFO][2017-07-03 09:23:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-03 09:23:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:13
参数2:1176
参数3:1
参数4:0
参数5:1
参数6:15
参数7:10
参数8:0
参数9:2
参数10:2
参数11:1.0
参数12:25.0
参数13:个
参数14:9300
参数15:是
参数16:10000
参数17:0
参数18:3324
 
[INFO][2017-07-03 09:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-03 09:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3323
 
[INFO][2017-07-03 09:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-03 09:23:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:10
参数2:1252
参数3:1
参数4:0
参数5:1
参数6:0
参数7:0
参数8:0
参数9:0
参数10:1
参数11:0.0
参数12:0.0
参数13:0
参数14:9299
参数15:是
参数16:10000
参数17:0
参数18:3323
 
[INFO][2017-07-03 09:23:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:23:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-03 09:23:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:23:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-03 09:23:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:23:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-03 09:23:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:23:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-03 09:23:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 09:23:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-03 09:23:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:23:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-03 09:23:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 09:23:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-03 09:23:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:23:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-03 09:23:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:23:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-03 09:23:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:23:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:2
 
[INFO][2017-07-03 09:23:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:23:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:3
 
[INFO][2017-07-03 09:23:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-03 09:23:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3324
 
[INFO][2017-07-03 09:23:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-03 09:23:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:13
参数2:1176
参数3:1
参数4:0
参数5:1
参数6:15
参数7:10
参数8:0
参数9:2
参数10:2
参数11:1.0
参数12:25.0
参数13:个
参数14:9300
参数15:是
参数16:10000
参数17:0
参数18:3324
 
[INFO][2017-07-03 09:23:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-03 09:23:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3323
 
[INFO][2017-07-03 09:23:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-03 09:23:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:10
参数2:1252
参数3:1
参数4:0
参数5:1
参数6:0
参数7:0
参数8:0
参数9:0
参数10:1
参数11:0.0
参数12:0.0
参数13:0
参数14:9299
参数15:是
参数16:10000
参数17:0
参数18:3323
 
[INFO][2017-07-03 09:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-03 09:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-03 09:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-03 09:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3324
 
[INFO][2017-07-03 09:25:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-03 09:25:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:13
参数2:1176
参数3:1
参数4:0
参数5:1
参数6:15
参数7:10
参数8:0
参数9:2
参数10:2
参数11:1.0
参数12:30.0
参数13:个
参数14:9300
参数15:是
参数16:10000
参数17:0
参数18:3324
 
[INFO][2017-07-03 09:26:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-03 09:26:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3323
 
[INFO][2017-07-03 09:26:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-03 09:26:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:10
参数2:1252
参数3:1
参数4:0
参数5:1
参数6:0
参数7:0
参数8:0
参数9:0
参数10:1
参数11:0.0
参数12:25.0
参数13:0
参数14:9299
参数15:是
参数16:10000
参数17:0
参数18:3323
 
[INFO][2017-07-03 09:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-03 09:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:26:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-03 09:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-03 09:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-03 09:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-03 09:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:26:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:26:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-03 09:26:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:26:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-03 09:30:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:30:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-03 09:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-03 09:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-03 09:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-03 09:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 09:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-03 09:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-03 09:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:30:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-03 09:30:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 09:30:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-03 09:30:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:30:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-03 09:30:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:30:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:2
 
[INFO][2017-07-03 09:30:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:30:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:3
 
[INFO][2017-07-03 09:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-03 09:31:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:3324
 
[INFO][2017-07-03 09:31:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-03 09:31:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:13
参数2:1176
参数3:1
参数4:0
参数5:1
参数6:15
参数7:10
参数8:0
参数9:2
参数10:2
参数11:1.0
参数12:25.0
参数13:个
参数14:9300
参数15:是
参数16:10000
参数17:0
参数18:3324
 
[INFO][2017-07-03 09:31:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:31:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-03 09:31:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:31:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5  
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
 
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8  
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:1
 
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6  
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2
 
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:31:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:3
 
[INFO][2017-07-03 09:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-07-03 09:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3324
 
[INFO][2017-07-03 09:32:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-07-03 09:32:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:13
参数2:1176
参数3:1
参数4:0
参数5:1
参数6:15
参数7:10
参数8:0
参数9:2
参数10:2
参数11:1.0
参数12:25.0
参数13:碗
参数14:9300
参数15:是
参数16:10000
参数17:0
参数18:3324
 
[INFO][2017-07-03 09:33:41] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Mon Jul 03 09:11:43 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-03 09:33:41] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-03 09:33:41] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-03 09:33:41] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Mon Jul 03 09:11:40 CST 2017]; root of context hierarchy 
[INFO][2017-07-03 09:33:41] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-03 09:33:55] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-03 09:33:55] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Mon Jul 03 09:33:55 CST 2017]; root of context hierarchy 
[INFO][2017-07-03 09:33:55] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-03 09:33:55] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-03 09:33:56] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-03 09:33:56] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-03 09:33:58] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-03 09:33:58] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2785 ms 
[INFO][2017-07-03 09:33:58] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-03 09:33:58] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Mon Jul 03 09:33:58 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-03 09:33:58] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-03 09:33:59] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:34:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:34:01] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Mon Jul 03 09:33:58 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-03 09:34:01] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-03 09:34:01] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-03 09:34:01] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-51237-1499045641386-1:1,clientId=null,started=false} 
[INFO][2017-07-03 09:35:56] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-03 09:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-03 09:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-03 09:35:57] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 118857 ms 
[INFO][2017-07-03 09:35:57] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Mon Jul 03 09:33:58 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-03 09:35:57] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-03 09:35:57] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-03 09:35:57] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Mon Jul 03 09:33:55 CST 2017]; root of context hierarchy 
[INFO][2017-07-03 09:35:57] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-03 09:36:08] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-03 09:36:08] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Mon Jul 03 09:36:08 CST 2017]; root of context hierarchy 
[INFO][2017-07-03 09:36:08] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-03 09:36:08] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-03 09:36:09] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-03 09:36:09] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-03 09:36:11] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-03 09:36:11] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2779 ms 
[INFO][2017-07-03 09:36:11] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-03 09:36:11] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Mon Jul 03 09:36:11 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-03 09:36:11] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-03 09:36:12] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Mon Jul 03 09:36:11 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-03 09:36:13] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-03 09:36:14] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-03 09:36:14] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-51385-1499045774128-1:1,clientId=null,started=false} 
[INFO][2017-07-03 09:36:14] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-03 09:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-03 09:36:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-03 09:36:14] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3471 ms 
[INFO][2017-07-03 09:37:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-03 09:37:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:chenbin
 
[INFO][2017-07-03 09:37:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:37:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:351
参数2:1032
 
[INFO][2017-07-03 09:37:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:37:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:352
参数2:1032
 
[INFO][2017-07-03 09:37:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:37:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:376
参数2:1032
 
[INFO][2017-07-03 09:37:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:37:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:378
参数2:1032
 
[INFO][2017-07-03 09:37:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:37:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:353
参数2:1032
 
[INFO][2017-07-03 09:37:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:37:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:372
参数2:1032
 
[INFO][2017-07-03 09:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:354
参数2:1032
 
[INFO][2017-07-03 09:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:355
参数2:1032
 
[INFO][2017-07-03 09:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:356
参数2:1032
 
[INFO][2017-07-03 09:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-03 09:37:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:9
 
[INFO][2017-07-03 09:37:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-03 09:37:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:9
参数2:2017-07-03
参数3:2017-07-03
参数4:9
参数5:2017-07-03
参数6:2017-07-03
参数7:9
参数8:2017-07-03
参数9:2017-07-03
参数10:9
参数11:2017-07-03
参数12:2017-07-03
参数13:9
参数14:2017-07-03
参数15:2017-07-03
参数16:9
参数17:2017-07-03
参数18:2017-07-03
 
[INFO][2017-07-03 09:37:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-03 09:37:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2017-07-03
参数2:2017-07-03
参数3:9
参数4:2017-07-02
参数5:2017-07-02
参数6:9
参数7:2017-06-26
参数8:2017-06-26
参数9:9
 
[INFO][2017-07-03 09:37:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:37:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-03 09:37:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:37:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-03 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-03 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-03 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-03 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-03 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4  
[INFO][2017-07-03 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-03 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:2
 
[INFO][2017-07-03 09:37:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:37:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7  
[INFO][2017-07-03 09:37:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:37:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:3
 
[INFO][2017-07-03 09:37:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:37:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 09:37:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:37:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 09:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-03 09:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 09:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:3
 
[INFO][2017-07-03 09:38:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:38:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
参数2:10
 
[INFO][2017-07-03 09:38:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:38:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
参数2:10
 
[INFO][2017-07-03 09:38:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:38:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:15
 
[INFO][2017-07-03 09:38:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:38:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
参数2:15
 
[INFO][2017-07-03 09:38:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:38:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:16
 
[INFO][2017-07-03 09:38:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:38:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
参数2:16
 
[INFO][2017-07-03 09:38:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:38:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:18
 
[INFO][2017-07-03 09:38:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:38:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
参数2:18
 
[INFO][2017-07-03 09:38:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:38:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:19
 
[INFO][2017-07-03 09:38:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:38:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
参数2:19
 
[INFO][2017-07-03 09:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:18
 
[INFO][2017-07-03 09:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
参数2:18
 
[INFO][2017-07-03 09:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:15
 
[INFO][2017-07-03 09:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:1
参数2:15
 
[INFO][2017-07-03 09:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-03 09:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:chenbin
 
[INFO][2017-07-03 09:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:351
参数2:1032
 
[INFO][2017-07-03 09:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:352
参数2:1032
 
[INFO][2017-07-03 09:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:376
参数2:1032
 
[INFO][2017-07-03 09:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:378
参数2:1032
 
[INFO][2017-07-03 09:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:353
参数2:1032
 
[INFO][2017-07-03 09:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:372
参数2:1032
 
[INFO][2017-07-03 09:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:354
参数2:1032
 
[INFO][2017-07-03 09:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:355
参数2:1032
 
[INFO][2017-07-03 09:39:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 09:39:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:356
参数2:1032
 
[INFO][2017-07-03 09:39:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-03 09:39:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:9
 
[INFO][2017-07-03 09:39:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-03 09:39:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:9
参数2:2017-07-03
参数3:2017-07-03
参数4:9
参数5:2017-07-03
参数6:2017-07-03
参数7:9
参数8:2017-07-03
参数9:2017-07-03
参数10:9
参数11:2017-07-03
参数12:2017-07-03
参数13:9
参数14:2017-07-03
参数15:2017-07-03
参数16:9
参数17:2017-07-03
参数18:2017-07-03
 
[INFO][2017-07-03 09:39:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-03 09:39:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:2017-07-03
参数2:2017-07-03
参数3:9
参数4:2017-07-02
参数5:2017-07-02
参数6:9
参数7:2017-06-26
参数8:2017-06-26
参数9:9
 
[INFO][2017-07-03 09:39:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:39:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 09:39:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:39:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 09:39:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:39:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 09:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 09:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 09:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-03 09:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 09:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-03 09:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-03 09:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-03 09:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 09:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:2
 
[INFO][2017-07-03 09:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-03 09:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-03 09:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:39:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-03 09:39:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:39:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:2
参数2:10
 
[INFO][2017-07-03 09:39:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:39:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:2
参数2:10
 
[INFO][2017-07-03 09:39:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:39:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
参数2:14
 
[INFO][2017-07-03 09:39:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:39:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
参数2:14
 
[INFO][2017-07-03 09:39:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:39:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:1
参数2:16
 
[INFO][2017-07-03 09:39:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:39:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:1
参数2:16
 
[INFO][2017-07-03 09:39:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:39:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 09:39:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:39:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 09:39:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:39:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-03 09:39:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 09:39:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-03 09:40:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:40:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 09:40:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.getPageRecord: 
select count(0) from (select * from  cds_brand)  tmp_count 
[INFO][2017-07-03 09:40:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-03 09:40:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.getPageRecord: 
select tmp.* from (select (row_number() Over(order by brand_id asc)) as rownumber, * from  cds_brand) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-07-03 09:40:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-03 09:40:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:40:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 09:40:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:40:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 09:40:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:40:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:2
 
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-03 09:40:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:40:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 09:40:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:40:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 09:40:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 09:40:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 09:40:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 09:40:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-03 09:40:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 09:40:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 09:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 09:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 09:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 09:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-03 09:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 09:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:2
 
[INFO][2017-07-03 09:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 09:40:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-03 09:40:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:40:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-03 09:40:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 09:40:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-03 09:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-03 09:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 09:40:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-03 09:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-03 09:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-03 09:41:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:1
 
[INFO][2017-07-03 09:41:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:41:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-03 09:41:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 11 and 20 
[INFO][2017-07-03 09:41:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10 参数1:1
 
[INFO][2017-07-03 09:41:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:41:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-03 09:41:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 21 and 30 
[INFO][2017-07-03 09:41:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-03 09:41:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:41:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-03 09:41:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 31 and 40 
[INFO][2017-07-03 09:41:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-03 09:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-03 09:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 41 and 50 
[INFO][2017-07-03 09:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:1
 
[INFO][2017-07-03 09:41:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:41:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-03 09:41:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 51 and 60 
[INFO][2017-07-03 09:41:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-7 参数1:1
 
[INFO][2017-07-03 09:41:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:41:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-03 09:41:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 61 and 70 
[INFO][2017-07-03 09:41:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3 参数1:1
 
[INFO][2017-07-03 09:41:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 09:41:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-03 09:41:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 71 and 76 
[INFO][2017-07-03 09:41:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:1
 
[INFO][2017-07-03 10:10:40] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Mon Jul 03 09:36:11 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-03 10:10:40] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-03 10:10:41] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-03 10:10:41] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Mon Jul 03 09:36:08 CST 2017]; root of context hierarchy 
[INFO][2017-07-03 10:10:41] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[WARN][2017-07-03 10:10:42] org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:251) ActiveMQ Transport: tcp:///127.0.0.1:61616@51386 Transport (tcp://127.0.0.1:61616) failed, reason:  java.io.EOFException, not attempting to automatically reconnect 
[INFO][2017-07-03 10:10:54] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-03 10:10:54] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Mon Jul 03 10:10:54 CST 2017]; root of context hierarchy 
[INFO][2017-07-03 10:10:54] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-03 10:10:54] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-03 10:10:54] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-03 10:10:54] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-03 10:10:57] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-03 10:10:57] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 3588 ms 
[INFO][2017-07-03 10:10:57] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-03 10:10:57] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Mon Jul 03 10:10:57 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-03 10:10:57] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-03 10:10:59] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:10:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:11:00] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Mon Jul 03 10:10:57 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-03 10:11:00] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-03 10:11:00] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-03 10:11:00] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-52125-1499047860634-1:1,clientId=null,started=false} 
[INFO][2017-07-03 10:11:00] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-03 10:11:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-03 10:11:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-03 10:11:01] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3480 ms 
[WARN][2017-07-03 10:11:17] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-07-03 10:11:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-03 10:11:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:chenbin
 
[INFO][2017-07-03 10:11:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:11:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:351
参数2:1032
 
[INFO][2017-07-03 10:11:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:11:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:352
参数2:1032
 
[INFO][2017-07-03 10:11:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:11:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:376
参数2:1032
 
[INFO][2017-07-03 10:11:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:11:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:378
参数2:1032
 
[INFO][2017-07-03 10:11:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:11:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:353
参数2:1032
 
[INFO][2017-07-03 10:11:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:11:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:372
参数2:1032
 
[INFO][2017-07-03 10:11:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:11:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:354
参数2:1032
 
[INFO][2017-07-03 10:11:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:11:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:355
参数2:1032
 
[INFO][2017-07-03 10:11:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:11:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:356
参数2:1032
 
[INFO][2017-07-03 10:11:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-03 10:11:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:9
 
[INFO][2017-07-03 10:11:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-03 10:11:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:9
参数2:2017-07-03
参数3:2017-07-03
参数4:9
参数5:2017-07-03
参数6:2017-07-03
参数7:9
参数8:2017-07-03
参数9:2017-07-03
参数10:9
参数11:2017-07-03
参数12:2017-07-03
参数13:9
参数14:2017-07-03
参数15:2017-07-03
参数16:9
参数17:2017-07-03
参数18:2017-07-03
 
[INFO][2017-07-03 10:11:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-8 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-03 10:11:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-8 参数1:2017-07-03
参数2:2017-07-03
参数3:9
参数4:2017-07-02
参数5:2017-07-02
参数6:9
参数7:2017-06-26
参数8:2017-06-26
参数9:9
 
[INFO][2017-07-03 10:11:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:11:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-03 10:11:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:11:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-03 10:11:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:11:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9  
[INFO][2017-07-03 10:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-03 10:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-03 10:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-03 10:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-03 10:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 10:11:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-03 10:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-03 10:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-03 10:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 10:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-03 10:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-03 10:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:2
 
[INFO][2017-07-03 10:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:11:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:3
 
[INFO][2017-07-03 10:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-4 参数1:12
 
[INFO][2017-07-03 10:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 10:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 10:11:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1201,73,78,86,100,98,97,145,142,1171,1172,1216,1218,1226,1236,85,79,1243,1244,1245,1249,1256,1255,1252,1258,1225,1215,82,1264,1265,1266,1267))  tmp_count 
[INFO][2017-07-03 10:11:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-03 10:11:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )
                
            

            

            
                
                     and a.good_id not in (1201,73,78,86,100,98,97,145,142,1171,1172,1216,1218,1226,1236,85,79,1243,1244,1245,1249,1256,1255,1252,1258,1225,1215,82,1264,1265,1266,1267)) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:11:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:3
 
[INFO][2017-07-03 10:15:58] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Mon Jul 03 10:10:57 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-03 10:15:58] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-03 10:15:59] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-03 10:15:59] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Mon Jul 03 10:10:54 CST 2017]; root of context hierarchy 
[INFO][2017-07-03 10:15:59] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-03 10:16:11] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-03 10:16:11] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Mon Jul 03 10:16:11 CST 2017]; root of context hierarchy 
[INFO][2017-07-03 10:16:11] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-03 10:16:12] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-03 10:16:12] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-03 10:16:12] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-03 10:16:14] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-03 10:16:14] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2608 ms 
[INFO][2017-07-03 10:16:14] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-03 10:16:14] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Mon Jul 03 10:16:14 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-03 10:16:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-03 10:16:15] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Mon Jul 03 10:16:14 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-03 10:16:16] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-03 10:16:17] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-03 10:16:17] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-52274-1499048177145-1:1,clientId=null,started=false} 
[INFO][2017-07-03 10:16:17] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-03 10:16:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-03 10:16:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-03 10:16:17] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3301 ms 
[WARN][2017-07-03 10:17:07] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-07-03 10:17:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-03 10:17:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:chenbin
 
[INFO][2017-07-03 10:17:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:17:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:351
参数2:1032
 
[INFO][2017-07-03 10:17:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:17:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:352
参数2:1032
 
[INFO][2017-07-03 10:17:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:17:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:376
参数2:1032
 
[INFO][2017-07-03 10:17:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:17:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:378
参数2:1032
 
[INFO][2017-07-03 10:17:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:17:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:353
参数2:1032
 
[INFO][2017-07-03 10:17:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:17:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:372
参数2:1032
 
[INFO][2017-07-03 10:17:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:17:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:354
参数2:1032
 
[INFO][2017-07-03 10:17:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:17:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:355
参数2:1032
 
[INFO][2017-07-03 10:17:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:17:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:356
参数2:1032
 
[INFO][2017-07-03 10:17:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-03 10:17:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:9
 
[INFO][2017-07-03 10:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-03 10:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:9
参数2:2017-07-03
参数3:2017-07-03
参数4:9
参数5:2017-07-03
参数6:2017-07-03
参数7:9
参数8:2017-07-03
参数9:2017-07-03
参数10:9
参数11:2017-07-03
参数12:2017-07-03
参数13:9
参数14:2017-07-03
参数15:2017-07-03
参数16:9
参数17:2017-07-03
参数18:2017-07-03
 
[INFO][2017-07-03 10:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-03 10:17:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:2017-07-03
参数2:2017-07-03
参数3:9
参数4:2017-07-02
参数5:2017-07-02
参数6:9
参数7:2017-06-26
参数8:2017-06-26
参数9:9
 
[INFO][2017-07-03 10:17:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:17:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 10:17:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:17:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 10:17:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:17:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 10:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-03 10:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 10:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-03 10:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 10:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 10:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 10:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-03 10:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 10:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:2
 
[INFO][2017-07-03 10:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:17:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-03 10:17:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:17:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:3
 
[INFO][2017-07-03 10:17:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:17:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 10:17:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:17:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 10:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-03 10:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:17:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-03 10:43:37] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Mon Jul 03 10:16:14 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-03 10:43:37] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-03 10:43:38] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-07-03 10:43:38] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Mon Jul 03 10:16:11 CST 2017]; root of context hierarchy 
[INFO][2017-07-03 10:43:38] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-07-03 10:43:51] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-07-03 10:43:51] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Mon Jul 03 10:43:51 CST 2017]; root of context hierarchy 
[INFO][2017-07-03 10:43:51] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-07-03 10:43:51] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-07-03 10:43:51] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-07-03 10:43:51] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-07-03 10:43:53] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-03 10:43:53] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2764 ms 
[INFO][2017-07-03 10:43:53] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-07-03 10:43:53] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Mon Jul 03 10:43:53 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-03 10:43:53] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-07-03 10:43:55] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/sendCode],methods=[GET]}" onto public java.lang.String com.controller.ClientController.sendCode() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-07-03 10:43:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-07-03 10:43:56] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Mon Jul 03 10:43:53 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-07-03 10:43:56] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-07-03 10:43:56] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-07-03 10:43:56] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-53010-1499049836634-1:1,clientId=null,started=false} 
[INFO][2017-07-03 10:43:56] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-07-03 10:43:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-07-03 10:43:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-07-03 10:43:57] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 3366 ms 
[INFO][2017-07-03 10:44:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-03 10:44:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:chenbin
 
[INFO][2017-07-03 10:44:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:44:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:351
参数2:1032
 
[INFO][2017-07-03 10:44:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:44:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:352
参数2:1032
 
[INFO][2017-07-03 10:44:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:44:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:376
参数2:1032
 
[INFO][2017-07-03 10:44:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:44:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:378
参数2:1032
 
[INFO][2017-07-03 10:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:353
参数2:1032
 
[INFO][2017-07-03 10:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:372
参数2:1032
 
[INFO][2017-07-03 10:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:354
参数2:1032
 
[INFO][2017-07-03 10:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:355
参数2:1032
 
[INFO][2017-07-03 10:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 10:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:356
参数2:1032
 
[INFO][2017-07-03 10:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-03 10:44:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:9
 
[INFO][2017-07-03 10:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-03 10:44:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:9
参数2:2017-07-03
参数3:2017-07-03
参数4:9
参数5:2017-07-03
参数6:2017-07-03
参数7:9
参数8:2017-07-03
参数9:2017-07-03
参数10:9
参数11:2017-07-03
参数12:2017-07-03
参数13:9
参数14:2017-07-03
参数15:2017-07-03
参数16:9
参数17:2017-07-03
参数18:2017-07-03
 
[INFO][2017-07-03 10:44:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-03 10:44:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:2017-07-03
参数2:2017-07-03
参数3:9
参数4:2017-07-02
参数5:2017-07-02
参数6:9
参数7:2017-06-26
参数8:2017-06-26
参数9:9
 
[INFO][2017-07-03 10:44:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:44:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 10:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 10:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:44:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 10:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 10:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-03 10:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-03 10:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 10:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 10:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 10:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-03 10:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 10:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:44:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:2
 
[INFO][2017-07-03 10:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:44:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[WARN][2017-07-03 10:44:40] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-5 Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'brand_id' is not present 
[INFO][2017-07-03 10:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:3
 
[INFO][2017-07-03 10:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-03 10:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:44:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-03 10:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-03 10:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-03 10:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-03 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-03 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:2
 
[INFO][2017-07-03 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-03 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?)  tmp_count 
[INFO][2017-07-03 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-03 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id
         
         WHERE b.brand_id = ?) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-07-03 10:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-03 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:
 
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:45:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:45:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:45:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 10:45:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_stores.GetGoodsClassLists: 
select count(0) from (select * from  cds_class)  tmp_count 
[INFO][2017-07-03 10:45:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:45:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_stores.GetGoodsClassLists: 
select tmp.* from (select (row_number() Over(order by listorder asc)) as rownumber, * from  cds_class) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-03 10:45:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:45:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsClassLists: 
select count(0) from (select * from  cds_class)  tmp_count 
[INFO][2017-07-03 10:45:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 10:45:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsClassLists: 
select tmp.* from (select (row_number() Over(order by brand_id asc)) as rownumber, * from  cds_class) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-03 10:45:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 10:45:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_stores.GetGoodsClassLists: 
select count(0) from (select * from  cds_class)  tmp_count 
[INFO][2017-07-03 10:45:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 10:45:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_stores.GetGoodsClassLists: 
select tmp.* from (select (row_number() Over(order by brand_id desc)) as rownumber, * from  cds_class) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-07-03 10:45:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-03 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-03 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:2
 
[INFO][2017-07-03 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[WARN][2017-07-03 10:45:44] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-7 Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'brand_id' is not present 
[INFO][2017-07-03 10:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:12
参数2:3
 
[INFO][2017-07-03 10:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-03 10:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-03 10:45:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:45:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-03 10:45:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:45:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-03 10:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 10:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 10:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:46:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-03 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-03 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:46:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 10:46:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:46:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:2
 
[INFO][2017-07-03 10:46:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:46:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-03 10:46:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:46:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:12
参数2:3
 
[INFO][2017-07-03 10:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-03 10:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 10:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-03 10:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-03 10:46:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:46:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-03 10:46:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:46:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[WARN][2017-07-03 10:47:58] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-07-03 10:49:33] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-8001-exec-2 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-07-03 10:49:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:49:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:49:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:49:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:49:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:49:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:49:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 10:49:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 10:49:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-03 10:49:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 10:49:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:49:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:49:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:49:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:49:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-03 10:49:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:49:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 10:49:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:49:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:2
 
[INFO][2017-07-03 10:49:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:49:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-03 10:49:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:49:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:12
参数2:3
 
[INFO][2017-07-03 10:49:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 10:49:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-03 10:49:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:49:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-03 10:49:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:49:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
参数2:12
 
[INFO][2017-07-03 10:49:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:49:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-03 10:49:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:49:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-03 10:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:50:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:50:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:50:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 10:50:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 10:50:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:1
 
[INFO][2017-07-03 10:50:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 10:50:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 10:50:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:50:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 10:50:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:50:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-03 10:50:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:50:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 10:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:2
 
[INFO][2017-07-03 10:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:50:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-03 10:50:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:50:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:12
参数2:3
 
[INFO][2017-07-03 10:50:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 10:50:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-03 10:50:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:50:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-03 10:50:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:50:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-03 10:50:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:50:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-03 10:50:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:50:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-03 10:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 10:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:50:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 10:50:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:50:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-03 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-03 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:2
 
[INFO][2017-07-03 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:50:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-03 10:50:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:50:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:12
参数2:3
 
[INFO][2017-07-03 10:50:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 10:50:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-03 10:50:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:50:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-03 10:50:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:50:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
参数2:12
 
[INFO][2017-07-03 10:50:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:50:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-03 10:50:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:50:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-03 10:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:12
参数2:3
 
[INFO][2017-07-03 10:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 10:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-03 10:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-03 10:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:51:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
参数2:12
 
[INFO][2017-07-03 10:51:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:51:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 10:51:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:51:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 10:51:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:51:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-03 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-03 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:2
 
[INFO][2017-07-03 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:51:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-03 10:51:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:51:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:12
参数2:3
 
[INFO][2017-07-03 10:51:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 10:51:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-03 10:51:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:51:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-03 10:51:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:51:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
参数2:12
 
[INFO][2017-07-03 10:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-03 10:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:51:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-03 10:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 10:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 10:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 10:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 10:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 10:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
 
[INFO][2017-07-03 10:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 10:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-03 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-03 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:2
 
[INFO][2017-07-03 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-03 10:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:12
参数2:3
 
[INFO][2017-07-03 10:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 10:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-03 10:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-03 10:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:52:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-03 10:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-03 10:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:52:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-03 10:53:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 10:53:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-03 10:53:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:53:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:12
参数2:3
 
[INFO][2017-07-03 10:53:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:53:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 10:53:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:53:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 10:53:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:53:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 10:53:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:53:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 10:53:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:53:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 10:53:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:53:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 10:53:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:53:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 10:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 10:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 10:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-03 10:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 10:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 10:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 10:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:53:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-03 10:53:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:53:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:2
 
[INFO][2017-07-03 10:53:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:53:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-03 10:53:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:53:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:12
参数2:3
 
[INFO][2017-07-03 10:53:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 10:53:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-03 10:53:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:53:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-03 10:53:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:53:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-03 10:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-03 10:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:53:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-03 10:54:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:54:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:54:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:54:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:54:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:54:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 10:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-03 10:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 10:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 10:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 10:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 10:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:54:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-03 10:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:2
 
[INFO][2017-07-03 10:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:54:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-03 10:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 10:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-03 10:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:12
参数2:3
 
[INFO][2017-07-03 10:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 10:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:54:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 10:54:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:54:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-03 10:54:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:54:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-03 10:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 10:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 10:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:55:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 10:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 10:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 10:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-03 10:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 10:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 10:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 10:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-03 10:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:55:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:2
 
[INFO][2017-07-03 10:55:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:55:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-03 10:55:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:55:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:12
参数2:3
 
[INFO][2017-07-03 10:55:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 10:55:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-03 10:55:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:55:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-03 10:55:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:55:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-03 10:55:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:55:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-03 10:55:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:55:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-03 10:56:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


         WHERE parentid = ? 
         
            ORDER BY id 
[INFO][2017-07-03 10:56:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:9001
 
[INFO][2017-07-03 10:56:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE city = ? 
         
            ORDER BY stores_id 
[INFO][2017-07-03 10:56:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:9001
 
[INFO][2017-07-03 10:56:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:56:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 10:56:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-07-03 10:56:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:56:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:56:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:56:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:56:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 10:56:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:56:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 10:56:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:56:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 10:56:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:56:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:56:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 10:56:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:1
 
[INFO][2017-07-03 10:56:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 10:56:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 10:56:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:56:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 10:56:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:56:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:1
 
[INFO][2017-07-03 10:56:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:56:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 10:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:2
 
[INFO][2017-07-03 10:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-03 10:56:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 10:56:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-03 10:56:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:56:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:12
参数2:3
 
[INFO][2017-07-03 10:56:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:56:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-03 10:56:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:56:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-03 10:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-03 10:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:3
 
[INFO][2017-07-03 10:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 10:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 10:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-03 10:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 10:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 10:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 10:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-03 10:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 10:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:2
 
[INFO][2017-07-03 10:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-03 10:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:12
参数2:3
 
[INFO][2017-07-03 10:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 10:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
 
[INFO][2017-07-03 10:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-03 10:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
参数2:12
 
[INFO][2017-07-03 10:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-03 10:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:56:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-03 10:58:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:58:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 10:58:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:58:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 10:58:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select count(0) from (select
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id)  tmp_count 
[INFO][2017-07-03 10:58:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 10:58:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetGoodsClassList: 
select tmp.* from (select (row_number() Over(order by a.stores_class_id desc)) as rownumber,
              a.stores_class_id,
              c.class_id,
              c.class_name,
              c.listorder,
              a.stores_brand_id,
              b.elem_restaurant_id,
              b.meituan_restaurant_id,
              a.type,
              c.brand_id,
              d.name,
              a.food_category_id,
              a.meituan_cat_id
              from cds_stores_class a
              left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
              left join cds_class c on a.class_id = c.class_id
              left join cds_stores d on b.stores_id=d.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:58:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 10:58:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:58:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-03 10:58:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:58:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:2
 
[INFO][2017-07-03 10:58:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:58:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-03 10:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-03 10:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:58:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-03 10:58:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:58:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 10:58:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:58:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 10:58:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:58:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 10:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 10:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:1
 
[INFO][2017-07-03 10:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2  
[INFO][2017-07-03 10:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 10:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-03 10:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1  
[INFO][2017-07-03 10:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:58:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 10:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:1
 
[INFO][2017-07-03 10:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:2
 
[INFO][2017-07-03 10:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:58:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-03 10:58:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 10:58:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-03 10:58:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:58:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:12
参数2:3
 
[INFO][2017-07-03 10:58:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:58:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-03 10:58:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:58:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
参数2:12
 
[INFO][2017-07-03 10:58:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:58:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-03 10:58:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:58:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-03 10:59:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:59:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:59:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:59:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:59:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:59:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 10:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 10:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 10:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 10:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-03 10:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 10:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 10:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 10:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 10:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-03 10:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 10:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 10:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:2
 
[INFO][2017-07-03 10:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 10:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-03 10:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 10:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:12
参数2:3
 
[INFO][2017-07-03 10:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 10:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-03 10:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 10:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 10:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
参数2:12
 
[INFO][2017-07-03 10:59:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 10:59:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-03 10:59:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 10:59:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
 
[INFO][2017-07-03 11:00:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:00:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 11:00:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:00:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 11:00:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 11:00:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 11:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 11:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-03 11:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 11:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 11:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 11:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 11:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 11:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 11:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 11:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 11:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-03 11:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 11:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:2
 
[INFO][2017-07-03 11:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 11:00:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-03 11:00:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 11:00:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 11:00:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:12
参数2:3
 
[INFO][2017-07-03 11:00:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:3
 
[INFO][2017-07-03 11:00:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 11:00:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-03 11:00:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 11:00:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-03 11:00:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 11:00:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-03 11:00:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 11:00:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-03 11:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 11:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 11:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 11:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 11:01:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 11:01:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 11:01:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 11:01:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-03 11:01:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 11:01:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 11:01:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 11:01:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 11:01:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 11:01:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-03 11:01:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:01:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 11:01:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 11:01:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:2
 
[INFO][2017-07-03 11:01:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 11:01:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-03 11:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 11:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:12
参数2:3
 
[INFO][2017-07-03 11:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 11:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-03 11:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 11:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-03 11:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 11:01:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:3
参数2:12
 
[INFO][2017-07-03 11:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 11:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-03 11:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 11:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-03 11:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 11:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 11:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 11:14:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 11:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 11:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 11:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 11:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-03 11:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 11:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 11:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 11:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 11:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 11:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-03 11:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 11:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 11:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:2
 
[INFO][2017-07-03 11:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 11:14:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
 
[INFO][2017-07-03 11:15:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:15:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 11:15:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:15:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 11:15:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 11:15:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8  
[INFO][2017-07-03 11:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 11:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4  
[INFO][2017-07-03 11:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 11:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:1
 
[INFO][2017-07-03 11:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 11:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 11:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 11:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6  
[INFO][2017-07-03 11:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 11:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:1
 
[INFO][2017-07-03 11:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3  
[INFO][2017-07-03 11:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 11:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:2
 
[INFO][2017-07-03 11:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-4 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 11:15:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-4 参数1:3
 
[INFO][2017-07-03 11:15:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 11:15:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-03 11:15:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 11:15:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5 参数1:12
参数2:3
 
[INFO][2017-07-03 11:15:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 11:15:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-03 11:15:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 11:15:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:3
参数2:12
 
[INFO][2017-07-03 11:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 11:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-03 11:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 11:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7 参数1:3
 
[INFO][2017-07-03 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
参数2:3
 
[INFO][2017-07-03 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:1
参数2:3
 
[INFO][2017-07-03 11:15:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 11:15:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:1
参数2:3
 
[INFO][2017-07-03 11:15:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-3 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ? 
            
            
            
                
                    AND (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 11:15:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-3 参数1:1
参数2:3
 
[INFO][2017-07-03 11:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 11:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 11:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 11:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-5  
[INFO][2017-07-03 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10  
[INFO][2017-07-03 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9 参数1:1
 
[INFO][2017-07-03 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-7 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-7  
[INFO][2017-07-03 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:1
 
[INFO][2017-07-03 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-9  
[INFO][2017-07-03 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:2
 
[INFO][2017-07-03 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-10 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-10 参数1:3
 
[INFO][2017-07-03 11:22:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE stores_id = ?
            and
                brand_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-07-03 11:22:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-1 参数1:12
参数2:3
 
[INFO][2017-07-03 11:22:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


         WHERE brand_id = ? 
         
            ORDER BY class_id 
[INFO][2017-07-03 11:22:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-2 参数1:3
 
[INFO][2017-07-03 11:22:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 11:22:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-03 11:22:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-8 cds_ptstores_manage.GetStoresGoodsList: 
select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id
         
         WHERE a.brand_id = ?

                
            
            
                
                    AND (
                         a.stores_id = ?
                      ) 
[INFO][2017-07-03 11:22:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-8 参数1:3
参数2:12
 
[INFO][2017-07-03 11:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      ))  tmp_count 
[INFO][2017-07-03 11:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-03 11:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-80-exec-6 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE  (
                         c.brand_id = ?
                      )) tmp where tmp.rownumber between 1 and 5 
[INFO][2017-07-03 11:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-80-exec-6 参数1:3
 
[INFO][2017-07-03 11:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-07-03 11:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:chenbin
 
[INFO][2017-07-03 11:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 11:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:351
参数2:1032
 
[INFO][2017-07-03 11:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 11:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:352
参数2:1032
 
[INFO][2017-07-03 11:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 11:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:376
参数2:1032
 
[INFO][2017-07-03 11:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 11:23:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:378
参数2:1032
 
[INFO][2017-07-03 11:23:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 11:23:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:382
参数2:1032
 
[INFO][2017-07-03 11:23:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 11:23:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:353
参数2:1032
 
[INFO][2017-07-03 11:23:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 11:23:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:372
参数2:1032
 
[INFO][2017-07-03 11:23:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 11:23:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:354
参数2:1032
 
[INFO][2017-07-03 11:23:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 11:23:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:355
参数2:1032
 
[INFO][2017-07-03 11:23:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-07-03 11:23:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:356
参数2:1032
 
[INFO][2017-07-03 11:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-07-03 11:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-6 参数1:9
 
[INFO][2017-07-03 11:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-07-03 11:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:9
参数2:2017-07-03
参数3:2017-07-03
参数4:9
参数5:2017-07-03
参数6:2017-07-03
参数7:9
参数8:2017-07-03
参数9:2017-07-03
参数10:9
参数11:2017-07-03
参数12:2017-07-03
参数13:9
参数14:2017-07-03
参数15:2017-07-03
参数16:9
参数17:2017-07-03
参数18:2017-07-03
 
[INFO][2017-07-03 11:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-9 cds_home.getdoOrderCount: 
select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin

            union all
            select fromin,sum(sum1) as sum1,sum(order_count) as sum2,sum(sum1)/sum(order_count) as sum3,sum(income) as income,'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,income,fromin,1 as order_count from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'
            and order_status !=99
            and a.stores_id =?
            ) temp
            group by temp.fromin 
[INFO][2017-07-03 11:23:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-9 参数1:2017-07-03
参数2:2017-07-03
参数3:9
参数4:2017-07-02
参数5:2017-07-02
参数6:9
参数7:2017-06-26
参数8:2017-06-26
参数9:9
 
[INFO][2017-07-03 11:23:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:23:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-03 11:23:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:23:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-03 11:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 11:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-10  
[INFO][2017-07-03 11:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_goods_info
             


         WHERE status = ? 
         
            ORDER BY good_id 
[INFO][2017-07-03 11:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2 参数1:1
 
[INFO][2017-07-03 11:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-07-03 11:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1  
[INFO][2017-07-03 11:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-07-03 11:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-2  
[INFO][2017-07-03 11:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
[INFO][2017-07-03 11:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-1 参数1:1
 
[INFO][2017-07-03 11:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select count(0) from (select a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id)  tmp_count 
[INFO][2017-07-03 11:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-03 11:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-3 cds_ptstores_manage.GetStoresGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, a.sgl_id,
              b.good_name,
              c.class_name,
              a.elem_count,
              a.mt_count,
              a.wx_count,
              a.market_price,
              a.unit,
              a.box_price,
              a.box_count,
              a.status
              from cds_stores_goods_list a
              left join cds_goods_info b on a.good_id=b.good_id
              left join cds_class c on b.class_id=c.class_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-07-03 11:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:171) http-nio-8001-exec-3  
[INFO][2017-07-03 11:23:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:130) http-nio-8001-exec-1 cds_ptstores_manage.GetStoresTree: 
select (c.stores_id)as id ,(c.name)as text,'icon icon-367' as iconCls, a.elem_restaurant_id,a.meituan_restaurant_id,a.stores_brand_id from cds_stores_brand a
               left join cds_brand b on a.brand_id=b.brand_id
               left join cds_stores c on a.stores_id=c.stores_id
               where a.brand_id = ? 
